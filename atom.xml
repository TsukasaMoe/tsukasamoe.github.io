<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tsukasa の 部屋</title>
  
  <subtitle>本当に萌え萌えだぜ</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.tsukasa.moe/"/>
  <updated>2023-07-14T06:33:10.829Z</updated>
  <id>http://blog.tsukasa.moe/</id>
  
  <author>
    <name>Tsukasa</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用Github和PicGo搭建图床</title>
    <link href="http://blog.tsukasa.moe/2023/07/14/Use-Github-and-PicGo-to-integrate-picture-bed/"/>
    <id>http://blog.tsukasa.moe/2023/07/14/Use-Github-and-PicGo-to-integrate-picture-bed/</id>
    <published>2023-07-14T04:59:05.000Z</published>
    <updated>2023-07-14T06:33:10.829Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文记录自己使用Github和PicGo搭建图床，手机使用，以及一些个性化配置，方便在新环境重新搭建。</p><p>使用到的几个工具：</p><p>PicGo: 一个用于快速上传图片并获取图片 URL 链接的工具。<br>Github：在这里作为图床，用于存储图片<br>Flutter-PicGo: 一个用于快速上传图片并获取图片URL链接的手机版工具，这里用于手机<del>涩图</del>图片的保存<br>JSDeliver：一个用于开源项目的免费CDN，这里用于GitHub图床加速，非必须。</p><h1 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h1><p>大致分为3个步骤，具体可以参考官方文档和别人写的博客，很详细了不加赘述。</p><ul><li>Github创建图床仓库，生成并记录Access token</li><li>PicGo上配置GitHub的图床仓库，配置access token用于图床仓库的访问</li><li>Flutter-PicGo安装到手机上，扫描PicGo PC端生成的配置二维码完成手机端配置</li></ul><p>教程参考：</p><p><a href="https://picgo.github.io/PicGo-Doc/zh/guide/config.html#github%E5%9B%BE%E5%BA%8A" target="_blank" rel="external">官方教程搭建GitHub图床</a><br><a href="https://zhuanlan.zhihu.com/p/347342082" target="_blank" rel="external">如何利用 Github 搭建自己的免费图床？</a></p><p>搭建过程中如果不熟悉，可以不用一步到位，可以先默认，配置成功后在自定义，配置CDN加速。</p><h1 id="个性化配置"><a href="#个性化配置" class="headerlink" title="个性化配置"></a>个性化配置</h1><h2 id="PC端"><a href="#PC端" class="headerlink" title="PC端"></a>PC端</h2><h3 id="GitHub图床配置"><a href="#GitHub图床配置" class="headerlink" title="GitHub图床配置"></a>GitHub图床配置</h3><p>Gihub配置示例：</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/erocutewifes/202307141357926.png" alt=""></p><p>CDN加速地址：<code>https://cdn.jsdelivr.net/gh/{GitHub帐户}/{图床仓库名}</code><br><code>https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe</code></p><p>GitHub个人图床：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/TsukasaMoe/PicturesOfTsukasaMoe.git</span><br><span class="line">git@github.com:TsukasaMoe/PicturesOfTsukasaMoe.git</span><br></pre></td></tr></table></figure></p><p>下面的是个人的配置，在上传图片之前选定对应的配置，这样就能够传到对应的目录下了。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">"github": &#123;</span><br><span class="line">     "configList": [</span><br><span class="line">       &#123;</span><br><span class="line">         <span class="attr">"_configName"</span>: <span class="string">"色气可爱的老婆们"</span>,</span><br><span class="line">         <span class="attr">"repo"</span>: <span class="string">"TsukasaMoe/PicturesOfTsukasaMoe"</span>,</span><br><span class="line">         <span class="attr">"branch"</span>: <span class="string">"main"</span>,</span><br><span class="line">         <span class="attr">"token"</span>: <span class="string">"Github生成的Access token，请替换"</span>,</span><br><span class="line">         <span class="attr">"path"</span>: <span class="string">"erocutewifes/"</span>,</span><br><span class="line">         <span class="attr">"_id"</span>: <span class="string">"c3778d30-bc65-4836-8bf6-418b3eeea128"</span>,</span><br><span class="line">         <span class="attr">"_createdAt"</span>: <span class="number">1689265763160</span>,</span><br><span class="line">         <span class="attr">"_updatedAt"</span>: <span class="number">1689266184223</span>,</span><br><span class="line">         <span class="attr">"customUrl"</span>: <span class="string">"https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe"</span></span><br><span class="line">       &#125;,</span><br><span class="line">       &#123;</span><br><span class="line">         <span class="attr">"_configName"</span>: <span class="string">"headers"</span>,</span><br><span class="line">         <span class="attr">"repo"</span>: <span class="string">"TsukasaMoe/PicturesOfTsukasaMoe"</span>,</span><br><span class="line">         <span class="attr">"branch"</span>: <span class="string">"main"</span>,</span><br><span class="line">         <span class="attr">"token"</span>: <span class="string">"Github生成的Access token，请替换"</span>,</span><br><span class="line">         <span class="attr">"path"</span>: <span class="string">"headers/"</span>,</span><br><span class="line">         <span class="attr">"_id"</span>: <span class="string">"ed98bed1-a665-45d9-a352-7c53d4b854f1"</span>,</span><br><span class="line">         <span class="attr">"_createdAt"</span>: <span class="number">1689268245274</span>,</span><br><span class="line">         <span class="attr">"_updatedAt"</span>: <span class="number">1689268260929</span>,</span><br><span class="line">         <span class="attr">"customUrl"</span>: <span class="string">"https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe"</span></span><br><span class="line">       &#125;,</span><br><span class="line">       &#123;</span><br><span class="line">         <span class="attr">"_configName"</span>: <span class="string">"others"</span>,</span><br><span class="line">         <span class="attr">"repo"</span>: <span class="string">"TsukasaMoe/PicturesOfTsukasaMoe"</span>,</span><br><span class="line">         <span class="attr">"branch"</span>: <span class="string">"main"</span>,</span><br><span class="line">         <span class="attr">"token"</span>: <span class="string">"Github生成的Access token，请替换"</span>,</span><br><span class="line">         <span class="attr">"path"</span>: <span class="string">"/others"</span>,</span><br><span class="line">         <span class="attr">"_id"</span>: <span class="string">"a9181327-92e2-4d2a-b16f-89c5a216e87f"</span>,</span><br><span class="line">         <span class="attr">"_createdAt"</span>: <span class="number">1689268305137</span>,</span><br><span class="line">         <span class="attr">"_updatedAt"</span>: <span class="number">1689268315947</span>,</span><br><span class="line">         <span class="attr">"customUrl"</span>: <span class="string">"https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe"</span></span><br><span class="line">       &#125;,</span><br><span class="line">       &#123;</span><br><span class="line">         <span class="attr">"_configName"</span>: <span class="string">"icons"</span>,</span><br><span class="line">         <span class="attr">"repo"</span>: <span class="string">"TsukasaMoe/PicturesOfTsukasaMoe"</span>,</span><br><span class="line">         <span class="attr">"branch"</span>: <span class="string">"main"</span>,</span><br><span class="line">         <span class="attr">"token"</span>: <span class="string">"Github生成的Access token，请替换"</span>,</span><br><span class="line">         <span class="attr">"path"</span>: <span class="string">"icons/"</span>,</span><br><span class="line">         <span class="attr">"customUrl"</span>: <span class="string">"https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe"</span>,</span><br><span class="line">         <span class="attr">"_id"</span>: <span class="string">"648c75e8-020f-40c5-ac38-565e94eaa9bc"</span>,</span><br><span class="line">         <span class="attr">"_createdAt"</span>: <span class="number">1689268367750</span>,</span><br><span class="line">         <span class="attr">"_updatedAt"</span>: <span class="number">1689268367750</span></span><br><span class="line">       &#125;,</span><br><span class="line">       &#123;</span><br><span class="line">         <span class="attr">"_configName"</span>: <span class="string">"tech"</span>,</span><br><span class="line">         <span class="attr">"customUrl"</span>: <span class="string">"https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe"</span>,</span><br><span class="line">         <span class="attr">"path"</span>: <span class="string">"tech/"</span>,</span><br><span class="line">         <span class="attr">"repo"</span>: <span class="string">"TsukasaMoe/PicturesOfTsukasaMoe"</span>,</span><br><span class="line">         <span class="attr">"branch"</span>: <span class="string">"main"</span>,</span><br><span class="line">         <span class="attr">"token"</span>: <span class="string">"Github生成的Access token，请替换"</span>,</span><br><span class="line">         <span class="attr">"_id"</span>: <span class="string">"b39774a6-1015-4f88-8f51-102877a5282e"</span>,</span><br><span class="line">         <span class="attr">"_createdAt"</span>: <span class="number">1689303337162</span>,</span><br><span class="line">         <span class="attr">"_updatedAt"</span>: <span class="number">1689303337162</span></span><br><span class="line">       &#125;</span><br><span class="line">     ],</span><br><span class="line">     "defaultId": "c3778d30-bc65-4836-8bf6-418b3eeea128"</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="PicGo配置"><a href="#PicGo配置" class="headerlink" title="PicGo配置"></a>PicGo配置</h3><p>PicGo配置文件地址：<code>%APPDATA%\picgo\data.json</code></p><p>PicGo客户端个性化配置：</p><ul><li>开机自启</li><li>时间戳重命名</li><li>Mini窗口置顶：悬浮球置顶，上传图片可以直接拖拽进去</li><li>上传后自动复制URL</li><li>选择显示图床只勾选使用的</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307141350496.png" alt="PicGo客户端个性化配置"></p><p>热键默认为Ctrl+Shift+P，可以重新设置</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307141400277.png" alt="热键默认为Ctrl+Shift+P，可以重新设置"></p><h2 id="Android端"><a href="#Android端" class="headerlink" title="Android端"></a>Android端</h2><h3 id="图床设置-GitHub"><a href="#图床设置-GitHub" class="headerlink" title="图床设置 - GitHub"></a>图床设置 - GitHub</h3><p>打开图床配置二维码，或者将github图床配置信息导出填写好，通过<a href="https://cli.im/" target="_blank" rel="external">草料</a>转换成二维码，APP中扫码配置即可。</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307141412478.png" alt=""></p><h3 id="App内进行PicGo设置"><a href="#App内进行PicGo设置" class="headerlink" title="App内进行PicGo设置"></a>App内进行PicGo设置</h3><ul><li>设置时间戳重命名</li><li>仅删除本地图片：即删除图片时不会删除图床的照片。</li></ul><p>接下来就可以愉快的上传你喜欢的涩图啦w</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307141418757.jpg" alt=""></p><h1 id="使用心得"><a href="#使用心得" class="headerlink" title="使用心得"></a>使用心得</h1><p>快捷的上传方式</p><ul><li>做好个性化设置后，只要选中图片，或者剪切板复制了图片，又或者是复制了网上的图片链接，选好图床配置（上传到的图床目录），直接执行热键即可马上传输，传输完成后会自动复制上传好的图片地址到剪切板。</li><li>拖拽到图标、拖拽到图片上传区，或者传统的打开文件系统选择图片，都可以实现上传。</li></ul><p>相册管理页面：可以实现上传图片的预览，以及复制从PicGo PC端上传的图片，删除是仅将预览删除，不会删除远端图床的图片，如果想要删除，需要手动执行git命令删除，然后推送到远端。</p><p>手机端使用：通常手机内存有限，如果发现有好的涩图，需要保存起来可以暂时把GitHub图传作为一个中转站，当然建议定期复制图片到硬盘或同步到网盘更好。</p><p>注意：GitHub图床设置为公开，所以尽量不要上传带有个人隐私、安全等相关图片，避免泄露。</p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="https://github.com/PicGo/PicGo-Core" target="_blank" rel="external">PicGo项目的GitHub仓库</a><br><a href="https://github.com/PicGo/flutter-picgo" target="_blank" rel="external">Flutter-PicGo手机app</a><br><a href="https://picgo.github.io/PicGo-Core-Doc/" target="_blank" rel="external">PicGo插件开发指南</a><br><a href="https://github.com/PicGo/Awesome-PicGo" target="_blank" rel="external">PicGo插件列表合集</a><br><a href="https://www.jsdelivr.com/?docs=gh" target="_blank" rel="external">JSDeliver官网</a></p><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;\assets\js\APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;本文记录自己使用Github和PicGo搭建图床，手机使用，以及一些个性化配置，方便在新环境重新搭建。&lt;/p&gt;
    
    </summary>
    
      <category term="图床" scheme="http://blog.tsukasa.moe/categories/%E5%9B%BE%E5%BA%8A/"/>
    
    
      <category term="GitHub" scheme="http://blog.tsukasa.moe/tags/GitHub/"/>
    
      <category term="PicGo" scheme="http://blog.tsukasa.moe/tags/PicGo/"/>
    
  </entry>
  
  <entry>
    <title>记录Git一些常用的命令</title>
    <link href="http://blog.tsukasa.moe/2023/07/10/record-some-normal-command-of-git/"/>
    <id>http://blog.tsukasa.moe/2023/07/10/record-some-normal-command-of-git/</id>
    <published>2023-07-10T09:08:59.000Z</published>
    <updated>2023-07-13T17:28:58.890Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><p>平常工作经常需要与Git打交道，记录一些常用的命令和使用场景。</p><h1 id="GitHub配置公钥用于下载代码仓"><a href="#GitHub配置公钥用于下载代码仓" class="headerlink" title="GitHub配置公钥用于下载代码仓"></a>GitHub配置公钥用于下载代码仓</h1><p>如果代码要同步到远程仓库，需要在远程代码仓库托管平台（如Gitlab, GitHub, Gitee）要添加本地公钥，基本步骤是本地生成一对RSA密钥，然后将公钥添加到远程仓库代码托管平台。<br>下面以Github为例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 1.配置用户名和邮箱地址，提交代码时的用户，与代码托管平台如github的账户无关联</span><br><span class="line">git config --global user.name "xxx"</span><br><span class="line">git config --global user.email "xxx@xx.com"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 2.本地生成RSA私钥对</span><br><span class="line">ssh-keygen -t rsa -C "example@xx.com"</span><br><span class="line"><span class="meta">#</span> 或者采用</span><br><span class="line">ssh-keygen -m PEM -t rsa -b 4096 -C "example@xx.com"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 3.代码托管平台添加rsa公钥id_rsa.pub</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 4.验证配置结果</span><br><span class="line"><span class="meta">$</span> ssh -T git@github.com</span><br><span class="line">Hi TsukasaMoe! You've successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><p><strong>1.第一次同步远程仓库代码</strong></p><p>生成新密钥，在GitHub配置好公钥后，第一次用git clone拉取代码仓时可能会遇到下面提示：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host 'github.com (20.205.243.166)' can't be established.</span><br><span class="line">ECDSA key fingerprint is SHA256:p2QAMXNIC1TJYWeIOttrVc98/R1BUFWu3/LiyKgUfQM.</span><br><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])?</span><br></pre></td></tr></table></figure><p>原因是rsa密钥对所在目录~/.ssh下没有known_hosts文件，输入yes即可生成。</p><p><strong>2.Git bash中文乱码问题</strong></p><p>如果有中文乱码问题可以设置下编码格式：</p><ol><li>Git bash 中右键，选择“Option”</li><li>选择“Text”,设置字符编码为UTF-8</li></ol><h1 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h1><p>global：配置文件在~/.gitconfig文件下<br>system：用户级别<br>local：项目级别，在当前项目的.git/config文件下</p><p>配置优先级别：local&gt;system&gt;global</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --local user.name "xxx"</span><br><span class="line">git config --local user.email "xxx@xx.com"</span><br></pre></td></tr></table></figure><h1 id="分支-git-branch"><a href="#分支-git-branch" class="headerlink" title="分支 git branch"></a>分支 git branch</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 查看分支</span><br><span class="line">git branch</span><br><span class="line">git branch -a</span><br><span class="line">git branch -av</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 克隆仓库到本地</span><br><span class="line">git clone git@github.com:square/okhttp.git</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 查看分支最后一次提交</span><br><span class="line">git branch -v</span><br><span class="line"><span class="meta">#</span> 查看本地分支关联的远程仓库</span><br><span class="line">git branch -vv</span><br><span class="line">git remote show origin</span><br><span class="line">cat .git/config</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 创建分支</span><br><span class="line">git branch mybranch</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 重命名分支</span><br><span class="line">git branch -m mybranch dev</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 切换分支</span><br><span class="line">git checkout mybranch</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 删除分支</span><br><span class="line">git branch -d mybranch</span><br><span class="line"><span class="meta">#</span> 强制删除分支</span><br><span class="line">git branch -D mybranch</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 关联当前分支到远程分支</span><br><span class="line">git branch --set-upstream-to=origin&lt;分支名称&gt;</span><br><span class="line"><span class="meta">#</span> 示例：git branch --set-upstream debug origin/debug</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 创建并切换分支：https://www.cnblogs.com/mcat/p/5831212.html</span><br><span class="line">git checkout -b mybranch</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 拉取远程分支最新内容</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><h1 id="标签-git-tag"><a href="#标签-git-tag" class="headerlink" title="标签 git tag"></a>标签 git tag</h1><p>项目发布时，一般会打标签标明版本，针对整个项目，与具体分支无关。</p><p>.git/refs/tags下记录了创建的标签</p><p>简单标签：只存储commit的sha1值<br>带注释的标签：存储了带注释的信息，包含commit的sha1值（创建一个新的commit）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 打简单标签</span><br><span class="line">git tag v1.0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 打标签加注释</span><br><span class="line">git tag -a xxx -m "xxx"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 误打标签</span><br><span class="line">git tag v2.0 v1.0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 查询标签</span><br><span class="line">git tag -l</span><br><span class="line">git show v1.0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 支持通配符进行查询</span><br><span class="line">git tag -l '1.*'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 删除标签，远程仓库可以直接在托管平台删除或创建标签</span><br><span class="line">git push origin :refs/tags/v1.0</span><br><span class="line"><span class="meta">#</span> 将远程的标签删除后，本地无法感知，可通过下面命令手动删除</span><br><span class="line">git tag -d v1.0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 推送所有tags变更到远端</span><br><span class="line">git push --tags</span><br><span class="line"><span class="meta">#</span> 只推送某些标签到远端</span><br><span class="line">git push origin v1.0</span><br><span class="line">git push origin v1.0 v2.0</span><br><span class="line"><span class="meta">#</span> 完整写法</span><br><span class="line">git push origin refs/tags/v1.0:refs/tags/v1.0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 只获取远程标签</span><br><span class="line">git fetch origin tag v1.0</span><br><span class="line">git fetch origin tag</span><br></pre></td></tr></table></figure><h1 id="分支合并与冲突"><a href="#分支合并与冲突" class="headerlink" title="分支合并与冲突"></a>分支合并与冲突</h1><p>分支：一个commit链，一条工作线。</p><p><strong>1.合并无冲突场景：</strong><br>如果一个分支靠前（dev），另一个分支落后（master），master合并dev分支后直接追赶上dev分支，成为fast forward。可以用git log查看commit id变化情况。</p><p>fast forward本质是分支指针的移动。</p><ul><li>两个分支fast forward归于一点，指向同一个commit</li><li>没有分支信息（丢失分支信息）</li></ul><p>git在merge时，默认使用fast forward，也可以禁止：git merge –no-ff &lt;分支&gt;</p><ul><li>两个分支的fast forward不会归于一点，主动合并的分支会前进一步，指向最新的commit</li><li>分支信息完整（不会丢失分支信息），可以用git log –graph查看</li></ul><p><strong>2.合并有冲突：</strong><br>需要解决冲突：git add xxx, git commit -m “xxx”<br>注意：master在merge时，遇到冲突并解决后，会进行2次提交，1次是最终提交，另一次是将dev分支的提交信息也拿过来。</p><p>如果一个分支落后（dev），另一个分支领先（master），则落后的分支可以直接通过git merge合并领先分支，不会报冲突，也是采用fast forward的方式合并。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#</span> .git文件夹下的HEAD文件记录了当前分支的Head</span><br></pre></td></tr></table></figure><h1 id="版本穿梭"><a href="#版本穿梭" class="headerlink" title="版本穿梭"></a>版本穿梭</h1><p>回退和前进到对应的commit</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 添加到暂存区并提交</span><br><span class="line">git commit -am "xxxx"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 修改上一次提交的commit注释</span><br><span class="line">git commit --amend -m "xxxx"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 回退到上两次commit</span><br><span class="line">git reset --hard HEAD^^</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 回退到上n次commit</span><br><span class="line">git reset --hard HEAD~n</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 回退到某个commit，通过sha1值，无需写完整的commit id</span><br><span class="line">git reset --hard  4c03f5c6</span><br></pre></td></tr></table></figure><p>git reset –hard的后悔药：git reflog<br>git reflog记录了git的所有操作，包括commit，reset等，找到需要回退到的commit id，使用git reset –hard进行回退。</p><h1 id="git-checkout的放弃与游离操作"><a href="#git-checkout的放弃与游离操作" class="headerlink" title="git checkout的放弃与游离操作"></a>git checkout的放弃与游离操作</h1><p>取消工作区的修改，暂存区的修改会保留<br>git checkout filename</p><p>git reset HEAD filename，将之前增加到暂存区的内容，回退到工作区。</p><p>git checkout还可以进行版本穿梭（游离状态）</p><p>git checkout <commitid>后</commitid></p><ul><li>修改后必须commit，提交后可以用git branch mybranch &lt;刚才生成的commit id&gt;，生成新分支</li><li>可以用git checkout -b &lt;新分支名称&gt;创建新分支，再进行修改等操作</li></ul><h1 id="git-log操作"><a href="#git-log操作" class="headerlink" title="git log操作"></a>git log操作</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 查看倒数第n次提交 git log -n</span><br><span class="line">git log -1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 查看远程仓库分支的日志</span><br><span class="line">git log refs/remotes/origin/master</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 查看tree和parent对象</span><br><span class="line">git log --pretty=raw &lt;commit&gt;</span><br><span class="line">git log --pretty=raw</span><br></pre></td></tr></table></figure><p>git blame：查询文件编辑历史</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 查看文件的所有提交commit id，以及每一行的作者</span><br><span class="line">git blame 1.txt</span><br></pre></td></tr></table></figure><p>diff: 比较文件<br>git diff: 比较工作区与暂存区中的文件差异，通常用IDE或者beyond compare等软件进行差异比较更直观。<br>git diff –cached：比较对象区和暂存区的差异</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 对象区和暂存区的差异</span><br><span class="line">git diff --cached &lt;commit id&gt;</span><br><span class="line">git diff --cached HEAD</span><br></pre></td></tr></table></figure><h1 id="个人远程仓库回退"><a href="#个人远程仓库回退" class="headerlink" title="个人远程仓库回退"></a>个人远程仓库回退</h1><p>工作中每个人有自己的远程仓库，有时候自己作死做了一些危险的操作，导致个人远程仓库的master分支与主仓库的有差别，不能够发起merge request，需要重写覆盖，下面命令不要在项目的远程仓库执行。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 找到需要回退commitId</span><br><span class="line">git reflog</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 强制回退</span><br><span class="line">git reset --hard &#123;commiId&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 推送到远程仓库</span><br><span class="line">git push -u &#123;远程仓库名&#125; &#123;远程仓库分支&#125; -f </span><br><span class="line">git push -f</span><br></pre></td></tr></table></figure><h1 id="删除github对象区的某个文件"><a href="#删除github对象区的某个文件" class="headerlink" title="删除github对象区的某个文件"></a>删除github对象区的某个文件</h1><p><code>git rm</code>: 如果文件已经在对象区，执行删除操作会放到暂存区。<br>如果想要放回到工作区：<code>git restore --staged &lt;file&gt;</code><br>放回工作区后，如果不想删除文件了：<code>git restore &lt;file&gt;</code><br>放回工作区后，如果想要放回暂存区，可以执行：<code>git add/rm &lt;file&gt;</code></p><p><code>git rm --cache</code>: 仅从索引中（暂存区）删除文件，本地文件（工作区中）保留，适用于不将该文件被版本控制。<br><code>rm</code>: 本地删除文件，但是没有将其从git的记录中删除。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git rm --cached 1.txt</span><br><span class="line">git commit -m &quot;变更描述&quot;</span><br><span class="line">git push origin master</span><br><span class="line"></span><br><span class="line">git rm 1.txt</span><br></pre></td></tr></table></figure><h1 id="保存现场-git-stash"><a href="#保存现场-git-stash" class="headerlink" title="保存现场 git stash"></a>保存现场 git stash</h1><p>如果两个分支不在同一个commit上，暂存区有内容则不能切换分支，可以先commit或者stash后再切换，恢复现场的内容会进入工作区。</p><p>如果两个分支在同一个commit上，在commit之前，可以checkout.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 临时保存到栈中</span><br><span class="line">git stash</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 查看有哪些临时保存内容</span><br><span class="line">git stash list</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 还原最新保存的内容，该保存内容会删除（出栈）</span><br><span class="line">git stash pop</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 还原保存的内容，但是不会将该内容删除（出栈）</span><br><span class="line">git stash apply</span><br><span class="line">git stash apply stash&#123;1&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 删除保存的内容</span><br><span class="line">git stash drop stash&#123;0&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 保存现场时可以指定名字</span><br><span class="line">git stash save "mystash"</span><br></pre></td></tr></table></figure><h1 id="远程仓库-git-remote"><a href="#远程仓库-git-remote" class="headerlink" title="远程仓库 git remote"></a>远程仓库 git remote</h1><p>git push：本地提交推送到远程仓库<br>git pull：远程仓库到本地，拉取fetch+合并merge。</p><p>git stash冲突：保存现场后修改了内容并commit，然后再还原现场导致的冲突场景。解决冲突后需要git add，commit。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 设置远程仓库名称为origin，地址（或者https协议）</span><br><span class="line">git remote add origin git@github.com:TsukasaMoe/tsukasamoe.github.io.git</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 推送本地master分支到远程仓库origin，-u表示后续不用加参数，直接git push即可</span><br><span class="line">git push -u origin master</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 查看远程仓库有哪些</span><br><span class="line">git remote show</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 查看具体的远程仓库origin信息，包括查看远程仓库是否有更新</span><br><span class="line">git remote show origin</span><br></pre></td></tr></table></figure><h1 id="本地分支与远程分支关联操作"><a href="#本地分支与远程分支关联操作" class="headerlink" title="本地分支与远程分支关联操作"></a>本地分支与远程分支关联操作</h1><p>三个分支：</p><ul><li>远程分支</li><li>追踪分支：本地的远程分支，或者说感知分支</li><li>本地分支：需要通过追踪分支感知远程分支</li></ul><p>本地创建分支dev，在dev中提交了一些修改后，不能直接git push，解决办法有两种：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 1.本地创建dev分支，在dev中提交了一些修改后，首次push需要先创建远程仓库，并指定远程仓库</span><br><span class="line"><span class="meta">#</span> dev分支是否有修改不是必须的，可以直接推送新分支到远程仓库</span><br><span class="line">git remote add origin git@github.com:TsukasaMoe/tsukasamoe.github.io.git</span><br><span class="line">git push -u origin dev</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 2.将dev分支关联到远程仓库origin</span><br><span class="line">git push --set-upstream origin dev</span><br></pre></td></tr></table></figure><p>首次拉取远程仓库时，可以进行本地分支关联远程分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 方法一：创建分支dev并和远程仓库的dev分支关联</span><br><span class="line">git checkout -b dev origin/dev</span><br><span class="line"><span class="meta">#</span> 方法二：创建追踪分支</span><br><span class="line">git checkout -b test --track origin/dev</span><br><span class="line">git checkout --track origin/dev</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 如果远程有新分支dev2，可以一步到位进行关联，src:desc</span><br><span class="line">git pull origin dev2:dev</span><br></pre></td></tr></table></figure><p>删除远程分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 删除本地分支</span><br><span class="line">git branch -d 分支名</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 将本地分支推送到远程仓库origin下的目标分支</span><br><span class="line">git push origin 本地分支:目标分支</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 删除远端分支</span><br><span class="line"><span class="meta">#</span> 方法一：将远程仓库下的test分支删除，可以理解为本地分支为空，即删除远程分支test</span><br><span class="line">git push origin :test</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 方法二</span><br><span class="line">git push origin --delete 远程分支</span><br></pre></td></tr></table></figure><p>本地通过.git/refs/remote/origin目录进行远端分支的感知，创建一个感知远程仓库分支的本地分支</p><p><code>git fetch origin master:refs/remotes/origin/test</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 检测本地没有关联的远程分支</span><br><span class="line">git remote prune origin --dry-run</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 清理无效的追踪分支</span><br><span class="line">git remote prune origin</span><br></pre></td></tr></table></figure><h1 id="别名-alias"><a href="#别名-alias" class="headerlink" title="别名 alias"></a>别名 alias</h1><p>可以给git的命令取别名，也可以在.gitconfig下配置<br>命令：<br><code>git config --global alias.ch checkout</code></p><h1 id="垃圾回收-git-gc"><a href="#垃圾回收-git-gc" class="headerlink" title="垃圾回收 git gc"></a>垃圾回收 git gc</h1><p>objects、refs中记录了很多commit的sha1值，执行命令<code>git gc</code>压缩.git/refs/到.git/packed-refs，同时.git/objects被压缩后会有2个子目录info、pack</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git gc</span><br></pre></td></tr></table></figure><h1 id="GUI工具"><a href="#GUI工具" class="headerlink" title="GUI工具"></a>GUI工具</h1><p>默认有GUI和gitk等等</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 打开gitk工具</span><br><span class="line">gitk</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 打开git gui工具</span><br><span class="line">git gui</span><br></pre></td></tr></table></figure><h1 id="子模块-git-submodule"><a href="#子模块-git-submodule" class="headerlink" title="子模块 git submodule"></a>子模块 git submodule</h1><p>子模块submodule应用场景：<br>一个仓库中引用另一个仓库的代码。两个子模块之间存在引用关系，例如A模块依赖B模块，那么此时虽然可以通过B模块打个jar包给A模块的开发人员使用，假如此时B模块有功能更新则A模块无法用到最新的功能，或者要依赖于B模块先完成开发，不利于两个模块的并行开发。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 当前项目添加引用子模块submodule的仓库地</span><br><span class="line">git submodule add git@github.com:AobingJava/JavaFamily.git</span><br><span class="line"><span class="meta">#</span> 从工作区添加到暂存区并提交</span><br><span class="line">git add .</span><br><span class="line"><span class="meta">#</span> 或者采用交互式命令</span><br><span class="line">git add -i</span><br><span class="line">git commit -m "添加子模块submodule"</span><br><span class="line"><span class="meta">#</span> 推送到远程仓库</span><br><span class="line">git push</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> A模块引用B模块，要获取B模块的更新，需要进入到子模块B目录下进行git pull</span><br><span class="line">cd B</span><br><span class="line">git pull</span><br><span class="line"><span class="meta">#</span> 此时本地能够感知B库的更新，但是A的远程仓库没法感知B的更新，需要推送到远程端</span><br><span class="line">git commit -am "更新B模块的变化到A的远程仓库"</span><br><span class="line">git push</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 拉取多个子模块的更新场景</span><br><span class="line">git submodule foreach git pull</span><br><span class="line"><span class="meta">#</span> 同上，A的远程要感知其他子模块的更新，需要推送到远端</span><br><span class="line">git commit -am "更新所有子模块的变化到A的远程仓库"</span><br><span class="line">git push</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 拉取一个带submodule的项目</span><br><span class="line">git clone git@github.com:TsukasaMoe/tsukasamoe.github.io.git --recursive</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 删除子模块submodule：暂存区、工作区删除后提交（对象区删除），推送到远端</span><br><span class="line">git rm --cached B .gitmodule</span><br><span class="line">rm -rf B .gitmodule</span><br><span class="line">git add .</span><br><span class="line">git commit -m "删除子模块B"</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p>git裸库：没有工作区的工作仓库，存在于服务端。<br>创建裸库：<code>git init --bare</code></p><h1 id="git-subtree"><a href="#git-subtree" class="headerlink" title="git subtree"></a>git subtree</h1><p>与submodule应用场景类似，但是要双向修改那么可以用subtree</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 父工程中添加子工程</span><br><span class="line">git subtree add -P 子工程仓库地址 子工程仓库下的某个分支名</span><br><span class="line"><span class="meta">#</span> 示例</span><br><span class="line">git subtree add -P git@github.com:AobingJava/JavaFamily.git master</span><br><span class="line"><span class="meta">#</span> 或者先添加一个子仓库</span><br><span class="line">git remote add subProjRep git@github.com:AobingJava/JavaFamily.git</span><br><span class="line">git subtree add -P subProjRep master</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 更新子工程代码</span><br><span class="line">git subtree pull -P 子工程名称 subProjRep master</span><br></pre></td></tr></table></figure><p><strong>子工程修改了，父工程如何感知子工程的修改？</strong></p><ul><li>修改子工程之后push到远端</li><li>本地将子工程的修改更新到父工程中：<code>git subtree pull -P subProj suProj-origin master</code></li><li>父工程中子工程的更新情况推送到父工程的远程仓库</li></ul><p>注意：<br>–squash参数的作用是合并commit，为了防止子工程干扰夫工程，不然git log下父子工程项目下子工程的多次提交会产生干扰，该参数会产生一个新的提交，往前走2步。<br>产生冲突的原因有：</p><ul><li>修改同一个文件同一行</li><li>共同祖先不同</li></ul><p>使用建议：在做subtree时，如果加squash，以后每次都加，如果不加，每次都不要加，避免后续经常产生合并冲突。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote add --prefix 子工程名称 master --squash</span><br><span class="line">git subtree pull -P 子工程名称 subProjRep master --squash</span><br></pre></td></tr></table></figure><p><strong>如何将父工程中子工程的修改推送到真实的子工程仓库上？</strong></p><ul><li>父工程下修改子工程内容</li><li>推送到父工程以及真实的子工程：<ul><li>推送到父工程的仓库：<code>git push</code></li><li>推送到子工程的仓库：<code>git subtree push -P subProj subProj-origin master</code></li></ul></li></ul><h1 id="git-cherry-pick"><a href="#git-cherry-pick" class="headerlink" title="git cherry-pick"></a>git cherry-pick</h1><p>git chery-pick命令用来将某个分支一些提交作为一个新的提交引入到你当前分支上，一个分支上的一些提交可以理解为补丁。<br>如果在某个分支做了一些提交，发现分支选错了，需要将提交复制到正确的分支上，可以使用cherry-pick。</p><p>每次只能复制一个commit，sha1值会改变，可用git log查看。不能跨节点，因为不同祖先会导致冲突。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> dev分支进行了错误的提交，需要删除掉，删除思路：</span><br><span class="line"><span class="meta">#</span> 1.cherry-pick复制到应该编写的分支；2.把写错分支删除（checkout到分支节点，删除分支）</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 1.假如已经在dev中产生了两次提交，commitid分为af2b2c, 14ed1b1c，需要将这2次提交复制到master分支上</span><br><span class="line">git cherry-pick af2b2c</span><br><span class="line">git cherry-pick 14ed1b1c</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 2.原来dev的分支节点为1fab3c，写错分支删除，重新创建dev分支</span><br><span class="line">git checkout 1fab3c</span><br><span class="line">git branch -D dev</span><br><span class="line">git checkout -b dev</span><br></pre></td></tr></table></figure><h1 id="变基-git-rebase"><a href="#变基-git-rebase" class="headerlink" title="变基 git rebase"></a>变基 git rebase</h1><p>git rebase和git merge都可以用来整合不同分支的修改。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">     dev</span><br><span class="line">      ⬇</span><br><span class="line">C1-C2-C4</span><br><span class="line">|</span><br><span class="line">C3-&gt;C5</span><br><span class="line">    ⬆</span><br><span class="line">   master</span><br></pre></td></tr></table></figure><p>如果想要整合dev分支修改到master，使用merge是切换到master分支，然后进行git merge。<br>如果用rebase，则是切换到dev分支，执行<code>git rebase master</code>进行变基，最终会将dev的分叉合入master分支尾部，然后dev指向最新commit节点。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 未在master分支执行git merge的状态</span><br><span class="line"></span><br><span class="line">C1-C2-C4      dev</span><br><span class="line">|             ⬇</span><br><span class="line"><span class="meta">C3-&gt;</span>C5-&gt;C34'-&gt;C6</span><br><span class="line">    ⬆</span><br><span class="line">   master</span><br></pre></td></tr></table></figure><p>注意：git rebase只在本机操作，不要推送到远程仓库，即不要在主分支master上进行git rebase</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 切换到要进行变基的分支</span><br><span class="line">git checkout dev</span><br><span class="line"><span class="meta">#</span> 变基</span><br><span class="line">git rebase master</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 如果提示有冲突类似下面</span><br><span class="line">Tsukasa@DESKTOP-O5RIC6N MINGW64 /d/Server/Test/git_rebase (dev)</span><br><span class="line"><span class="meta">$</span> git rebase master</span><br><span class="line"></span><br><span class="line">Auto-merging a.txt</span><br><span class="line">CONFLICT (content): Merge conflict in a.txt</span><br><span class="line">error: could not apply b822ef0... dev修改</span><br><span class="line">hint: Resolve all conflicts manually, mark them as resolved with</span><br><span class="line">hint: "git add/rm &lt;conflicted_files&gt;", then run "git rebase --continue".</span><br><span class="line">hint: You can instead skip this commit: run "git rebase --skip".</span><br><span class="line">hint: To abort and get back to the state before "git rebase", run "git rebase --abort".</span><br><span class="line">Could not apply b822ef0... dev修改</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 根据上述描述，通常由三种策略</span><br><span class="line"><span class="meta">#</span> 1.解决冲突后，git add和git commit到对象区后，继续执行git rebase --continue，直到所有冲突被解决，rebase结束</span><br><span class="line"><span class="meta">#</span> 2.dev分支的提交冲突是一个commit一个commit进行处理的，某个commit的更新需要忽略，可以执行git rebase --abort</span><br><span class="line"><span class="meta">#</span> 3.如果不想执行git rebase了，可以随时执行git rebase --abort回到执行git rebase之前的状态</span><br><span class="line">git rebase --continue</span><br><span class="line">git rebase --skip</span><br><span class="line">git rebase --abort</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> git rebase完成后，master指向的节点可能会落后于dev，这时在master分支上执行git merge操作让master分支指向HEAD节点</span><br><span class="line">git checkout master</span><br><span class="line">git merge dev</span><br></pre></td></tr></table></figure><h1 id="生产项目分支分配"><a href="#生产项目分支分配" class="headerlink" title="生产项目分支分配"></a>生产项目分支分配</h1><p>dev：开发分支<br>test：开发完毕后，交给测试的分支<br>master：生产阶段<br>bugfix：临时修复bug的分支。</p><p>dev -&gt; test(merge dev) -&gt; master(merge test) -&gt; …</p><p>记录下之前工作时的git协作工作流：</p><ul><li>项目远程主仓库，以及每个人在gitlab上克隆主仓库的项目</li><li>每个人拉取自己私人远程仓库的代码下来</li><li>每个人建立个人远程仓库主分支的跟踪分支，每个开发都在自己的主分支上进行开发</li><li>完成个人开发后往私人远程仓库中推送代码，然后在gitlab上发起merge request请求，code review通过后项目leader合入。</li></ul><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><p><a href="https://www.progit.cn/" target="_blank" rel="external">Pro Git</a></p></li><li><p><a href="https://stackoverflow.com/questions/7438313/pushing-to-git-returning-error-code-403-fatal-http-request-failed" target="_blank" rel="external">Pushing to Git returning Error Code 403 fatal: HTTP request failed</a></p></li></ul><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;\assets\js\APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;平常工作经常需要与Git打交道，记录一些常用的命令和使用场景&lt;/p&gt;
    
    </summary>
    
      <category term="Git" scheme="http://blog.tsukasa.moe/categories/Git/"/>
    
    
      <category term="Git" scheme="http://blog.tsukasa.moe/tags/Git/"/>
    
      <category term="GitHub Pages" scheme="http://blog.tsukasa.moe/tags/GitHub-Pages/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库基础知识总结</title>
    <link href="http://blog.tsukasa.moe/2021/04/18/MySQL-basics-knowledge-summary/"/>
    <id>http://blog.tsukasa.moe/2021/04/18/MySQL-basics-knowledge-summary/</id>
    <published>2021-04-18T15:06:26.000Z</published>
    <updated>2021-04-18T15:20:35.034Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><h1 id="前言-1"><a href="#前言-1" class="headerlink" title="前言"></a>前言</h1><p>这篇文章的内容很基础，主要是MySQL基础、常用命令的收录，算是《MySQL必知必会》的读书笔记，方便自己查阅。</p><h1 id="基础SQL"><a href="#基础SQL" class="headerlink" title="基础SQL"></a>基础SQL</h1><p>三部分：权限管理、库操作、表结构操作、数据操作。</p><p>登录数据库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -h 127.0.0.1 -u root -p;</span><br></pre></td></tr></table></figure></p><p>用户权限：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show grants;</span><br><span class="line">+---------------------------------------------------------------------+</span><br><span class="line">| Grants for root@localhost                                           |</span><br><span class="line">+---------------------------------------------------------------------+</span><br><span class="line">| GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;localhost&apos; WITH GRANT OPTION |</span><br><span class="line">| GRANT PROXY ON &apos;&apos;@&apos;&apos; TO &apos;root&apos;@&apos;localhost&apos; WITH GRANT OPTION        |</span><br><span class="line">+---------------------------------------------------------------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></p><p>1.库操作：</p><p>查看建库语句：<br>show database dbName;</p><p>建库：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create database orders_db01 DEFAULT CHARSET utf8 COLLATE utf8_general_ci;</span><br><span class="line">create database if not exists orders_db02 DEFAULT CHARSET utf8 COLLATE utf8_general_ci;</span><br><span class="line">create database orders_db03;</span><br></pre></td></tr></table></figure></p><p>查库：<br>show databases;<br>use orders_db01;</p><p>删库：<br>drop database dbName;</p><p>备份：<br>mysqldump命令</p><p>恢复：</p><p>source /xxx/dbName_bak_20210418.sql;</p><p>表中删除大量数据可以用optimize table来优化空间。</p><ol><li>表结构操作</li></ol><p>查看有哪些表：<br>show tables;</p><p>查看建表语句：<br>show create tableName;</p><p>查看表列定义：<br>desc tableName;<br>show columns from orders;</p><p>查看数据库服务器状态信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show status;</span><br><span class="line">+-----------------------------------------------+--------------------------------------------------+</span><br><span class="line">| Variable_name                                 | Value                                            |</span><br><span class="line">+-----------------------------------------------+--------------------------------------------------+</span><br><span class="line">| Aborted_clients                               | 0                                                |</span><br><span class="line">| Aborted_connects                              | 0                                                |</span><br><span class="line">| Binlog_cache_disk_use                         | 0                                                |</span><br><span class="line">| Binlog_cache_use                              | 0                                                |</span><br><span class="line">| Binlog_stmt_cache_disk_use                    | 0                                                |</span><br><span class="line">| Binlog_stmt_cache_use                         | 0                                                |</span><br><span class="line">| Bytes_received                                | 1469                                             |</span><br><span class="line">| Bytes_sent                                    | 18536                                            |</span><br><span class="line">| Com_admin_commands                            | 0                                                |</span><br><span class="line">| Com_assign_to_keycache                        | 0                                                |</span><br><span class="line">| Com_alter_db                                  | 0                                                |</span><br><span class="line">| Com_alter_db_upgrade                          | 0                                                |</span><br><span class="line">| Com_alter_event                               | 0                                                |</span><br><span class="line">| Com_alter_function                            | 0                                                |</span><br><span class="line">| Com_alter_instance                            | 0                                                |</span><br><span class="line">| Com_alter_procedure                           | 0                                                |</span><br><span class="line">| Com_alter_server                              | 0                                                |</span><br><span class="line">| Com_alter_table                               | 0                                                |</span><br><span class="line">| Com_alter_tablespace                          | 0                                                |</span><br><span class="line">| Com_alter_user                                | 0                                                |</span><br><span class="line">| Com_analyze                                   | 0                                                |</span><br><span class="line">| Com_begin                                     | 0                                                |</span><br><span class="line">| Com_binlog                                    | 0                                                |</span><br><span class="line">| Com_call_procedure                            | 0                                                |</span><br><span class="line">| Com_change_db                                 | 2                                                |</span><br><span class="line">| Com_change_master                             | 0                                                |</span><br><span class="line">| Com_change_repl_filter                        | 0                                                |</span><br><span class="line">| Com_check                                     | 0                                                |</span><br><span class="line">| Com_checksum                                  | 0                                                |</span><br><span class="line">| Com_commit                                    | 0                                                |</span><br><span class="line">| Com_create_db                                 | 2                                                |</span><br><span class="line">| Com_create_event                              | 0                                                |</span><br><span class="line">| Com_create_function                           | 0                                                |</span><br><span class="line">| Com_create_index                              | 0                                                |</span><br><span class="line">| Com_create_procedure                          | 0                                                |</span><br><span class="line">| Com_create_server                             | 0                                                |</span><br><span class="line">| Com_create_table                              | 1                                                |</span><br><span class="line">| Com_create_trigger                            | 0                                                |</span><br><span class="line">| Com_create_udf                                | 0                                                |</span><br><span class="line">| Com_create_user                               | 0                                                |</span><br><span class="line">| Com_create_view                               | 0                                                |</span><br><span class="line">| Com_dealloc_sql                               | 0                                                |</span><br><span class="line">| Com_delete                                    | 0                                                |</span><br><span class="line">| Com_delete_multi                              | 0                                                |</span><br><span class="line">| Com_do                                        | 0                                                |</span><br><span class="line">| Com_drop_db                                   | 1                                                |</span><br><span class="line">| Com_drop_event                                | 0                                                |</span><br><span class="line">| Com_drop_function                             | 0                                                |</span><br><span class="line">| Com_drop_index                                | 0                                                |</span><br><span class="line">| Com_drop_procedure                            | 0                                                |</span><br><span class="line">| Com_drop_server                               | 0                                                |</span><br><span class="line">| Com_drop_table                                | 1                                                |</span><br><span class="line">| Com_drop_trigger                              | 0                                                |</span><br><span class="line">| Com_drop_user                                 | 0                                                |</span><br><span class="line">| Com_drop_view                                 | 0                                                |</span><br><span class="line">| Com_empty_query                               | 0                                                |</span><br><span class="line">| Com_execute_sql                               | 0                                                |</span><br><span class="line">| Com_explain_other                             | 0                                                |</span><br><span class="line">| Com_flush                                     | 0                                                |</span><br><span class="line">| Com_get_diagnostics                           | 0                                                |</span><br><span class="line">| Com_grant                                     | 0                                                |</span><br><span class="line">| Com_ha_close                                  | 0                                                |</span><br><span class="line">| Com_ha_open                                   | 0                                                |</span><br><span class="line">| Com_ha_read                                   | 0                                                |</span><br><span class="line">| Com_help                                      | 0                                                |</span><br><span class="line">| Com_insert                                    | 0                                                |</span><br><span class="line">| Com_insert_select                             | 0                                                |</span><br><span class="line">| Com_install_plugin                            | 0                                                |</span><br><span class="line">| Com_kill                                      | 0                                                |</span><br><span class="line">| Com_load                                      | 0                                                |</span><br><span class="line">| Com_lock_tables                               | 0                                                |</span><br><span class="line">| Com_optimize                                  | 0                                                |</span><br><span class="line">| Com_preload_keys                              | 0                                                |</span><br><span class="line">| Com_prepare_sql                               | 0                                                |</span><br><span class="line">| Com_purge                                     | 0                                                |</span><br><span class="line">| Com_purge_before_date                         | 0                                                |</span><br><span class="line">| Com_release_savepoint                         | 0                                                |</span><br><span class="line">| Com_rename_table                              | 0                                                |</span><br><span class="line">| Com_rename_user                               | 0                                                |</span><br><span class="line">| Com_repair                                    | 0                                                |</span><br><span class="line">| Com_replace                                   | 0                                                |</span><br><span class="line">| Com_replace_select                            | 0                                                |</span><br><span class="line">| Com_reset                                     | 0                                                |</span><br><span class="line">| Com_resignal                                  | 0                                                |</span><br><span class="line">| Com_revoke                                    | 0                                                |</span><br><span class="line">| Com_revoke_all                                | 0                                                |</span><br><span class="line">| Com_rollback                                  | 0                                                |</span><br><span class="line">| Com_rollback_to_savepoint                     | 0                                                |</span><br><span class="line">| Com_savepoint                                 | 0                                                |</span><br><span class="line">| Com_select                                    | 4                                                |</span><br><span class="line">| Com_set_option                                | 0                                                |</span><br><span class="line">| Com_signal                                    | 0                                                |</span><br><span class="line">| Com_show_binlog_events                        | 0                                                |</span><br><span class="line">| Com_show_binlogs                              | 0                                                |</span><br><span class="line">| Com_show_charsets                             | 0                                                |</span><br><span class="line">| Com_show_collations                           | 0                                                |</span><br><span class="line">| Com_show_create_db                            | 0                                                |</span><br><span class="line">| Com_show_create_event                         | 0                                                |</span><br><span class="line">| Com_show_create_func                          | 0                                                |</span><br><span class="line">| Com_show_create_proc                          | 0                                                |</span><br><span class="line">| Com_show_create_table                         | 2                                                |</span><br><span class="line">| Com_show_create_trigger                       | 0                                                |</span><br><span class="line">| Com_show_databases                            | 4                                                |</span><br><span class="line">| Com_show_engine_logs                          | 0                                                |</span><br><span class="line">| Com_show_engine_mutex                         | 0                                                |</span><br><span class="line">| Com_show_engine_status                        | 0                                                |</span><br><span class="line">| Com_show_events                               | 0                                                |</span><br><span class="line">| Com_show_errors                               | 0                                                |</span><br><span class="line">| Com_show_fields                               | 5                                                |</span><br><span class="line">| Com_show_function_code                        | 0                                                |</span><br><span class="line">| Com_show_function_status                      | 0                                                |</span><br><span class="line">| Com_show_grants                               | 0                                                |</span><br><span class="line">| Com_show_keys                                 | 0                                                |</span><br><span class="line">| Com_show_master_status                        | 0                                                |</span><br><span class="line">| Com_show_open_tables                          | 0                                                |</span><br><span class="line">| Com_show_plugins                              | 0                                                |</span><br><span class="line">| Com_show_privileges                           | 0                                                |</span><br><span class="line">| Com_show_procedure_code                       | 0                                                |</span><br><span class="line">| Com_show_procedure_status                     | 0                                                |</span><br><span class="line">| Com_show_processlist                          | 0                                                |</span><br><span class="line">| Com_show_profile                              | 0                                                |</span><br><span class="line">| Com_show_profiles                             | 0                                                |</span><br><span class="line">| Com_show_relaylog_events                      | 0                                                |</span><br><span class="line">| Com_show_slave_hosts                          | 0                                                |</span><br><span class="line">| Com_show_slave_status                         | 0                                                |</span><br><span class="line">| Com_show_status                               | 2                                                |</span><br><span class="line">| Com_show_storage_engines                      | 0                                                |</span><br><span class="line">| Com_show_table_status                         | 0                                                |</span><br><span class="line">| Com_show_tables                               | 3                                                |</span><br><span class="line">| Com_show_triggers                             | 0                                                |</span><br><span class="line">| Com_show_variables                            | 0                                                |</span><br><span class="line">| Com_show_warnings                             | 0                                                |</span><br><span class="line">| Com_show_create_user                          | 0                                                |</span><br><span class="line">| Com_shutdown                                  | 0                                                |</span><br><span class="line">| Com_slave_start                               | 0                                                |</span><br><span class="line">| Com_slave_stop                                | 0                                                |</span><br><span class="line">| Com_group_replication_start                   | 0                                                |</span><br><span class="line">| Com_group_replication_stop                    | 0                                                |</span><br><span class="line">| Com_stmt_execute                              | 0                                                |</span><br><span class="line">| Com_stmt_close                                | 0                                                |</span><br><span class="line">| Com_stmt_fetch                                | 0                                                |</span><br><span class="line">| Com_stmt_prepare                              | 0                                                |</span><br><span class="line">| Com_stmt_reset                                | 0                                                |</span><br><span class="line">| Com_stmt_send_long_data                       | 0                                                |</span><br><span class="line">| Com_truncate                                  | 0                                                |</span><br><span class="line">| Com_uninstall_plugin                          | 0                                                |</span><br><span class="line">| Com_unlock_tables                             | 0                                                |</span><br><span class="line">| Com_update                                    | 0                                                |</span><br><span class="line">| Com_update_multi                              | 0                                                |</span><br><span class="line">| Com_xa_commit                                 | 0                                                |</span><br><span class="line">| Com_xa_end                                    | 0                                                |</span><br><span class="line">| Com_xa_prepare                                | 0                                                |</span><br><span class="line">| Com_xa_recover                                | 0                                                |</span><br><span class="line">| Com_xa_rollback                               | 0                                                |</span><br><span class="line">| Com_xa_start                                  | 0                                                |</span><br><span class="line">| Com_stmt_reprepare                            | 0                                                |</span><br><span class="line">| Compression                                   | OFF                                              |</span><br><span class="line">| Connection_errors_accept                      | 0                                                |</span><br><span class="line">| Connection_errors_internal                    | 0                                                |</span><br><span class="line">| Connection_errors_max_connections             | 0                                                |</span><br><span class="line">| Connection_errors_peer_address                | 0                                                |</span><br><span class="line">| Connection_errors_select                      | 0                                                |</span><br><span class="line">| Connection_errors_tcpwrap                     | 0                                                |</span><br><span class="line">| Connections                                   | 9                                                |</span><br><span class="line">| Created_tmp_disk_tables                       | 5                                                |</span><br><span class="line">| Created_tmp_files                             | 5                                                |</span><br><span class="line">| Created_tmp_tables                            | 12                                               |</span><br><span class="line">| Delayed_errors                                | 0                                                |</span><br><span class="line">| Delayed_insert_threads                        | 0                                                |</span><br><span class="line">| Delayed_writes                                | 0                                                |</span><br><span class="line">| Flush_commands                                | 1                                                |</span><br><span class="line">| Handler_commit                                | 0                                                |</span><br><span class="line">| Handler_delete                                | 0                                                |</span><br><span class="line">| Handler_discover                              | 0                                                |</span><br><span class="line">| Handler_external_lock                         | 6                                                |</span><br><span class="line">| Handler_mrr_init                              | 0                                                |</span><br><span class="line">| Handler_prepare                               | 0                                                |</span><br><span class="line">| Handler_read_first                            | 5                                                |</span><br><span class="line">| Handler_read_key                              | 7                                                |</span><br><span class="line">| Handler_read_last                             | 0                                                |</span><br><span class="line">| Handler_read_next                             | 0                                                |</span><br><span class="line">| Handler_read_prev                             | 0                                                |</span><br><span class="line">| Handler_read_rnd                              | 0                                                |</span><br><span class="line">| Handler_read_rnd_next                         | 145                                              |</span><br><span class="line">| Handler_rollback                              | 0                                                |</span><br><span class="line">| Handler_savepoint                             | 0                                                |</span><br><span class="line">| Handler_savepoint_rollback                    | 0                                                |</span><br><span class="line">| Handler_update                                | 0                                                |</span><br><span class="line">| Handler_write                                 | 117                                              |</span><br><span class="line">| Innodb_buffer_pool_dump_status                | Dumping of buffer pool not started               |</span><br><span class="line">| Innodb_buffer_pool_load_status                | Buffer pool(s) load completed at 210407  0:31:28 |</span><br><span class="line">| Innodb_buffer_pool_resize_status              |                                                  |</span><br><span class="line">| Innodb_buffer_pool_pages_data                 | 256                                              |</span><br><span class="line">| Innodb_buffer_pool_bytes_data                 | 4194304                                          |</span><br><span class="line">| Innodb_buffer_pool_pages_dirty                | 0                                                |</span><br><span class="line">| Innodb_buffer_pool_bytes_dirty                | 0                                                |</span><br><span class="line">| Innodb_buffer_pool_pages_flushed              | 113                                              |</span><br><span class="line">| Innodb_buffer_pool_pages_free                 | 256                                              |</span><br><span class="line">| Innodb_buffer_pool_pages_misc                 | 0                                                |</span><br><span class="line">| Innodb_buffer_pool_pages_total                | 512                                              |</span><br><span class="line">| Innodb_buffer_pool_read_ahead_rnd             | 0                                                |</span><br><span class="line">| Innodb_buffer_pool_read_ahead                 | 0                                                |</span><br><span class="line">| Innodb_buffer_pool_read_ahead_evicted         | 0                                                |</span><br><span class="line">| Innodb_buffer_pool_read_requests              | 3243                                             |</span><br><span class="line">| Innodb_buffer_pool_reads                      | 400                                              |</span><br><span class="line">| Innodb_buffer_pool_wait_free                  | 0                                                |</span><br><span class="line">| Innodb_buffer_pool_write_requests             | 1081                                             |</span><br><span class="line">| Innodb_data_fsyncs                            | 36                                               |</span><br><span class="line">| Innodb_data_pending_fsyncs                    | 0                                                |</span><br><span class="line">| Innodb_data_pending_reads                     | 0                                                |</span><br><span class="line">| Innodb_data_pending_writes                    | 0                                                |</span><br><span class="line">| Innodb_data_read                              | 6623744                                          |</span><br><span class="line">| Innodb_data_reads                             | 438                                              |</span><br><span class="line">| Innodb_data_writes                            | 152                                              |</span><br><span class="line">| Innodb_data_written                           | 2433024                                          |</span><br><span class="line">| Innodb_dblwr_pages_written                    | 34                                               |</span><br><span class="line">| Innodb_dblwr_writes                           | 3                                                |</span><br><span class="line">| Innodb_log_waits                              | 0                                                |</span><br><span class="line">| Innodb_log_write_requests                     | 12                                               |</span><br><span class="line">| Innodb_log_writes                             | 15                                               |</span><br><span class="line">| Innodb_os_log_fsyncs                          | 21                                               |</span><br><span class="line">| Innodb_os_log_pending_fsyncs                  | 0                                                |</span><br><span class="line">| Innodb_os_log_pending_writes                  | 0                                                |</span><br><span class="line">| Innodb_os_log_written                         | 21504                                            |</span><br><span class="line">| Innodb_page_size                              | 16384                                            |</span><br><span class="line">| Innodb_pages_created                          | 53                                               |</span><br><span class="line">| Innodb_pages_read                             | 399                                              |</span><br><span class="line">| Innodb_pages_written                          | 113                                              |</span><br><span class="line">| Innodb_row_lock_current_waits                 | 0                                                |</span><br><span class="line">| Innodb_row_lock_time                          | 0                                                |</span><br><span class="line">| Innodb_row_lock_time_avg                      | 0                                                |</span><br><span class="line">| Innodb_row_lock_time_max                      | 0                                                |</span><br><span class="line">| Innodb_row_lock_waits                         | 0                                                |</span><br><span class="line">| Innodb_rows_deleted                           | 0                                                |</span><br><span class="line">| Innodb_rows_inserted                          | 81                                               |</span><br><span class="line">| Innodb_rows_read                              | 100                                              |</span><br><span class="line">| Innodb_rows_updated                           | 0                                                |</span><br><span class="line">| Innodb_num_open_files                         | 30                                               |</span><br><span class="line">| Innodb_truncated_status_writes                | 0                                                |</span><br><span class="line">| Innodb_available_undo_logs                    | 128                                              |</span><br><span class="line">| Key_blocks_not_flushed                        | 0                                                |</span><br><span class="line">| Key_blocks_unused                             | 6693                                             |</span><br><span class="line">| Key_blocks_used                               | 5                                                |</span><br><span class="line">| Key_read_requests                             | 18                                               |</span><br><span class="line">| Key_reads                                     | 5                                                |</span><br><span class="line">| Key_write_requests                            | 0                                                |</span><br><span class="line">| Key_writes                                    | 0                                                |</span><br><span class="line">| Last_query_cost                               | 1.399000                                         |</span><br><span class="line">| Last_query_partial_plans                      | 1                                                |</span><br><span class="line">| Locked_connects                               | 0                                                |</span><br><span class="line">| Max_execution_time_exceeded                   | 0                                                |</span><br><span class="line">| Max_execution_time_set                        | 0                                                |</span><br><span class="line">| Max_execution_time_set_failed                 | 0                                                |</span><br><span class="line">| Max_used_connections                          | 6                                                |</span><br><span class="line">| Max_used_connections_time                     | 2021-04-07 00:54:31                              |</span><br><span class="line">| Not_flushed_delayed_rows                      | 0                                                |</span><br><span class="line">| Ongoing_anonymous_transaction_count           | 0                                                |</span><br><span class="line">| Open_files                                    | 19                                               |</span><br><span class="line">| Open_streams                                  | 0                                                |</span><br><span class="line">| Open_table_definitions                        | 319                                              |</span><br><span class="line">| Open_tables                                   | 111                                              |</span><br><span class="line">| Opened_files                                  | 536                                              |</span><br><span class="line">| Opened_table_definitions                      | 1                                                |</span><br><span class="line">| Opened_tables                                 | 3                                                |</span><br><span class="line">| Performance_schema_accounts_lost              | 0                                                |</span><br><span class="line">| Performance_schema_cond_classes_lost          | 0                                                |</span><br><span class="line">| Performance_schema_cond_instances_lost        | 0                                                |</span><br><span class="line">| Performance_schema_digest_lost                | 0                                                |</span><br><span class="line">| Performance_schema_file_classes_lost          | 0                                                |</span><br><span class="line">| Performance_schema_file_handles_lost          | 0                                                |</span><br><span class="line">| Performance_schema_file_instances_lost        | 0                                                |</span><br><span class="line">| Performance_schema_hosts_lost                 | 0                                                |</span><br><span class="line">| Performance_schema_index_stat_lost            | 0                                                |</span><br><span class="line">| Performance_schema_locker_lost                | 0                                                |</span><br><span class="line">| Performance_schema_memory_classes_lost        | 0                                                |</span><br><span class="line">| Performance_schema_metadata_lock_lost         | 0                                                |</span><br><span class="line">| Performance_schema_mutex_classes_lost         | 0                                                |</span><br><span class="line">| Performance_schema_mutex_instances_lost       | 0                                                |</span><br><span class="line">| Performance_schema_nested_statement_lost      | 0                                                |</span><br><span class="line">| Performance_schema_prepared_statements_lost   | 0                                                |</span><br><span class="line">| Performance_schema_program_lost               | 0                                                |</span><br><span class="line">| Performance_schema_rwlock_classes_lost        | 0                                                |</span><br><span class="line">| Performance_schema_rwlock_instances_lost      | 0                                                |</span><br><span class="line">| Performance_schema_session_connect_attrs_lost | 0                                                |</span><br><span class="line">| Performance_schema_socket_classes_lost        | 0                                                |</span><br><span class="line">| Performance_schema_socket_instances_lost      | 0                                                |</span><br><span class="line">| Performance_schema_stage_classes_lost         | 0                                                |</span><br><span class="line">| Performance_schema_statement_classes_lost     | 0                                                |</span><br><span class="line">| Performance_schema_table_handles_lost         | 0                                                |</span><br><span class="line">| Performance_schema_table_instances_lost       | 0                                                |</span><br><span class="line">| Performance_schema_table_lock_stat_lost       | 0                                                |</span><br><span class="line">| Performance_schema_thread_classes_lost        | 0                                                |</span><br><span class="line">| Performance_schema_thread_instances_lost      | 0                                                |</span><br><span class="line">| Performance_schema_users_lost                 | 0                                                |</span><br><span class="line">| Prepared_stmt_count                           | 0                                                |</span><br><span class="line">| Qcache_free_blocks                            | 0                                                |</span><br><span class="line">| Qcache_free_memory                            | 0                                                |</span><br><span class="line">| Qcache_hits                                   | 0                                                |</span><br><span class="line">| Qcache_inserts                                | 0                                                |</span><br><span class="line">| Qcache_lowmem_prunes                          | 0                                                |</span><br><span class="line">| Qcache_not_cached                             | 0                                                |</span><br><span class="line">| Qcache_queries_in_cache                       | 0                                                |</span><br><span class="line">| Qcache_total_blocks                           | 0                                                |</span><br><span class="line">| Queries                                       | 94                                               |</span><br><span class="line">| Questions                                     | 36                                               |</span><br><span class="line">| Select_full_join                              | 0                                                |</span><br><span class="line">| Select_full_range_join                        | 0                                                |</span><br><span class="line">| Select_range                                  | 0                                                |</span><br><span class="line">| Select_range_check                            | 0                                                |</span><br><span class="line">| Select_scan                                   | 12                                               |</span><br><span class="line">| Slave_open_temp_tables                        | 0                                                |</span><br><span class="line">| Slow_launch_threads                           | 0                                                |</span><br><span class="line">| Slow_queries                                  | 0                                                |</span><br><span class="line">| Sort_merge_passes                             | 0                                                |</span><br><span class="line">| Sort_range                                    | 0                                                |</span><br><span class="line">| Sort_rows                                     | 0                                                |</span><br><span class="line">| Sort_scan                                     | 0                                                |</span><br><span class="line">| Ssl_accept_renegotiates                       | 0                                                |</span><br><span class="line">| Ssl_accepts                                   | 0                                                |</span><br><span class="line">| Ssl_callback_cache_hits                       | 0                                                |</span><br><span class="line">| Ssl_cipher                                    |                                                  |</span><br><span class="line">| Ssl_cipher_list                               |                                                  |</span><br><span class="line">| Ssl_client_connects                           | 0                                                |</span><br><span class="line">| Ssl_connect_renegotiates                      | 0                                                |</span><br><span class="line">| Ssl_ctx_verify_depth                          | 0                                                |</span><br><span class="line">| Ssl_ctx_verify_mode                           | 0                                                |</span><br><span class="line">| Ssl_default_timeout                           | 0                                                |</span><br><span class="line">| Ssl_finished_accepts                          | 0                                                |</span><br><span class="line">| Ssl_finished_connects                         | 0                                                |</span><br><span class="line">| Ssl_server_not_after                          |                                                  |</span><br><span class="line">| Ssl_server_not_before                         |                                                  |</span><br><span class="line">| Ssl_session_cache_hits                        | 0                                                |</span><br><span class="line">| Ssl_session_cache_misses                      | 0                                                |</span><br><span class="line">| Ssl_session_cache_mode                        | NONE                                             |</span><br><span class="line">| Ssl_session_cache_overflows                   | 0                                                |</span><br><span class="line">| Ssl_session_cache_size                        | 0                                                |</span><br><span class="line">| Ssl_session_cache_timeouts                    | 0                                                |</span><br><span class="line">| Ssl_sessions_reused                           | 0                                                |</span><br><span class="line">| Ssl_used_session_cache_entries                | 0                                                |</span><br><span class="line">| Ssl_verify_depth                              | 0                                                |</span><br><span class="line">| Ssl_verify_mode                               | 0                                                |</span><br><span class="line">| Ssl_version                                   |                                                  |</span><br><span class="line">| Table_locks_immediate                         | 120                                              |</span><br><span class="line">| Table_locks_waited                            | 0                                                |</span><br><span class="line">| Table_open_cache_hits                         | 7                                                |</span><br><span class="line">| Table_open_cache_misses                       | 3                                                |</span><br><span class="line">| Table_open_cache_overflows                    | 0                                                |</span><br><span class="line">| Tc_log_max_pages_used                         | 0                                                |</span><br><span class="line">| Tc_log_page_size                              | 0                                                |</span><br><span class="line">| Tc_log_page_waits                             | 0                                                |</span><br><span class="line">| Threads_cached                                | 0                                                |</span><br><span class="line">| Threads_connected                             | 6                                                |</span><br><span class="line">| Threads_created                               | 6                                                |</span><br><span class="line">| Threads_running                               | 1                                                |</span><br><span class="line">| Uptime                                        | 3030                                             |</span><br><span class="line">| Uptime_since_flush_status                     | 3030                                             |</span><br><span class="line">+-----------------------------------------------+--------------------------------------------------+</span><br><span class="line">356 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></p><p>查看完整列定义<br>mysql&gt; show full columns from orders;<br>+————+———-+———–+——+—–+———+—————-+———————————+———+<br>| Field      | Type     | Collation | Null | Key | Default | Extra          | Privileges                      | Comment |<br>+————+———-+———–+——+—–+———+—————-+———————————+———+<br>| order_num  | int(11)  | NULL      | NO   | PRI | NULL    | auto_increment | select,insert,update,references |         |<br>| order_date | datetime | NULL      | NO   |     | NULL    |                | select,insert,update,references |         |<br>| cust_id    | int(11)  | NULL      | NO   | MUL | NULL    |                | select,insert,update,references |         |<br>+————+———-+———–+——+—–+———+—————-+———————————+———+<br>3 rows in set (0.00 sec)</p><p>建表：<br>CREATE TABLE <code>orders2</code> (<br>  <code>order_num</code> int(11) NOT NULL AUTO_INCREMENT,<br>  <code>order_date</code> datetime NOT NULL,<br>  <code>cust_id</code> int(11) NOT NULL,<br>  PRIMARY KEY (<code>order_num</code>),<br>  KEY <code>fk_orders_customers2</code> (<code>cust_id</code>),<br>  CONSTRAINT <code>fk_orders_customers2</code> FOREIGN KEY (<code>cust_id</code>) REFERENCES <code>customers</code> (<code>cust_id</code>)<br>) ENGINE=InnoDB AUTO_INCREMENT=20010 DEFAULT CHARSET=utf8;</p><p>CREATE TABLE <code>orderitems3</code> (<br>  <code>order_num</code> int(11) NOT NULL comment ‘订单号’,<br>  <code>order_item</code> int(11) NOT NULL comment ‘订单项’,<br>  <code>prod_id</code> char(10) NOT NULL,<br>  <code>quantity</code> int(11) NOT NULL default 1,<br>  <code>item_price</code> decimal(8,2) NOT NULL,<br>  PRIMARY KEY (<code>order_num</code>,<code>order_item</code>),<br>  index idx_prod_id(<code>prod_id</code>)<br>) ENGINE=InnoDB DEFAULT CHARSET=utf8;</p><p>create table orders_new like order;</p><p>引擎类型：InnoDB vs MyISAM</p><ul><li>InnoDB：支持事务；不支持全文本搜索；存储在磁盘。</li><li>MyISAM：不支持事务；支持全文本搜索；存储在内存，性能高。<br>同一个数据库可以混用引擎类型。</li></ul><p>修改表结构：</p><p>增、删、改列：<br>alter table vendors add column vend_phone varchar(16) null after vend_address;<br>alter table vendors modify column vend_phone varchar(32) comment ‘租户手机号码’;<br>alter table vendors change column vend_phone vend_phone varchar(32) comment ‘租户手机号码’;<br>alter table vendors drop column vend_phone;</p><p>增删改其他类型（主键、外键、索引）：<br>alter table orderitems2 drop primary key;<br>alter table orderitems2 add primary key (<code>order_num</code>,<code>order_item</code>);<br>alter table orderitems2 drop primary key, add column <code>id</code> int(11) NOT NULL AUTO_INCREMENT FIRST, add primary key(<code>id</code>);</p><p>alter table orderitems2<br>  add constraint fk_orderitems_orders2 foreign key (order_num) references orders(order_num),<br>  add constraint fk_orderitems_products2 foreign key (prod_id) references products(prod_id);<br>alter table orderitems2 drop foreign key fk_orderitems_orders2;</p><p>普通索引：索引列值可不唯一。<br>CREATE INDEX indexName ON table_name (column_name);<br>ALTER table tableName ADD INDEX indexName(columnName);<br>DROP INDEX [indexName] ON mytable;<br>唯一索引：索引列值必须唯一，允许有空值。<br>CREATE UNIQUE INDEX indexName ON mytable(username(length));<br>ALTER table mytable ADD UNIQUE [indexName] (username(length));<br>两者均可以指定列索引长度：</p><p>修改字段默认值：直接修改表文件，速度很快。<br>alter table orderitems alter quantity set default 1;<br>alter table orderitems alter quantity drop default;</p><p>删表<br>drop table if exists orderitems2;</p><p>重命名表<br>rename table orders to orders_old, orders_new to orders;<br>ALTER TABLE orders_old RENAME TO orders;</p><p>视图：</p><ul><li>特点：重用SQL，虚拟的表，本身不包含数据，保护数据，注意性能问题。</li><li>规则：表中的order by会覆盖视图中的；不能索引、关联触发器或默认值；可以与表一起连用。</li></ul><p>create view productcustomers as<br>  (<br>    select cust_name, cust_contact, prod_id from customers c, orders o, orderitems oi<br>    where c.cust_id = o.cust_id and oi.order_num = o.order_num<br>  );<br>show create view productcustomers;<br>drop view productcustomers;<br>create or replace view productcustomers as<br>  (<br>    select cust_name, cust_contact, prod_id from customers c, orders o, orderitems oi<br>    where c.cust_id = o.cust_id and oi.order_num = o.order_num<br>  );<br>使用视图<br>select cust_name, cust_contact from productcustomers where prod_id = ‘TNT2’;</p><p>存储过程：<br>delimiter //<br>告诉命令行使用程序使用//作为新的语句结束分隔符。</p><p>示例：<br>delimiter //</p><p>create procedure proc_ordertotal(<br>  in onumber int,<br>  in taxable boolean,<br>  out ototal decimal(8,2)<br>) comment ‘Obtain order total, optionally adding tax’<br>begin<br>  declare total decimal(8,2);<br>  declare taxrate int default 6;</p><p>  select sum(item_price*quantity) from orderitems where order_num = onumber into total;</p><p>  – if need to add tax<br>  if taxable then<br>    select total+(total/100*taxrate) into total;<br>  end if;</p><p>  select total into ototal;</p><p>end //</p><p>delimiter ;</p><p>call proc_ordertotal(20005, 0, @total);<br>select @total;</p><p>drop procedure proc_ordertotal;</p><p>show procedure status;<br>show create procedure proc_ordertotal;</p><p>游标：存储游标后，可以根据需要滚动或浏览其中的数据。只能用于存储过程。游标使用结束时必须关闭。<br>示例：</p><p>delimiter //<br>create procedure proc_processorders()<br>begin</p><p>  declare isDone boolean default 0;<br>  declare oNumber int;<br>  declare outTotal decimal(8,2);</p><p>  declare ordernumbers cursor for (select order_num from orders);</p><p>  declare continue handler for sqlstate ‘02000’ set isDone = 1;</p><p>  create table if not exists ordertotals(<br>    order_num int, total decimal(8,2)<br>  );</p><p>  open ordernumbers;</p><p>  repeat<br>    fetch ordernumbers into oNumber;<br>    call proc_ordertotal(oNumber, 1, outTotal);</p><pre><code>insert into ordertotals(order_num, total) values(oNumber, outTotal);</code></pre><p>  until isDone end repeat;</p><p>  close ordernumbers;</p><p>end //<br>delimiter ;</p><p>call proc_processorders();<br>select *from ordertotals;</p><p>触发器：</p><ul><li>四要素：唯一触发器名；关联的表；应该响应的活动（delete, insert, update）；何时执行（before, after）</li><li>规则：仅支持表；每个表最多支持6个。insert有new虚拟表（值可被更新）；delete有old表，值不可被更新，为只读；update有new和old表，new表的值可被更新，old的为只读。</li></ul><p>delimiter //<br>create trigger tg_neworder after insert on orders for each row<br>begin<br>  select new.order_num into @tt;<br>end //<br>delimiter ;</p><p>insert into orders(order_date,cust_id) values(now(), 10001);<br>select @tt;<br>drop trigger tg_neworder;</p><p>delimiter //<br>create trigger tg_deleteorder before delete on orders for each row<br>begin<br>  insert into archive_orders(order_num, order_date, cust_id) values(old.order_num, old.order_date, old.cust_id);<br>end //<br>delimiter ;</p><p>create trigger tg_updatevendor before update on vendors for each row set new.vend_state = Upper(new.vend_state);<br>drop trigger tg_updatevendor;</p><p>事务<br>要么全部执行失败，要么全部执行成功，对于中途发生错误的事务回滚。<br>只能回退insert, update, delete语句。</p><p>start transaction;<br>xxx操作<br>rollback;</p><p>start transaction;<br>xxx操作<br>commit;</p><p>保留点<br>savepoint deletePoint;<br>xxx操作<br>rollback to deletePoint;<br>执行rollback或commit后事务结束，保留点释放，或使用release savepoint deletePoint释放</p><p>取消MySQL自动提交：<br>set autocommit = 0;</p><p>全球化和本地化<br>查看字符集：<br>show character set;<br>查看校对：<br>show collation;</p><p>可以在安装时定义一个默认字符集和校对，也可以在创建数据库时创建，还可以对表、表字段创建。<br>show variables like ‘character%’;<br>show variables like ‘collation%’;</p><p>create table mytable(<br>  column1 int,<br>  column2 varchar(32)<br>) default character set hebrew<br>  collate hebrew_general_ci;</p><p>安全管理<br>use mysql;<br>select * from user;</p><p>创建用户<br>create user tsukasa identified by ‘p12345’;<br>设置访问权限<br>三要素：</p><ul><li>要授予的权限</li><li>被授予访问权限的数据库或表</li><li>用户名<br>show grants for tsukasa;<br>grant select, insert, update, delete on test.<em> to tsukasa;<br>grant all on test.</em> to tsukasa;</li></ul><p>回收权限<br>revoke select on test.* from tsukasa;</p><p>更改口令<br>set password for tsukasa = Password(‘p54321’);</p><p>重命名用户<br>rename user tsukasa to tsukasa2;<br>删除用户<br>drop user tsukasa2;</p><h2 id="表结构处理"><a href="#表结构处理" class="headerlink" title="表结构处理"></a>表结构处理</h2><h2 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h2><p>增<br>单行<br>INSERT INTO <code>products</code> (<code>prod_id</code>, <code>vend_id</code>, <code>prod_name</code>, <code>prod_price</code>, <code>prod_desc</code>) VALUES (‘FU12’, ‘1002’, ‘Apple’, ‘4.00’, ‘sweet’);<br>批量（提高性能）<br>INSERT INTO <code>products</code> (<code>prod_id</code>, <code>vend_id</code>, <code>prod_name</code>, <code>prod_price</code>, <code>prod_desc</code>)<br>  VALUES (‘FU12’, ‘1002’, ‘Apple’, ‘4.00’, ‘sweet’),<br>  (‘FU13’, ‘1003’, ‘Banana’, ‘4.00’, ‘sweet’);</p><p>INSERT INTO products_new (<code>prod_id</code>, <code>vend_id</code>, <code>prod_name</code>, <code>prod_price</code>, <code>prod_desc</code>)<br>  select (<code>prod_id</code>, <code>vend_id</code>, <code>prod_name</code>, <code>prod_price</code>, <code>prod_desc</code>) from products where vend_id = 1002;</p><p>删<br>delete from products where prod_id = ‘FU12’;<br>truncate tableName;</p><p>改<br>update customers set cust_name = ‘The Fudds’, cust_email = ‘elmer@fudd.com’<br>  where cust_id = 10005;</p><p>查<br>select子句顺序：select&gt;from&gt;where&gt;group by&gt;having&gt;order by&gt;limit<br>select <em> from 表名 where … having … group by … order by… limit …<br>selct </em> from 表名1 inner/left/right join 表名2 on 条件 group by…</p><p>限制行数（limit）<br>select <em> from products limit 5;<br>select </em> from products limit 3,2;</p><p>按字典排序（order by）<br>select prod_id as ‘产品ID’, prod_name as ‘产品名称’ from products order by prod_id desc, vend_id asc;</p><ul><li>典型场景：找出最昂贵的物品<br>select prod_id, prod_price from products order by prod_price desc limit 1;</li></ul><p>条件查询（where）<br>select * from products where prod_name = ‘Oil can’ and prod_price &lt; 10;<br>select prod_name, prod_price from products where vend_id = 1002 or vend_id = 1003;</p><p>IN与NOT、BETWEEN<br>select prod_id ‘产品ID’ from products where vend_id in (‘1001’, ‘1002’, ‘1003’);<br>select prod_id ‘产品ID’ from products where vend_id not in (‘1001’, ‘1002’, ‘1003’);</p><p>select prod_name, prod_price from products where prod_price between 5 and 10;</p><p>select distinct vend_id from products;</p><p>通配符（多字符）：<br>select t1.prod_id, t1.prod_name from products t1 where t1.prod_id like ‘ANV%’;<br>select t1.prod_id, t1.prod_name from products t1 where t1.prod_id like ‘ANV%’;</p><p>单字符：<br>select prod_id, prod_name from products where prod<em>name like ‘</em> ton%’;</p><p>正则表达式：<br>select prod_id, prod_name from products where prod_name regexp ‘.000’;</p><p>常见函数：<br>官方文档链接：<a href="https://dev.mysql.com/doc/refman/5.6/en/functions.html" target="_blank" rel="external">https://dev.mysql.com/doc/refman/5.6/en/functions.html</a></p><ul><li>数学函数：ABS(x), SQRT(x), MOD(x,y), CEIL(x), COS(x), LOG10(x), DEGREES(x)弧度换角度, ROUND(x, D), sign(x)正负零判断, SUM(x), AVG(x), MAX(x), MIN(x), COUNT(x)</li><li>字符串函数：CONCAT(str1, str2, …, strn), RTRIM(str), TRIM(str), UPPER(str), LENGTH(str), CHAR_LENGTH(str), LPAD(s1, len, s2)用s2在s1左边填充，直到整个字符串为len, SUBSTRING(str,pos), SUBSTRING(str,pos,len), STRCMP(s1, s2)字符串是否相等, REVERSE(str), LEFT(s,n), REPEAT(s,n), REPLACE(s,s1,s2)</li><li>日期和时间函数：CURDATE(), NOW(), UNIX_TIMESTAMP(), UNIX_TIMESTAMP(date), DAYOFYEAR(d)、DAYOFMONTH(d), WEEKOFYEAD(d), QUARTER(date), HOUR(), ADDTIME(date,expr), SUBTIME(date,expr), datediff(d1,d2), date_add(time, intervalTime), date_format(time, format)</li><li>条件判断函数：IF(expr,v1,v2), IFNULL(v1,v2), case expr when v1 then r1 [when v2 then r2][else r3] end类似case函数</li><li>系统信息函数：CONNECTION_ID(), USER()</li><li>加密函数：MD5(str), PASSWORD(str)单项加密</li><li>格式化函数：CONV(N,from_base,to_base)进制转换，FORMAT(x,n)将数字x格式化并以四十五入方式保留小数点后n位，以字符串形式返回。</li></ul><p>示例：<br>SELECT MOD(29,9);</p><p>select concat(vend_name, ‘(‘, vend_country, ‘)’) as ‘vendInfo’ from vendors order by vend_name;<br>select prod_id, quantity, item_price, quantity*item_price as expanded_price from orderitems where order_num = 20005;<br>select degrees(pi());<br>select substring(“abcdefg”, 1, 3);</p><p>select MONTH(now());<br>select datediff(now(), ‘2021-04-06’);<br>SELECT DATE_ADD(‘2018-05-01’,INTERVAL 1 DAY);<br>SELECT DATE_FORMAT(curtime(), ‘%W %M %Y’);<br>select DAYOFWEEK(“2021-04-08”);<br>select cust_id, order_num from orders where date(order_date) between ‘2005-09-01’ and ‘2005-09-30’;</p><p>select (case ‘b’<br>  when ‘a’ then ‘1’<br>  when ‘b’ then ‘2’<br>  else ‘3’<br>end) as ‘value’;</p><p>select CONNECTION_ID(), USER();<br>select conv(3,10,2);</p><p>分组数据(group by)：可以包含任意数目的列，一般使用group by子句时要用order by保证数据顺序<br>select vend_id, count(*) as num_prods from products group by vend_id;<br>过滤分组(having)：支持所有where操作符，having关键字需要出现在group后面，order by放在having后面。</p><p>select cust_id, count(<em>) as orders_num from orders group by cust_id having count(</em>) &gt;= 2;<br>select order_num, sum(quantity<em>item_price) ordertotal from orderitems<br>  group by order_num<br>  having sum(quantity</em>item_price) &gt;= 50<br>  order by ordertotal;</p><p>子查询：<br>select cust_name, cust_contact from customers<br>where cust_id in (<br>    select cust_id from orders<br>    where order_num in (select order_num from orderitems<br>        where prod_id = ‘TNT2’));</p><p>select t0.cust_name, t0.cust_state,<br>  (select count(*) from orders t1<br>    where t1.cust_id = t0.cust_id) as order_numbers<br>from customers t0<br>order by t0.cust_name;</p><p>联结表：实际上是第一个表的第一行与第二个表符合条件的每一行配对，即笛卡尔积(m*n)，联结表越多性能下降越厉害，有时候处理联结比子查询要快。<br>分为内联（inner join, 表相同，不会出现没有关联的行）、外联(left join, right join, 包含了没有关联的行)</p><p>select vend_name, prod_name, prod_price<br>from vendors v1 inner join products p1<br>on v1.vend_id = p1.vend_id<br>order by vend_name, prod_name;</p><p>select p1.prod_id, p1.prod_name from products p1, products p2<br>where p1.vend_id = p2.vend_id and p2.prod_id = ‘DTNTR’;</p><p>select c.cust_id, o.order_num<br>from customers c left join orders o<br>on c.cust_id = o.cust_id;<br>+———+———–+<br>| cust_id | order_num |<br>+———+———–+<br>|   10001 |     20005 |<br>|   10001 |     20009 |<br>|   10002 |      NULL |<br>|   10003 |     20006 |<br>|   10004 |     20007 |<br>|   10005 |     20008 |<br>+———+———–+<br>6 rows in set (0.00 sec)</p><p>select c.cust_id, o.order_num<br>from customers c right join orders o<br>on c.cust_id = o.cust_id;<br>+———+———–+<br>| cust_id | order_num |<br>+———+———–+<br>|   10001 |     20005 |<br>|   10001 |     20009 |<br>|   10003 |     20006 |<br>|   10004 |     20007 |<br>|   10005 |     20008 |<br>+———+———–+<br>5 rows in set (0.00 sec)</p><p>select c.cust_name, c.cust_id, count(o.order_num) as num_ord<br>from customers c left join orders o<br>on c.cust_id = o.cust_id<br>group by c.cust_id;</p><p>组合查询：也叫符合查询，多条select语句组成<br>union：求并集。<br>union all：包含重复的行</p><p>(<br>  select vend_id, prod_id, prod_price from products<br>  where prod_price &lt; 5<br>)<br>union<br>(<br>  select vend_id, prod_id, prod_price from products<br>  where vend_id in (1001, 1002)<br>)<br>order by vend_id, prod_price;</p><p>====其他知识</p><p>show variables like ‘slow_query_log’;    ##查询并设置慢SQL日志开关<br>set global slow_query_log=’ON’;</p><p>show variables like ‘long_query_time’;    ##查询并设置慢sql时间标准<br>set global long_query_time=0.3;</p><p>了解show命令<br>help show;<br>help create table;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; help show;</span><br><span class="line">Name: &apos;SHOW&apos;</span><br><span class="line">Description:</span><br><span class="line">SHOW has many forms that provide information about databases, tables,</span><br><span class="line">columns, or status information about the server. This section describes</span><br><span class="line">those following:</span><br><span class="line"></span><br><span class="line">SHOW &#123;BINARY | MASTER&#125; LOGS</span><br><span class="line">SHOW BINLOG EVENTS [IN &apos;log_name&apos;] [FROM pos] [LIMIT [offset,] row_count]</span><br><span class="line">SHOW CHARACTER SET [like_or_where]</span><br><span class="line">SHOW COLLATION [like_or_where]</span><br><span class="line">SHOW [FULL] COLUMNS FROM tbl_name [FROM db_name] [like_or_where]</span><br><span class="line">SHOW CREATE DATABASE db_name</span><br><span class="line">SHOW CREATE EVENT event_name</span><br><span class="line">SHOW CREATE FUNCTION func_name</span><br><span class="line">SHOW CREATE PROCEDURE proc_name</span><br><span class="line">SHOW CREATE TABLE tbl_name</span><br><span class="line">SHOW CREATE TRIGGER trigger_name</span><br><span class="line">SHOW CREATE VIEW view_name</span><br><span class="line">SHOW DATABASES [like_or_where]</span><br><span class="line">SHOW ENGINE engine_name &#123;STATUS | MUTEX&#125;</span><br><span class="line">SHOW [STORAGE] ENGINES</span><br><span class="line">SHOW ERRORS [LIMIT [offset,] row_count]</span><br><span class="line">SHOW EVENTS</span><br><span class="line">SHOW FUNCTION CODE func_name</span><br><span class="line">SHOW FUNCTION STATUS [like_or_where]</span><br><span class="line">SHOW GRANTS FOR user</span><br><span class="line">SHOW INDEX FROM tbl_name [FROM db_name]</span><br><span class="line">SHOW MASTER STATUS</span><br><span class="line">SHOW OPEN TABLES [FROM db_name] [like_or_where]</span><br><span class="line">SHOW PLUGINS</span><br><span class="line">SHOW PROCEDURE CODE proc_name</span><br><span class="line">SHOW PROCEDURE STATUS [like_or_where]</span><br><span class="line">SHOW PRIVILEGES</span><br><span class="line">SHOW [FULL] PROCESSLIST</span><br><span class="line">SHOW PROFILE [types] [FOR QUERY n] [OFFSET n] [LIMIT n]</span><br><span class="line">SHOW PROFILES</span><br><span class="line">SHOW RELAYLOG EVENTS [IN &apos;log_name&apos;] [FROM pos] [LIMIT [offset,] row_count]</span><br><span class="line">SHOW SLAVE HOSTS</span><br><span class="line">SHOW SLAVE STATUS [FOR CHANNEL channel]</span><br><span class="line">SHOW [GLOBAL | SESSION] STATUS [like_or_where]</span><br><span class="line">SHOW TABLE STATUS [FROM db_name] [like_or_where]</span><br><span class="line">SHOW [FULL] TABLES [FROM db_name] [like_or_where]</span><br><span class="line">SHOW TRIGGERS [FROM db_name] [like_or_where]</span><br><span class="line">SHOW [GLOBAL | SESSION] VARIABLES [like_or_where]</span><br><span class="line">SHOW WARNINGS [LIMIT [offset,] row_count]</span><br><span class="line"></span><br><span class="line">like_or_where:</span><br><span class="line">    LIKE &apos;pattern&apos;</span><br><span class="line">  | WHERE expr</span><br><span class="line"></span><br><span class="line">If the syntax for a given SHOW statement includes a LIKE &apos;pattern&apos;</span><br><span class="line">part, &apos;pattern&apos; is a string that can contain the SQL % and _ wildcard</span><br><span class="line">characters. The pattern is useful for restricting statement output to</span><br><span class="line">matching values.</span><br><span class="line"></span><br><span class="line">Several SHOW statements also accept a WHERE clause that provides more</span><br><span class="line">flexibility in specifying which rows to display. See</span><br><span class="line">http://dev.mysql.com/doc/refman/5.7/en/extended-show.html.</span><br><span class="line"></span><br><span class="line">URL: http://dev.mysql.com/doc/refman/5.7/en/show.html</span><br></pre></td></tr></table></figure><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;\assets\js\APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;这篇文章的内容很基础，主要是MySQL基础、常用命令使用的收录，算是《MySQL必知必会》的读书笔记，方便自己查阅。&lt;/p&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://blog.tsukasa.moe/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="MySQL" scheme="http://blog.tsukasa.moe/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>日语身体表现词语大杂烩</title>
    <link href="http://blog.tsukasa.moe/2018/03/01/bodily-representaion-japanese-phrase/"/>
    <id>http://blog.tsukasa.moe/2018/03/01/bodily-representaion-japanese-phrase/</id>
    <published>2018-03-01T13:06:03.000Z</published>
    <updated>2019-03-10T14:00:36.801Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这篇文章就当个小词典吧，称不上总结，只是简单整理《身体表现词典》讲到的一些惯用语。基本上是按照从头到脚的顺序整理的，请大家随意食用：</p><ul><li>头部</li><li>上身</li><li>下身</li><li>其他</li></ul><h1 id="头部"><a href="#头部" class="headerlink" title="头部"></a>头部</h1><h2 id="頭"><a href="#頭" class="headerlink" title="頭"></a>頭</h2><h3 id="頭（あたま）"><a href="#頭（あたま）" class="headerlink" title="頭（あたま）"></a>頭（あたま）</h3><ul><li><strong>頭隠して尻隠さず：</strong>本人はうまく隠した（隠れた）つもりでも、他人の目にはすっかり丸見えであるというような場面で、この表現がよく使われます。<br>顾头不顾尾，也可指小朋友「かくれんぼ」时给人们的蠢萌蠢萌的可爱形象=￣ω￣=。</li><li><strong>頭が上がらない：</strong>引け目を感じて対等な関係に立てない。<br>字面意思是抬不起头来，因为觉得欠对方的，或者受过对方恩惠，又或者曾做过对不起对方的事，因此遇到事情无法对对方强硬起来。</li><li><strong>頭が重い：</strong>二つの意味がある。一つは、身体的に感じる「重さ」、寝不足か、あるいは熱があるか何かで、頭がどんより重く感じられることを表します。もう一つは、悩み事や心配ごとなどがあって、どうも気分がすっきりしない、気分が晴れない、という感じを表します、心理的な「重さ」を表します。<br>身体上的头沉，头晕，另一个意思是有担心的事情，遇到烦恼的事情而心情沉重。</li><li><strong>頭が固い：</strong>人の意見や新しいことをなかなか受け入れようとしない、融通の利かない態度。<br>不听取别人意见，不接受新事物，头脑顽固的人真的是让人讨厌啊。</li><li><strong>頭が切れる：</strong>洞察力のある賢い人を「頭が切れる人」と呼ぶことが多いようです。<br>形容脑子转得快，聪明活跃。</li><li><strong>頭が下がる：</strong>ある事柄や、人の様子を見て、思わず敬服してしまう、感服してしまう気持ち。<br>钦佩，佩服，大佬请喝茶吧。</li><li><strong>頭が低い：</strong>「控え目で、謙虚な態度」を目指す言葉。<br>形容一个人很谦虚。和「腰が低い」意思一样w。</li><li><strong>頭から水を浴びよう：</strong>予期しない出来事に会って、ぞっとする感じ。<br>形容万分吃惊，就像你头上突然被别人浇水一样，心中顿时万只草泥马奔腾忍不住大吼：卧槽是谁干的Pia!(ｏ ‵-′)ノ”(ノ﹏&lt;。)。</li><li><strong>頭から湯気を立てる：</strong>顔を真っ赤にして怒っている様子。<br>头上要冒烟，怒气冲冲。彼女に怒らせるなら，殺されるぞ(ಥ _ ಥ)。</li><li><strong>頭でっかち：</strong>経験の裏打ちもないのに、理屈や知識ばかりを振りかざす態度、あるいはそういう人物を目指す時によく使われます。人に面を向って使う言葉ではありません。<br>除了指人和事物头重脚轻的不平衡感，经常形容光说不练，空谈理论脱离实际的人。</li><li><strong>頭でっかち尻すぼり：</strong>始めは威勢が良かったのに、終わりになると最初の勢いはどこやら、見る影もないほど力がなくなってしまう様子。<br>虎头蛇尾，开头很好，结尾很烂。</li><li><strong>頭に入れる：</strong>しっかり記憶をとどめる、頭に叩き込むと同じ意味です。<br>请把这些知识装入头脑，好好记住哦(づ￣ 3￣)づ。</li><li><strong>頭の上の蝿も追えない：</strong>自分の頭の上にとまっている蝿すら追い払えない、つまり自分のことでも何一つ自分で解決できない不甲斐ない態度を指す言葉です。<br>自顾不暇，连自己头上的苍蝇都赶不走，就连自己的事情都做不好。</li><li><strong>頭の黒い鼠：</strong>鼠は家に住んでいる小泥棒というわけです、そこで鼠のように何か盗んでいく人間を指す。<br>家贼，指身边手脚不干净的人。当然小孩子ケーキをこっそり食べた也可以说是「頭の黒い鼠」(●’◡’●)。</li><li><strong>頭の中が白くなる：</strong>あんまりの出来事にショックを受けて、頭の中の回線がショートでもしてしまったように思考停止状態になる。<br>对突发状况头脑中一片白色，无法思考。</li><li><strong>頭のてっぺんから足の爪先まで：</strong>人の体の，上から下まで残らず。全身。また，全身·全体にわたっているさま。<br>全身上下。</li><li><strong>頭を痛める：</strong>心配事を抱えて悩んだり、苦しんだりしている様子。<br>烦恼，伤脑经哦。</li><li><strong>頭を掻く：</strong>ちょっとした失敗をしたり、照れくさい時、きまりの悪い時に、人は頭を掻いてごまかします。<br>犯了小失误，害羞了想萌混过关w。</li><li><strong>頭を下げる：</strong>お辞儀をする。<br>謝る、謝罪する。<br>敬服する、感服する。<br>本心から謝る気はないが謝罪の態度を示しておいた方が、相手の納得を得られ、事が穏やかに収まる、と判断した場合、不本意ではあっても敢えて「頭を下げる」ことがあります。<br>四个意思：1.鞠躬行礼；2.谢罪，表示歉意；3.钦佩，佩服；4.以大局为重，暂时选择服从。</li><li><strong>頭を絞る：</strong>難問に直面して、おれこれ考えを巡らし解決策を考えること。「知恵を絞る」と同じ意味の言葉です。<br>绞尽脑汁想办法。</li><li><strong>頭を突っ込む：</strong>仕事や仲間やグループなどに加わる。かかわりを持つ。「首を突っ込む」と同じ意味です。<br>介入，插手。</li></ul><h3 id="頭（ず）"><a href="#頭（ず）" class="headerlink" title="頭（ず）"></a>頭（ず）</h3><ul><li><strong>頭を冷やす：</strong>興奮を抑えて気持を落ち着かせること。<br>cool down，兄弟冷静。</li><li><strong>頭をもたげる：</strong>持ち上げる、起こす。<br>产生某种心情；露头角，势力抬头。</li><li><strong>頭が高い：</strong>相手を見下げる態度で、無礼である。横柄である。<br>高傲，妄自尊大，看不起人。</li><li><strong>頭痛の種：</strong>頭痛を引き起こすような原因、つまり心配事、悩み事の原因。<br>烦心事的真正原因。</li><li><strong>頭抜ける：</strong>普通のものと比べて遥かに水準を超えている、並々ではない。<br>超水准发挥，运动比赛时候如果谁都想。</li></ul><h3 id="頭（とう）"><a href="#頭（とう）" class="headerlink" title="頭（とう）"></a>頭（とう）</h3><ul><li><strong>頭角を表す：</strong>才能や業績が他のものより際だって優れている。<br>崭露头角，显示出与众不同的学识与才能，这不是说我吗。</li></ul><h2 id="髪"><a href="#髪" class="headerlink" title="髪"></a>髪</h2><h3 id="髪（かみ）"><a href="#髪（かみ）" class="headerlink" title="髪（かみ）"></a>髪（かみ）</h3><ul><li><strong>髪を逆立てる：</strong>それほど怒りが激しく激高しているということです。<br>气的头发都直立起来了。</li><li><strong>髪を振り乱す：</strong>髪の乱れるも気にかけず、一心不乱に何かに立ち向かっている。</li><li><strong>髪結いの亭主：</strong>妻の働きで養われている夫。<br>说的是靠妻子养活的男人。</li><li><strong>後ろ髪を引かれる：</strong>未練が残って、きっぱりと思い切れないこと。<br>依依不舍，不想离开你。</li><li><strong>女の髪の毛には大象もつながる：</strong>女の色香が男をひきつけ，男を支配する力の強いことのたとえ。<br>女性用自己的美色与魅力吸引男人，让男性深深陷入其中无法自拔。</li><li><strong>苦髪楽爪：</strong>苦労しているときは髪の伸びが早く、楽をしているときは爪の伸びが早いということ。</li><li><strong>とも白髪：</strong>夫婦が一緒に白髪になるまで長生きする。<br>白头偕老，世界上最幸福的事情莫过于此吧(<em> ￣3)(ε￣ </em>)*)</li></ul><h2 id="額（ひたい）"><a href="#額（ひたい）" class="headerlink" title="額（ひたい）"></a>額（ひたい）</h2><ul><li><strong>額を集める：</strong>集まって相談する。<br>召集到一起商议。</li><li><strong>額に汗する：</strong>額に球の汗が流れるほど一所懸命働いている。<br>赞扬一个人很努力工作。</li><li><strong>額の向こう傷：</strong>単に「向こう傷」とだけ言うことの方が多いようです、それは勇気の印、名誉の負傷ということになります。<br>索隆说「背中の傷は剣士の恥だ」，然后让世界第一的剑豪在胸膛留下刀伤，面对如此的强敌，为了守护与朋友的约定，勇敢战斗的索隆虽然输了但真的是太帅了。</li></ul><h2 id="顔（かお）"><a href="#顔（かお）" class="headerlink" title="顔（かお）"></a>顔（かお）</h2><ul><li><strong>顔色をうかがう：</strong>相手の顔色に応じて、こちらの出方を決めるわけです。<br>察言观色。</li><li><strong>顔から火が出る：</strong>恥ずかしさのために赤面する、恥ずかしくて顔が火照る。<br>巧妙的比喻害羞得脸都红了，火辣辣的。</li><li><strong>顔が売れる：</strong>世間に広く知られる。有名になる。<br>形容广为人知，有名望的人与商品。</li><li><strong>顔が利く：</strong>信用や権力があって，相手に便宜をはかってもらうことができる。<br>有面子，有势力，吃得开。</li><li><strong>顔を揃う：</strong>必要な人が全員集まって。<br>把人凑齐。</li><li><strong>顔が立つ：</strong>体面が保たれる。<br>保留颜面，有面子。</li><li><strong>顔を潰れる：</strong><br>丢脸；如果是颜面尽失，脸都丢光了是「顔を丸潰れる」。</li><li><strong>顔に泥を塗る：</strong>人に恥をかかせる、その人の面目を潰すという意味で使われます。<br>给别人脸上抹黑，让他羞愧得无地自容。</li><li><strong>顔向けできない：</strong>「合わせる顔がない」と似た意味です、相手に申し訳ないことをしてしまったり、不義理をしていて相手の顔をまともに見られないことを表す言葉です。<br>觉得有愧对方，没有脸见对方，不敢正视对方的双眼。</li><li><strong>顔を洗って出直す：</strong>今までの至らなかった態度をきちんと改めてから相手に会うという比喩表現として使われます。<br>一改之前的态度重新过来。</li><li><strong>顔を合わせる：</strong>二つの意味があります：<br>会う。<br>（試合などで）対戦する。<br>两个意思：1.见面；2.比赛中交锋。</li><li><strong>顔を貸す：</strong>誰かに何か用があって他の場所に呼び出す時には「ちょっと顔を貸してくれ」というような言い方をします。<br>赏个脸，给个面子吧。</li><li><strong>顔を出す：</strong><br>隠れていたものが現れ出る、お日さまが顔を出す<br>会合などに出席する。<br>人の家を訪ねる。<br>露脸，出面；出席；访问。</li><li><strong>大きな顔をする：</strong>偉そうに振る舞う·威張った顔をする。<br>很了不起的样子，神气十足摆架子。</li><li><strong>親の顔が見たい：</strong>しつけの悪いよその子の言動に，驚きあきれて言う語。<br>看到言行无礼的熊孩子时极其惊讶甚至到了看看他父母是怎么教育他的。</li><li><strong>難しい顔：</strong>（横からちょっと声もかけにくいような）不機嫌そうな·不愉快そうな顔。<br>思考难题时的表情，脸上写满了不开心。</li></ul><h2 id="面（つら）"><a href="#面（つら）" class="headerlink" title="面（つら）"></a>面（つら）</h2><ul><li><strong>面の皮が厚い：</strong>恥知らず厚かましく図々しい人。<br>脸皮厚，我从未见过有如此厚颜无耻之人。</li><li><strong>泣き面に蜂：</strong>泣いている顔をさらに蜂が刺す。不運や不幸が重なることのたとえ。<br>祸不单行。</li><li><strong>吠え面かく：</strong>悔しくて大声を出して泣いている。<br>后悔不已留下了眼泪இ௰இ。</li><li><strong>横っ面を引っ叩く：</strong>パシーンと音がするほど手荒く頬を張り飛ばす。<br>表示我真想一巴掌拍过去。</li></ul><h2 id="眉（まゆ）"><a href="#眉（まゆ）" class="headerlink" title="眉（まゆ）"></a>眉（まゆ）</h2><ul><li><strong>眉一つ動かさない：</strong>「どんなことにも動じない、顔色一つも変えない」態度を形容する言葉です。<br>形容临危不惧，毫不动摇。</li><li><strong>眉に唾を付ける：</strong>人に騙されないように用心してかかる·警戒することを「眉に唾をつける」ということになりました。</li><li><strong>眉に火がつく：</strong>危険がそこまで迫っているという意味を表します。<br>火烧眉毛，情况紧急。</li><li><strong>眉を曇らす：</strong>「（心配事や悩み事のせいで）表情を曇らせ、暗い顔をしている」と言います。<br>面带愁容，布满阴云。</li><li><strong>眉を開く：</strong>（悩みから解放されて）明るい表情を取り戻すこと。<br>舒展愁容，心情放晴，变得积极起来。</li><li><strong>眉を顰める：</strong>（何か不愉快な事を見たり聞いたりして）不快な気分になっている場合に多く使われる言葉です。<br>皱眉，心中不快。</li></ul><h2 id="目（め）"><a href="#目（め）" class="headerlink" title="目（め）"></a>目（め）</h2><ul><li><strong>目から鱗が落ちる：</strong>あることがきっかけとなって，迷いからさめたり，物事の実態がわかるようになる。<br>以某些契机，从迷茫中醒悟过来，茅塞顿开。</li><li><strong>目から鼻へ抜ける：</strong>りこうで機転がきく。また，抜け目がない。<br>君は本当に賢い，这句短语就是聪明，伶俐的意思，啊哈哈哈(￣▽￣)”。</li><li><strong>目が利く：</strong>物の価値を識別する眼力が高い。<br>有眼力，鉴别力强。</li><li><strong>目頭（めがら）が熱くなる：</strong>感動して涙が出そうになる。「熱いものが込み上げる」と同じ意味です。うれしい時の涙、悲しい時の涙は水っぽく、悔し涙や怒りの涙は塩辛く、しょっぱいのだそうです。<br>感动得热泪盈眶，听说心情不同眼泪的味道也不同，以后有机会可以尝尝看இ௰இ。</li><li><strong>目くじらを立てる：</strong>目をつり上げる。ささいなことを取り立ててとがめることにいう。目角を立てる。<br>过分追究，责难。</li><li><strong>目には目を：</strong>「目には目を」の後には「歯には歯を」と続きます。<br>以牙还牙。</li><li><strong>目にもの見せる：</strong>ひどい目にあわせることによって相手に身に見て分からせるという意味で使われます。<br>思い知らせる、适用于对方太嚣张，让其尝尝什么是厉害，教他重新做人。</li><li><strong>目に物言わす：</strong></li><li><strong>目の色を変える：</strong>何かに夢中になったり、怒ったり、興奮して目つきが変わる様子を表します。<br>形容愤怒、惊讶或全神贯注的样子。</li><li><strong>目の中へ入れても痛くない：</strong>祖父母や両親が、小さな子供を可愛がるような気持を表す、本当に可愛くてたまらない気持を俗語では「食べてしまいたい」です。<br>很疼爱小孩子。</li><li><strong>目を細める：</strong>うれしいそうに微笑んでいる様子を言います。<br>眯着眼睛笑，很开森的样子。</li><li><strong>目も当てられない：</strong>（あんまりにひどい状態で）直視できない、目を向けられない。<br>惨不忍睹。</li><li><strong>目を奪われる：</strong>見とれて，他の物が目にはいらない。<br>看得入迷，视线无法从中移开。</li><li><strong>目を覚ます：</strong>三つの意味があります。<ul><li>眠りからさめる。</li><li>迷いや誤りを自覚し，本来あるべき状態になる。</li><li>抑えられていた感情などが，何かをきっかけに動き始める。<br>原意是从睡眠中醒来，引申义有两个：1.觉悟后回到正道；2.被压抑的情感开始苏醒</li></ul></li><li><strong>目を皿にする：</strong>不思議なものを見たり、驚いたり、何かを探している時に、かっと大きく目を見開く様子を描写する言葉です。<br>看到不可思议的事物，眼睛睁的贼大很惊讶。</li><li><strong>目を白黒させる：</strong>せわしなく目玉を動かす。驚くさま。また，物がのどにつかえたりして，苦しむさま。<br>惊恐万分，翻白眼。</li><li><strong>目をつぶる：</strong>三つの意味は：<ul><li>目を閉じる。また，眠る。</li><li>欠点や過失を見ないふりをしてとがめない。知らないことにする。</li><li>死ぬ。<br>三个意思：1.闭上眼睛；睁一只眼闭一只眼，这次就不追究啦；安详的死去。</li></ul></li><li><strong>目を光らす：</strong>厳重に監視する。鋭い目つきで見張る。<br>严密监视，提高警惕。</li><li><strong>夜目遠目笠の内：</strong>女の容貌は，夜見たとき，遠方から見たとき，笠をかぶっているところを見たときに，実際より美しく見えるということ。<br>朦胧的夜景，身披斗笠的古代女性或许让人产生美的错觉吧，是褒是贬有些微妙哦。或许喜欢的人或事，可以继续保持一定距离，尽情欣赏。</li><li><strong>目病み女に風邪引き男：</strong>眼病で目のうるんだ女と，風邪を引いて弱っている男は普段と違う印象が生まれて、それが新しい魅力にもなるのでしょうか。<br>轻轻染上秋季感伤的柔情女性，不经意间展示出与平常时坚强可靠不同的脆弱男子，是否会让异性顿生情愫，感到更有魅力呢。</li><li><strong>女の目には鈴を張れ：</strong>漢語では「明眸皓歯」といいますね、美しく澄んだ瞳、そして歯並びが美しく白い歯ということですから、美人の条件として目の美しさが重視されていたようです<br>。比喻女性水灵的眼睛，美丽可爱。</li></ul><h2 id="鼻（はな）"><a href="#鼻（はな）" class="headerlink" title="鼻（はな）"></a>鼻（はな）</h2><ul><li><strong>鼻息が荒い：</strong>意気込みが激しい。強気で威勢がよい。<br>累得直喘粗气；盛气凌人，气势汹汹。</li><li><strong>鼻が高い：</strong>誇らしい気持ち·得意な気持ちになることです。「天狗になる」はなおさらだ。<br>自豪，骄傲，得意。变成了天狗比喻过度得意变成了傲慢，自负之意。</li><li><strong>鼻が曲がる：</strong>鼻がおかしくなりそうなほどいやなにおいがするさま。<br>恶臭，难以忍受的气味。</li><li><strong>鼻であしらう：</strong>真面目な程度で応対せずに、相手の言葉を軽く聞き流し冷淡な態度を取るという意味です。<br>冷淡对待。</li><li><strong>鼻の下を伸ばす：</strong>好色そうな表情をしたり、美しい女性に甘い態度を見せる。<br>色眯眯的样子，迷恋女色。</li><li><strong>鼻をうごめかす：</strong>得意げな様子をみせるさまをいう。<br>瞧你洋洋得意的样子。</li><li><strong>鼻を鳴らす：</strong>女性が男性に甘えて物をねだる時には意識的に鼻にかかった声を出したりします。ただし女性限定だぞ。</li><li><strong>鼻薬を嗅がせる：</strong>賄賂を使う。「鼻薬」は子供の機嫌を取るために与える菓子。<br>施小恩小惠，给点甜头。</li><li>木て鼻をくくる：相手を冷淡にあしらう·無愛想な態度を見せる。<br>以冷淡的态度对待他人。</li></ul><h2 id="口（くち）"><a href="#口（くち）" class="headerlink" title="口（くち）"></a>口（くち）</h2><ul><li><strong>口が干上がる：</strong>収入の道が断たれ生活が立ち行かなくなる。<br>收入来源断了，吃不上饭。</li><li><strong>口がうまい：</strong>弁舌の立つ人、話し上手な人。<br>嘴真甜，会说话。</li><li><strong>口が軽い：</strong>軽率で、大事な秘密までうっかりしゃべってしまう。<br>大嘴巴。</li><li><strong>口が堅い：</strong>秘密などを軽々しく他へもらさない。<br>守口如瓶。</li><li><strong>口が腐っても：</strong>いつまでも口を噤んで秘密を守る。<br>无论如何也会保守秘密的。</li><li><strong>口が酸っぱくなる：</strong>同じことを何度も繰り返して言うさま。<br>苦口婆心，磨破嘴皮。</li><li><strong>口が禍のもと：</strong>不用意に余計なことを口にするなということです。<br>祸从口出，不要说多余的话。</li><li><strong>言う口の下から：</strong>言ったすぐあとから。多く，非難の気持ちを込めて使われる。<br>刚说完就。。。对着干的节奏啊。</li><li><strong>口車に乗る：</strong>巧みな言葉に引っかかって騙される。「口がうまい」やつに騙されるなよ、お嬢ちゃん。<br>不要被花言巧语骗啦。</li><li><strong>人の口には戸が立てられない：</strong>世間のうわさや評判はどうしても止めることが出来ないという意味です。<br>嘴巴是封不住的，流言蜚语迟早满天飞。</li></ul><h2 id="唇（くちびる）"><a href="#唇（くちびる）" class="headerlink" title="唇（くちびる）"></a>唇（くちびる）</h2><ul><li><strong>唇を噛む：</strong>怒りや悔しさをこらえる様子を表す言葉です。<br>抑制住怒火或悔恨。</li><li><strong>唇をとがらす：</strong>不満を感じている時の表情です。<br>嘟嘴，不满。</li></ul><h2 id="歯（は）"><a href="#歯（は）" class="headerlink" title="歯（は）"></a>歯（は）</h2><ul><li><strong>歯が浮く：</strong>二つの意味があります：<ul><li>不快な音を聞いたり，酸っぱい物を食べたりして，歯の根がゆるんで浮くように感ずる。</li><li>そらぞらしく，きざな言動に対して，気持ち悪く感ずる。<br>生理或心理上的不快感。</li></ul></li><li><strong>歯が立たない：</strong>相手の力が自分よりはるかに勝っていて、到底、敵わないという意味です。<br>难题咬不动，对手实力太强大敌不过。</li><li><strong>歯に衣着せぬ：</strong>自分の思った通りのままにずけずけ言う·思っていること包み隠さぜ率直に言う。<br>说话无顾虑。</li><li><strong>歯の抜けたよう：</strong>もともとあるはずの物がなくなったために寂しい感じがする。<br>残缺不全，本应该拥有却失去而感到的失落。</li><li><strong>歯の根が合わない：</strong>寒さや恐怖のために，ふるえおののくさまにいう。<br>因寒冷或恐惧而打哆嗦。</li><li><strong>ごまめの歯ぎしり：</strong>大して力はないのに（自分の力の程を知らず）興奮していきなり立つは無駄な事だ。<br>凭意气用事也无济于事。</li></ul><h2 id="舌（した）"><a href="#舌（した）" class="headerlink" title="舌（した）"></a>舌（した）</h2><ul><li><strong>舌が回る：</strong>すらすらとよどみなくしゃべる。口が達者である。<br>伶牙俐齿，能说会道，能叽叽喳喳说个不停。</li><li><strong>舌先三寸：</strong>うわべだけのうまい言葉で、心や中身が備わっていないこと。<br>只是表面上话说的很漂亮的人不可信哦。</li><li><strong>舌なめずり：</strong><ul><li>おいしい食物を前にしたり想像したときや食事の前後に，舌で唇をなめること。</li><li>何かしようと獲物を待ち構えているようす。<br>你看起来很好吃，忍不住啦啊啊啊(╹ڡ╹ )。emmmm，就像路飞看到了肉，乔巴遇到了棉花糖，山治遇到了妹子（大雾）(❤ ω ❤)。</li></ul></li><li><strong>舌を出す：</strong><ul><li>陰で人を馬鹿にしたり、心の中で人を嘲笑する。</li><li>自分の失敗に照れたり、ごまかしたりする時のしぐさ。<br>两个意思：1.暗自嘲笑他人；2.像萌混过关。</li></ul></li><li><strong>舌を巻く：</strong>（相手に圧倒されて）非常に驚く。感心する。<br>惊叹不已，在下佩服。</li><li><strong>二枚舌：</strong>食い違ったことを言う·嘘をつくの意味です。<br>撒谎，前后矛盾。</li></ul><h2 id="顎（あご）"><a href="#顎（あご）" class="headerlink" title="顎（あご）"></a>顎（あご）</h2><ul><li><strong>顎が落ちる：</strong>非常に美味しい物を食べた時の感覚。<br>特别好吃。</li><li><strong>顎で使う：</strong>高慢な態度で人を使う。<br>颐指气使，态度傲慢，总以为自己高高在上的样子。</li><li><strong>顎を撫でる：</strong>人が得意な気分に浸っている時は、つい無意識に顎を撫で回したりするものです。<br>心满意足。</li><li><strong>顎足付き：</strong>食事代や交通費が先方持ちであること<br>餐费或交通费用由对方承担。</li></ul><h2 id="頬（ほお）"><a href="#頬（ほお）" class="headerlink" title="頬（ほお）"></a>頬（ほお）</h2><ul><li><strong>頬かぶり：</strong>知って知らぬふりをすること。<br>假装不知道。</li><li><strong>頬がゆるむ：</strong>うれしくて、にこにこと笑顔になることを言います。<br>笑逐颜开，感到快乐与幸福o(<em>￣▽￣</em>)ブ。</li><li><strong>頬を染める：</strong>恥ずかしさのために顔を赤くする。バ、バカ！<br>あ、誰かさんを褒めるときは「バ、バカ！」と言われた、顔赤くなったかな=￣ω￣=。害羞的脸红了。</li><li><strong>頬をふくらます：</strong>不平や不満の気持を示す表情。<br>因生气噘嘴。</li></ul><h2 id="耳（みみ）"><a href="#耳（みみ）" class="headerlink" title="耳（みみ）"></a>耳（みみ）</h2><ul><li><strong>右の耳から左の耳：</strong>人の話を真面目に聞こうとしないで聞き流すこと。<br>左耳进右耳出。</li><li><strong>耳が痛い：</strong>他人の言葉が自分の弱点を適確に突いていて、聞くのが辛い。<br>因被他人说中自己的弱点，听起来很难受。</li><li><strong>耳を傾ける：</strong>熱心に聞く。傾聴する。「耳を澄ます」と同じ意味です。<br>侧耳倾听。</li><li><strong>耳を塞ぐ：</strong>聞かないようにする。<br>闭目塞听。</li><li><strong>耳を疑う：</strong>思いがけない音や発言を聞いて，聞き間違いではないかと驚く。<br>不敢相信自己的耳朵。</li><li><strong>耳を揃える：</strong>金銭などを不足なくとり揃える。<br>凑齐款项。</li></ul><h2 id="首（くび）"><a href="#首（くび）" class="headerlink" title="首（くび）"></a>首（くび）</h2><ul><li><strong>首が危ない：</strong>失職しそうだ·解雇されそうだ。<br>工作要不保啦。</li><li><strong>首が繋がる：</strong>どうにか解雇を免れる。<br>总算保住了工作。</li><li><strong>首が回らない：</strong>借金などで，やりくりがつかない。<br>周转不灵。</li><li><strong>首に縄をつける：</strong>いやがる人を無理に連れて行こうとするたとえ。<br>生拉硬扯，强迫他人。</li><li><strong>首を傾げる：</strong>疑問に思う、納得できない、賛成できないという意味です。<br>有疑问，纳闷，无法赞成。</li><li><strong>首を縦に振る：</strong>同意、賛成、承諾の意思表示の動作です。<br>点头答应。</li><li><strong>首を長くする：</strong>期待しながら今か今かと待ちかねている。<br>翘首盼望。</li></ul><h2 id="喉（のど）"><a href="#喉（のど）" class="headerlink" title="喉（のど）"></a>喉（のど）</h2><ul><li><strong>喉が鳴る：</strong>美味しいそうな物を目の前にして我慢できないほど食べたくなる。<br>看到好吃的饿得慌。</li><li><strong>のど自慢：</strong>美声や歌のうまさを自慢すること、またその人を指す言葉です。<br>炫耀自己的喉咙。</li><li><strong>喉元過ぎれば熱さを忘れる：</strong>苦しい事も過ぎてしまえば忘れてしまうことのたとえ。また、苦しいときに受けた恩も楽になれば忘れてしまうことのたとえ。<br>好了伤疤忘了疼，不吸取教训；事过忘恩。</li></ul><hr><h1 id="上身"><a href="#上身" class="headerlink" title="上身"></a>上身</h1><h2 id="肩（かた）"><a href="#肩（かた）" class="headerlink" title="肩（かた）"></a>肩（かた）</h2><ul><li><strong>肩で息をする：</strong>上下に肩を動かし，荒い息をする。<br>呼吸困难。</li><li><strong>肩にのしかかる：</strong>肩にかかってくる責任が重く、重圧のために押しつぶされそうになるという感じです。<br>身负重任，喘不过气来了。</li><li><strong>肩を怒らせる：</strong>肩を上に持ち上げたり大きく振ったりして威圧的な感じを醸すこと<br>摆架子。</li><li><strong>肩を落とす：</strong>気落ちしてしょんぼりする。落胆する。<br>浑身无力；沮丧。</li><li><strong>肩を持つ：</strong>意見を別れたり、対立関係にある人のどちらか一方を応援する。<br>偏袒某一方。</li><li><strong>肩身が狭い：</strong>世間に対して面目が立たない。<br>感到丢脸啊。</li><li><strong>肩身が広い：</strong>「肩身が狭い」を裏返した表現です。世間に対して誇らしい気分である。<br>感到自豪啊。</li></ul><h2 id="胸（むね）"><a href="#胸（むね）" class="headerlink" title="胸（むね）"></a>胸（むね）</h2><ul><li><strong>胸が躍る：</strong>期待や興奮のためにワクワクする。<br>期待接下来的发展，心情激动。ワクワクするなぁ、次はどんな冒険が待ってんだァ！</li><li><strong>胸が痞える：</strong>激しい感情で胸がふさがったようになる。<br>心情抑郁，难过。</li><li><strong>胸に納める：</strong>聞いたこと、見たことを自分の心の中にしまっておいて決して口に出さない。<br>所见所闻深藏在心里不乱说出去。</li><li><strong>胸を打つ：</strong>ある事柄が人を強く感動させる、心が打つ。<br>很感动，打动心弦(ಥ _ ಥ)。</li></ul><h2 id="心臓（しんぞう）"><a href="#心臓（しんぞう）" class="headerlink" title="心臓（しんぞう）"></a>心臓（しんぞう）</h2><ul><li><strong>心臓が強い：</strong>物怖じしないで、どんな場面でも平気な態度であるは褒め言葉として使われるのに対して厚かましいという否定的な非難のニュアンスを含んでいます。<br>胆子大；脸皮厚。</li><li><strong>心臓に毛が生えている：</strong>非常に厚かましく、恥知らずで図々しい態度。<br>厚颜无耻。</li><li><strong>心臓が早鐘を打つ：</strong>激しい運動をしたり、不安や緊張のために動悸が速くなること。<br>激动得怦怦直跳。</li></ul><h2 id="腹（はら）"><a href="#腹（はら）" class="headerlink" title="腹（はら）"></a>腹（はら）</h2><ul><li><strong>腹の虫が治まらない：</strong>怒りを抑えきれない、癪に触って我慢ならない。<br>控制不住自己的感情，难以压抑住心中的怒火。</li><li><strong>腹も身の内：</strong>腹も体の一部だから大切に扱わなくてはならない、暴飲暴食をすると必ず体を壊してしまう。<br>食不过量，不可暴饮暴食哦。</li><li><strong>腹を括る：</strong>覚悟を決める。<br>做好觉悟了。</li><li><strong>腹を割って話す；</strong>一切、隠し立てしないで本心を話す·包み隠すことなく心の中をすべて見せて話す。<br>相信对方，推心置腹，打开天窗说亮话。</li><li><strong>痛くもない腹を探られる：</strong>別に悪いことしてないのに他人から疑われること、迷惑な気分を巧みに言い表した比喩表現です。<br>无缘无故受到猜疑。</li><li><strong>自腹を切る：</strong>公や会社あるいは共同で出すような金を，あえて自分で負担する。<br>自己掏腰包。</li><li><strong>私腹を肥やす：</strong>（地位や職権を悪用して）自分の利益を追い求める、私財を増やす。<br>谋取私利。</li></ul><h2 id="胴（どう）"><a href="#胴（どう）" class="headerlink" title="胴（どう）"></a>胴（どう）</h2><ul><li><strong>胴上げ：</strong>喜びや祝福を表すために，大勢の人間が祝福される人の体を抱え上げて何度も空中に投げ上げること。<br>为了表示祝贺，众人把祝贺对象抛起来。</li><li><strong>胴震い：</strong>寒さ、恐怖感、興奮のために体がガタガタ震える様子。<br>由于寒冷、恐怖、兴奋等原因而身体颤动。</li><li><strong>胴忘れ：</strong>普段はよく知っている物事や人名、物の名前などを忘れてしまって、なかなか思い出せないこと。<br>话都到喉咙了突然忘记，还真的是常有的事╮(╯▽╰)╭。</li></ul><h2 id="背中（せなか）"><a href="#背中（せなか）" class="headerlink" title="背中（せなか）"></a>背中（せなか）</h2><ul><li><strong>背中合わせ：</strong><ul><li>二人の人が，また物と物とが背と背を合わせて，互いに後ろ向きになっていること。</li><li>背と腹のように互いに裏表の関係にあること。</li><li>仲が悪いこと。<br>三个意思：1.两者中的一者；2.表里联系密切，二者必有一个；3.关系不好。</li></ul></li><li><strong>背中が見える：</strong>もう、今にも手の届く範囲にライバルがいるという意味で使われます。<br>经过努力终于赶上对手了。</li><li><strong>背中に風を受ける：</strong>追い風に乗って物事を順調に捗る。<br>如有神力相助，顺利进展。</li><li><strong>背中を押す：</strong>行動しようかどうか迷ったり躊躇ったりしている人に、最後の一押しをする、決断を促す、などの意味で使われる表現。<br>有时候我们需要别人在自己背后推一把。</li><li><strong>背中を見て育つ：</strong>親が黙って生き方の模範を子供に示すという意味になります。<br>孩子们都是学自己父母的，父母的言行会潜移默化的影响子女。</li><li><strong>背中を向ける：</strong>興味のない様子、無関心な態度。さらに、もう少し強い意味になると「相手に従わらない、拒否の態度を示す」ことも意味します。<br>不加理睬，不关心；不顺从，违背。</li><li><strong>背に腹は変えられない：</strong>より重大な事のためには、他の小さな事は多少は犠牲にしても仕方がない。<br>为了重要的事情，小的牺牲是在所难免的，值得的。</li></ul><h2 id="腰（こし）"><a href="#腰（こし）" class="headerlink" title="腰（こし）"></a>腰（こし）</h2><ul><li><strong>腰を折る：</strong><ul><li>腰をかがめる。体を前に曲げる。</li><li>中途で妨げる。</li><li>頭を下げる。屈服する。<br>三个意思：弯腰；中途妨碍；低头屈服。</li></ul></li><li><strong>腰が重い：</strong>なかなか行動に移そうとしない、いつまでもたっても働こうとしない。<br>懒得动。</li><li><strong>腰を据える：</strong><ul><li>どっかりとすわり込む。すっかり落ち着く。</li><li>一つの事に全力を集中させる。<br>两个意思：1.安下心来；2.专心致志做一件事。</li></ul></li><li><strong>腰を抜かす：</strong><ul><li>腰に力が入らず立てなくなる。</li><li>あまりの驚きに足腰が立たなくなる。<br>两个意思：1.直不起腰；2.惊呆了。</li></ul></li><li><strong>物腰が柔らかい：</strong>「人に対する態度が穏やかな、人に向ける態度や言動ややさしく丁寧な」という意味です。<br>待人接物温和。</li><li><strong>本腰を入れる：</strong>本気で物事に取り込もうとする腰構え。<br>拿起你的干劲来刚Ψ(￣∀￣)Ψ。</li></ul><h2 id="尻（しり）"><a href="#尻（しり）" class="headerlink" title="尻（しり）"></a>尻（しり）</h2><ul><li><strong>尻こそばゆい：</strong><ul><li>くすぐったい。</li><li>ほめられるなどして，照れ臭い。<br>痒；难为情的。</li></ul></li><li><strong>尻が長い：</strong>いつまでも座り込んでいて、なかなか席を立とうとしない長居の客を指す。<br>久坐不走。</li><li><strong>尻に帆を掛ける：</strong>あわてて逃げ出す。<br>仓皇逃跑。</li><li><strong>尻を拭う：</strong>他人の失敗などの後始末をする。<br>替别人善后，处理残局。</li><li><strong>尻を捲る：</strong>威嚇するような態度に出る。<br>态度突变，翻脸。</li><li><strong>尻を持ち込む：</strong>関係者に問題を持ち込み責任を問い、解決を迫る。<br>追究责任。</li><li><strong>尻尾を出す：</strong>隠していた事や、ごまかしていた事がばれてしまう。<br>露出狐狸尾巴。</li><li><strong>尻尾を振る：</strong>こびへつらう。<br>阿谀奉承拍马屁。</li><li><strong>尻尾を巻く：</strong>立ち向かう気持ちをなくす。降参する。<br>夹着尾巴逃走。</li></ul><h2 id="腕（うで）"><a href="#腕（うで）" class="headerlink" title="腕（うで）"></a>腕（うで）</h2><ul><li><strong>腕が立つ：</strong>技量がきわめて優れている。<br>技术高超，厉害啊。</li><li><strong>腕に縒りを掛ける：</strong>自分の能力を最大限に発揮しようとしてはりきる。<br>竭尽全力，本当の力を見せてやろうか(╯‵□′)╯炸弹！•••*～●。</li><li><strong>朝雨は女の腕捲り：</strong>朝雨はすぐにあがるものだから，女の腕まくりと同様，大して気にかけることはない。<br>还成不了气候不值得太在意。不可滥用哦，不然会以为是被鄙视了的人强烈反击。</li></ul><h2 id="肘（ひじ）"><a href="#肘（ひじ）" class="headerlink" title="肘（ひじ）"></a>肘（ひじ）</h2><ul><li><strong>肘鉄砲を食わせる：</strong><ul><li>肘の端で突きのける。</li><li>相手の誘いや要求を強くはねつける。<br>用肘用力顶对方；严厉拒绝。</li></ul></li><li><strong>肘を張る：</strong>肘を突っ張って、いかにも強そうな様子をする。威張る。<br>（双手叉腰）向两方支开胳膊肘，神气十足。</li></ul><h2 id="手（て）"><a href="#手（て）" class="headerlink" title="手（て）"></a>手（て）</h2><ul><li><strong>あの手この手：</strong>一つのことに対して、次々と色々な方法を試してみるという意味です。「手」は「手段」の意味で使われている例です。<br>千方百计。</li><li><strong>手に余る：</strong>ここの「手」は「能力」という意味ですから「物事が自分の処理能力を超えている」ことを言います。<br>解决不了。</li><li><strong>手を切る：</strong>「関係を断ち切る、縁を切る」という意味ですが、特に「悪い関係や男女関係を清算する」という意味で使われます。<br>断绝关系。</li><li><strong>手を組む：</strong>お互いに力を貸し合う。<br>联手。</li><li><strong>手を貸す：</strong>援助する。非常に忙しくて、たとえどんな手助けでも欲しい時は「猫の手も借りたい」と言います。<br>帮忙。</li><li><strong>手を抜く：</strong>ここの「手」は「手間、手数」のことを指しますから「手を抜く」は手数を省く。<br>偷工减料，潦草行事。</li></ul><h2 id="指（ゆび）"><a href="#指（ゆび）" class="headerlink" title="指（ゆび）"></a>指（ゆび）</h2><ul><li><strong>指一本も差させない：</strong>他人の非難・干渉を少しも許さない。<br>不让别人干预。</li><li><strong>指折り数える：</strong>指を一本ずつ折って数えること。<br>屈指计算天数。</li><li><strong>指切り：</strong><ul><li>約束を必ず守るしるしとして，互いの小指を曲げて掛け，「指切りげんまんうそついたら針千本のます」などと唱えあうこと。げんまん。</li><li>主に男女の仲で，愛情や約束の不変を誓って小指の先を切ること。<br>纯真与浪漫的约定方式，拉小指起誓。</li></ul></li><li><strong>指をくわえる：</strong>うらやましく思いながら，何もできずにいる。<br>羡慕哦。</li></ul><h2 id="爪（つめ）"><a href="#爪（つめ）" class="headerlink" title="爪（つめ）"></a>爪（つめ）</h2><ul><li><strong>爪に火を点す：</strong>きわめて倹約した生活をする。貧しく苦しい生活をする。または、非常に吝嗇である。<br>过分节俭。</li><li><strong>爪の垢を煎じて飲む：</strong>立派な人にあやかって、せめて爪の垢程度でもその人に近づくように頑張ってみる。<br>模仿并盼望赶上优秀的人。</li><li><strong>爪を隠す：</strong>才能を表面に出さない。<br>深藏不露。</li><li><strong>爪を研ぐ：</strong>心中に野心を秘めて機会を待ち構えている。<br>跃跃欲试。</li><li><strong>爪弾き：</strong>他人を嫌って排斥すること。仲間はずれにすること。<br>嫌恶，排斥，把某人当外人。</li></ul><h2 id="身（み）"><a href="#身（み）" class="headerlink" title="身（み）"></a>身（み）</h2><ul><li><strong>身を粉にする：</strong>身がすり減って粉になってしまうほど苦労をいとわず一生懸命働くことを言います。<br>粉身碎骨，不辞劳苦，拼命实现有车有房有老婆的梦想（雾）。</li><li><strong>身を引く：</strong>これまでの地位、立場からしりぞく。<br>隐退，退位，辞职。</li><li><strong>身を持ち崩す：</strong>品行が悪く，だらしのない生活をするようになる。<br>邋遢的生活，品行恶劣，身败名裂。</li></ul><h2 id="骨（ほね）"><a href="#骨（ほね）" class="headerlink" title="骨（ほね）"></a>骨（ほね）</h2><ul><li><strong>骨が折れる：</strong>困難である。労力を要する。<br>费力气的。</li><li><strong>骨身を惜しまず：</strong>苦労や面倒をいとわない、たとえ厄介なことでも力を出し惜しみしない。<br>不辞辛苦去做。</li><li><strong>骨身に沁みる：</strong>体の奥まで沁み通るように強く感じられる。<br>刻骨铭心。</li><li><strong>骨までしゃぶる：</strong>とことん人を利用し尽くす、徹底的に人から搾り取る。<br>吸干油水，榨干。（榨汁姬ヽ(*。&gt;Д&lt;)o゜*)）。</li><li><strong>骨抜きにする：</strong><ul><li>計画や案などから肝心の部分を抜き去り，内容のないものにすること。</li><li>気骨や節操などをなくさせること。<br>1.就像抽去核心的东西，内容显得空洞；2.失去原则，迷失。</li></ul></li></ul><h2 id="肝（きも）"><a href="#肝（きも）" class="headerlink" title="肝（きも）"></a>肝（きも）</h2><ul><li><strong>肝が太い：</strong>少々のことでは物事に動じない、大胆不敵の意味です。<br>胆子大。</li><li><strong>肝を潰す：</strong>びっくり仰天する。非常に驚く。<br>吓死了。</li></ul><h2 id="腸（はらわた）"><a href="#腸（はらわた）" class="headerlink" title="腸（はらわた）"></a>腸（はらわた）</h2><ul><li><strong>腸が腐る；</strong>精神が堕落する。根性も気骨もなくなる。<br>灵魂腐朽与堕落了。</li><li><strong>腸がちぎれる：</strong>悲しみや，つらさに耐えきれない。<br>悲痛欲绝，肝肠寸断。</li></ul><hr><h1 id="下身"><a href="#下身" class="headerlink" title="下身"></a>下身</h1><h2 id="膝（ひざ）"><a href="#膝（ひざ）" class="headerlink" title="膝（ひざ）"></a>膝（ひざ）</h2><ul><li><strong>膝を屈する：</strong>屈服する。<br>屈服。</li><li><strong>膝を進める：</strong>体を前に進めて相手に近づく。乗り気になる。<br>感兴趣。</li><li><strong>膝を打つ：</strong>何かを急に思いついたり、ふと良い知恵が浮かんだ時や、感心したときに思わずポンと膝を叩くことです。<br>忽然想起某事或表示钦佩时拍大腿。</li><li><strong>膝が笑う：</strong>「長い急斜面や山道を降り続けると、だんだんひざの関節が疲れてきて、足がガクガクする感覚は「膝が笑う」と形容します。<br>两腿发软。</li></ul><h2 id="脛（すね）"><a href="#脛（すね）" class="headerlink" title="脛（すね）"></a>脛（すね）</h2><ul><li><strong>脛を齧る（かじる）：</strong>一人前の年齢になってからも、まだ経済的に自立できないで親に依存している状態を指します。<br>啃老族的情况。</li><li><strong>脛に疵持つ：</strong>昔の悪事を隠している、やましい隠し事がある。<br>心中有愧，藏有不能为人说的事。</li></ul><h2 id="足（あし）"><a href="#足（あし）" class="headerlink" title="足（あし）"></a>足（あし）</h2><ul><li><strong>足が地に着かない：</strong><ul><li>うれしさに，興奮して落ち着かないさまをいう。</li><li>考えや行動がしっかりしていない。<br>高兴的忘乎所以；想法脱离实际。</li></ul></li><li><strong>足が遠のく：</strong>今までは頻繁に訪ねていたのに、最近はすっかりご無沙汰している。<br>疏远。</li><li><strong>足元にも及ばない：</strong>自分と比較すると相手が立派過ぎて、とてもそばには近づけないという意味です。<br>望尘莫及。</li><li><strong>足元を見る：</strong>相手の弱点を見抜いて自分に有利なように利用する。<br>抓住对手的把柄、弱点。</li></ul><hr><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="涙（なみだ）"><a href="#涙（なみだ）" class="headerlink" title="涙（なみだ）"></a>涙（なみだ）</h2><ul><li><strong>うれし涙：</strong>人間は不思議な存在ですから悲しい時だけではなく、うれしくても涙を流します。嬉しさのあんまり感動して流す涙をうれし涙と言います。<br>感动的泪水/(ㄒoㄒ)/。</li><li><strong>血の涙：</strong>非常につらい時、悲しい時に流す涙。<br>无限悲伤的泪，不要让喜欢你的人与你喜欢的人伤心落泪哦。</li><li><strong>貰い涙：</strong>人は感情の動物ですから、笑いや涙は感染するのです。人が泣いているのを見て悲しさが伝染して自分も一緒になって泣くことを貰い涙と言います。</li><li><strong>涙にくれる：</strong>涙を流しながら暗い気持ちで日を送る。<br>每天以泪洗面。</li><li><strong>涙を呑む：</strong>くやしさ、無念さをじっとこらえる。<br>饮泣，忍住痛苦。</li><li><strong>涙を振るう：</strong>涙が流れるのを振りはらう。個人的な同情や私情を振り捨てる。<br>拭去眼泪，摒弃私情。</li></ul><h2 id="血（ち）"><a href="#血（ち）" class="headerlink" title="血（ち）"></a>血（ち）</h2><ul><li><strong>血が騒ぐ：</strong>興奮して、気持ちが高ぶり、じっとしていられなくなる状態を表します。<br>心情激动。</li><li><strong>血を見る：</strong>争いで血が流れる。争いで死傷者が出る。<br>发生流血事件。</li><li><strong>血も涙もない：</strong>熱い血や涙を持っているとは思えない、冷酷で人情のかけらもない態度を言います。<br>冷酷无情，没有人性。</li><li><strong>血を吐く思い：</strong>非常につらい思い。<br>非常悲痛。</li><li><strong>血と汗の結晶：</strong>大変な苦労を積み重ね、苦労の末にやつとなし遂げた成果。<br>来之不易的辛勤汗水的结晶，需怀敬畏之心。</li></ul><h2 id="息（いき）"><a href="#息（いき）" class="headerlink" title="息（いき）"></a>息（いき）</h2><ul><li><strong>息が切れる：</strong><ul><li>呼吸が激しくなって苦しくなる。あえぐ。 </li><li>物事を長く続けられなくなる。</li><li>呼吸が止まる。息が絶える。死ぬ。<br>气喘吁吁；难以持续下去；气绝，死亡。</li></ul></li><li><strong>息を詰める：</strong>極度に緊張して思わず息を止めてしまう。<br>紧张过头忘记呼吸啦。</li><li><strong>息の根を止める：</strong><ul><li>殺す。</li><li>再起できないほど，相手をとことんまで打ち負かす。<br>杀死；击垮。</li></ul></li><li><strong>息を殺す：</strong>そこにいることを悟られないように気配を消している様子を指します。<br>屏住呼吸。</li></ul><h1 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h1><h3 id="我要累死了"><a href="#我要累死了" class="headerlink" title="我要累死了"></a>我要累死了</h3><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;\assets\js\APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这篇文章就当个小词典吧，称不上总结，只是简单整理《身体表现词典》讲到的一些惯用语。基本上是按照从头到脚的顺序整理的，请大家随意食用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;头部&lt;/li&gt;
&lt;li&gt;上身&lt;/li&gt;
&lt;li&gt;下身&lt;/li&gt;
&lt;li&gt;其他&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="兴趣爱好" scheme="http://blog.tsukasa.moe/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="日语" scheme="http://blog.tsukasa.moe/tags/%E6%97%A5%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>就这么愉快的定了</title>
    <link href="http://blog.tsukasa.moe/2018/01/26/how-to-make-a-decision/"/>
    <id>http://blog.tsukasa.moe/2018/01/26/how-to-make-a-decision/</id>
    <published>2018-01-26T14:05:32.000Z</published>
    <updated>2019-03-10T10:36:46.373Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这篇文章是源于在我生活中的一件小事，需要我快速地做出选择。苦于每次浪费许多时间，我希望找到一个合适的方式去思考，而后做出自己不会后悔的决定。文章从以下方面阐述如何断事：</p><ul><li>析本源</li><li>正观念</li><li>巧运用</li></ul><h1 id="析本源"><a href="#析本源" class="headerlink" title="析本源"></a>析本源</h1><p>鱼与熊掌不可兼得，小至日常琐碎，大到人生规划，人有时候不得不做出选择，做出决定。“果断”一词，说来轻松，做到不易。我常为做出决定而进行漫长纠结的思考，痛恨无法这份犹豫不决，我决定要好好改变这个性格缺陷。所谓正本清源，解决问题必先找出问题的根源再加以清理，那么困难选择症的根源是什么呢？通过查阅些许资料以及重新审视毛病的所在，我认为来源于以下原因：</p><h3 id="1-缺乏自信"><a href="#1-缺乏自信" class="headerlink" title="1. 缺乏自信"></a>1. 缺乏自信</h3><p>高尔基说：天才在于自信。私以为自信是最具吸引力的性格之一，那么自信是什么？我的理解是坚信自己一定可以做到的底气。不知各位有看过海贼王吗，路飞每次说出自己的梦想时，人们开始都是报之以不屑一顾甚至嘲笑路飞的痴人说梦，即便如此路飞每次高声诉说梦想时依旧没有一丝犹豫，我也想要成为如此帅气的男人。而缺乏自信常表现为不相信自己的判断，或者没有主见。不自信的原因来方方面面，才华，经济，教育等因素都会影响一个人的自信。如何建立自信呢？且往下看。</p><h3 id="2-知识不足"><a href="#2-知识不足" class="headerlink" title="2. 知识不足"></a>2. 知识不足</h3><p>人对未知的领域通常会感到好奇或者恐惧，因此会变得小心翼翼。知识不足，换句话说即信息量不足，认识不够，对选择内容不了解的情况下，人们需要更多时间去了解然后做决定。</p><h3 id="3-害怕后悔"><a href="#3-害怕后悔" class="headerlink" title="3. 害怕后悔"></a>3. 害怕后悔</h3><p>《怪诞行为学》中说到，人类原始心理机制是“让多个可选择的门始终处于敞开状态”。害怕选择一个，其实是害怕放弃了另一个可能。人具有规避风险的本能，害怕失去的心理导致我们在得失权衡中来回拉扯耗费时间，避免产生“后悔情绪”而迟疑不决。</p><h3 id="4-害怕承担责任"><a href="#4-害怕承担责任" class="headerlink" title="4. 害怕承担责任"></a>4. 害怕承担责任</h3><p>选择需要机会成本，意味着可能要放弃某种获益的可能性。无论做什么决定都存在风险，承担的过程是痛苦的，甚至需要付出代价，害怕承担决策失败后的后果，压力以及责任使得我们做决定的周期变长。</p><h3 id="5-无关因素干扰"><a href="#5-无关因素干扰" class="headerlink" title="5. 无关因素干扰"></a>5. 无关因素干扰</h3><p>一个人做出选择时总是有所依据的，如果这些依据与我们选择或者做决定的目的无关，只会消耗我们的精力，分散注意力，阻碍我们做出正确的决策。</p><h3 id="6-意志力薄弱"><a href="#6-意志力薄弱" class="headerlink" title="6. 意志力薄弱"></a>6. 意志力薄弱</h3><p>意志力薄弱其实是一种畏难心理，本来想选择自己想要的东西，但是要取得这个东西，需要克服一定的困难，怕麻烦没有意志力的人会放弃。</p><h1 id="正观念"><a href="#正观念" class="headerlink" title="正观念"></a>正观念</h1><p>面对各种类型的事情，做决定与选择的依据和标准不一定相同，不过同样的理念，遇到一个新问题没有现成的解决方案时，回到原点去思考往往最有效。为能够快速做出决定，需要树立的观念有：</p><h3 id="1-建立自信"><a href="#1-建立自信" class="headerlink" title="1. 建立自信"></a>1. 建立自信</h3><p>之前看过一个“腹有诗书气自华”的话题，许多人只关注“气自华”的浅薄表象，希望通过背诵记忆名诗词、名文的功利性手段快速装逼，忽视了“腹有诗书”的知识沉淀与文学体会理解，故而只是水过鸭背，又或者是缺少自己感悟的生搬硬套。可见，很多优秀的品质依托的是更加实际的、内在的一些东西。何为自信前面已经解释过了，那么如何建立自信呢？余以为自信是基于实力的，自信本身又是实力的一部分，两者是一种互为正向反馈的关系。坚信自己一定可以做到的底气不是源于海市蜃楼般的凭空暗示，而是来自一砖一瓦堆砌。这里的实力并不是特指某项专业知识、某项能力，它也可能是一件成功的小事的心得，你专注的一个领域的知识，内心明确的目标。人们可以从另一件事的成功中得到鼓舞、自信，而知识经验和自信会促进下一次尝试的成功。</p><p>自信可以从小事之中取得，而自信的根基只需要我们专注于做事本身，不断学习，提升自己即可获得。另外，前面提到做决定时知识不足的情况也会渐渐减少，去努力去变得优秀才是建立自信最实在的方法。</p><h3 id="2-不会死人，有勇气承担任何一个决定带来的后果"><a href="#2-不会死人，有勇气承担任何一个决定带来的后果" class="headerlink" title="2. 不会死人，有勇气承担任何一个决定带来的后果"></a>2. 不会死人，有勇气承担任何一个决定带来的后果</h3><p>不要太在意结果，把心思放在做好过程上。告诉自己不会死人的，有什么好怕的呢？另外，要知道失败常有，天才一样会失败，谁会因为几次失败就放弃人生呢！失败是痛苦的，但痛苦意味着成长。决策伴随风险，我们要有勇气承担任何一个决定带来的后果、责任，这样才是真正的男子汉，不是吗？</p><h3 id="3-没有完美，明确决定的目的"><a href="#3-没有完美，明确决定的目的" class="headerlink" title="3. 没有完美，明确决定的目的"></a>3. 没有完美，明确决定的目的</h3><p>没有完美，如果有一定是以时间为代价的。人生短暂，如果并非要完美不可，留更多时间去做更多的事吧。找出影响做决定的关键因素或者说关注点，根据重要性排序，排除无关紧要的次要因素，只要满足主要目标就好。</p><h3 id="4-做好人生规划"><a href="#4-做好人生规划" class="headerlink" title="4. 做好人生规划"></a>4. 做好人生规划</h3><p>有明确人生目标的人，越是重大的决定越是没有丝毫犹豫，因为他们知道自己想要什么样的人生。</p><h1 id="巧运用"><a href="#巧运用" class="headerlink" title="巧运用"></a>巧运用</h1><p>下面这些是借网友良言总结的，</p><ul><li>寻求“不差的决定”，而不是很棒的决定，把时间花在执行上</li><li>确定哪些选项是最优解，Top N中选择一个</li><li>图表对比不同决定的各项指标</li><li>设定决策deadline</li><li>日常琐碎、小事不求全责备，也不轻易随便</li></ul><h1 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h1><p>人生时刻充满选择，你接下来要做什么不就是选择吗？愉快的决定，尽情的拥抱生活吧。</p><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://www.zhihu.com/question/20639397" target="_blank" rel="external">怎样克服选择困难症？</a><br><a href="https://www.zhihu.com/question/19556269" target="_blank" rel="external">“做决定”为何是一件很难的事？</a><br><a href="https://www.zhihu.com/question/19906048" target="_blank" rel="external">自信来源于什么？</a></p><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;\assets\js\APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这篇文章是源于在我生活中的一件事，需要我快速地做出选择。苦于每次浪费许多时间，我希望找到一个合适的方式去思考，而后做出自己不会后悔的决定。文章从以下方面阐述如何断事：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;析本源&lt;/li&gt;
&lt;li&gt;正观念&lt;/li&gt;
&lt;li&gt;巧运用&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="工作生活" scheme="http://blog.tsukasa.moe/categories/%E5%B7%A5%E4%BD%9C%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="随笔" scheme="http://blog.tsukasa.moe/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>建立高效率Windows操作环境</title>
    <link href="http://blog.tsukasa.moe/2018/01/18/build-high-efficiency-os/"/>
    <id>http://blog.tsukasa.moe/2018/01/18/build-high-efficiency-os/</id>
    <published>2018-01-18T11:52:29.000Z</published>
    <updated>2019-03-10T13:28:27.422Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>每次系统重装后都需要进行各种环境、软件、插件、脚本的安装与配置，建立适合自己工作娱乐的环境，是一件费时费力的事情，相对地带给你的价值是日后的使用中效率提升，这篇文章给出了我的Windows操作环境配置方案，主要包括了以下内容：</p><ul><li>基础系列</li><li>工作系列</li><li>后期系列</li><li>其他系列</li></ul><h1 id="基础系列"><a href="#基础系列" class="headerlink" title="基础系列"></a>基础系列</h1><p>首先，要给计算机配置常用的软件和效率工具，保证系统能够完成基本的功能，比如解压打包，快速下载等。</p><ul><li>Shadowsocks</li><li>WinRAR</li><li>Chrome</li><li>迅雷极速版</li><li>WGestures</li><li>Listary</li><li>CCleaner</li><li>有道翻译</li><li>DirectX</li><li>Bandicam</li><li>Folder Sizes 8</li><li>VMware</li><li>常用软件</li></ul><h3 id="Shadowsocks"><a href="#Shadowsocks" class="headerlink" title="Shadowsocks"></a>Shadowsocks</h3><p>科学上网，使用最棒的搜索，畅游墙外的世界。<br><img src="http://static.tsukasa.moe/images/post-images/2018/01/shadowsocks.jpg" alt=""><br>配置：</p><ul><li>无需安装，可执行文件放置于工作盘<code>D:\Programfiles\Shadowsocks</code>中，双击运行</li><li>在托盘Shadowsocks图标上右键，根据<code>服务器</code>菜单项选用<code>编辑服务器</code>或者<code>扫描屏幕上的二维码</code>进行信息配置</li></ul><h3 id="WinRAR"><a href="#WinRAR" class="headerlink" title="WinRAR"></a>WinRAR</h3><p>一款解压缩收费软件，可采用破解版。<br><img src="http://static.tsukasa.moe/images/post-images/2018/01/winrar.jpg" alt=""><br>安装破解：运行破解版安装文件即可</p><h3 id="Chrome"><a href="#Chrome" class="headerlink" title="Chrome"></a>Chrome</h3><p>世界上最强大的浏览器，没有之一，强大的扩展能力，无数的插件，配合谷歌账号，轻松实现多端同步，唯一需要动一下手的是我的油桃脚本需要重新安装。<br><img src="http://static.tsukasa.moe/images/post-images/2018/01/chrome.jpg" alt=""><br>安装：下载并在线安装<br>配置：</p><ul><li>登陆Google账号，同步书签，插件</li><li>油桃脚本添加各种脚本，油桃脚本列表</li></ul><h3 id="pandownload"><a href="#pandownload" class="headerlink" title="pandownload"></a><del>pandownload</del></h3><p>将下载链接转换为下载直链，百度网盘多线程下载器。<br><img src="http://static.tsukasa.moe/images/post-images/2018/01/pandownload.png" alt=""><br>配置：无需安装，存放于工作盘<code>D:\Programfiles\PanDownload</code>中，运行程序登陆账号即可使用<br>备注：于2018.01.16停用</p><h3 id="迅雷极速版"><a href="#迅雷极速版" class="headerlink" title="迅雷极速版"></a>迅雷极速版</h3><p>告别广告，专注下载。<br><img src="http://static.tsukasa.moe/images/post-images/2018/01/xunlei.jpg" alt=""><br>安装破解：</p><ul><li>解压缩<code>迅雷极速版-v1.0.35.366-v2-by-小俊.7z</code>至需要安装的目录如<code>C:\Program Files\Software\Thunder</code></li><li>以管理员身份运行<code>绿化和卸载.bat</code>，根据提示进行绿化</li><li>将<code>迅雷极速版兼容Win10最新版补丁.7z</code>的补丁覆盖<code>C:\Program Files\Software\Thunder\Program</code>的<code>zlib1.dll</code></li><li>Have fun</li></ul><h3 id="WGestures"><a href="#WGestures" class="headerlink" title="WGestures"></a>WGestures</h3><p>全局鼠标手势，个性化定制手势，支持触发角 &amp; 摩擦边，简单高效。<br><img src="http://static.tsukasa.moe/images/post-images/2018/01/wgestures.jpg" alt=""><br>安装：下载并安装即可</p><h3 id="Listary"><a href="#Listary" class="headerlink" title="Listary"></a>Listary</h3><p>不仅仅是搜索神器。<br><img src="http://static.tsukasa.moe/images/post-images/2018/01/listary.jpg" alt=""><br>安装破解：</p><ul><li>解压得到<code>Listary.Pro.5.00.2410.fix</code>文件夹，双击<code>Listary.exe</code>安装</li><li>安装完毕退出软件，并结束掉进程中的Listary服务</li><li>打开<code>gen.crack</code>文件夹，将其中的<code>MSVCP140.dll</code>替换到软件安装目录</li><li>运行Listary，打开设置界面，选择<code>关于</code> =&gt; <code>升级到Listary Pro</code>出现注册框</li><li>打开<code>key.txt</code>，将注册信息对应填入上面的注册框中完成注册</li><li>愉快的玩耍吧</li></ul><h3 id="CCleaner"><a href="#CCleaner" class="headerlink" title="CCleaner"></a>CCleaner</h3><p>简洁，可以删除流氓软件了。<br><img src="http://static.tsukasa.moe/images/post-images/2018/01/ccleaner.jpg" alt=""><br>安装破解：</p><ul><li>运行安装程序安装</li><li>断开网络，打开CCleaner–选项–关于–升级专业版，</li><li>输入注册名称<code>Registered User</code>和密钥<code>CBB4-FJN4-EPC6-G5P6-QT4C</code></li><li>注册完成</li></ul><h3 id="有道翻译"><a href="#有道翻译" class="headerlink" title="有道翻译"></a>有道翻译</h3><p>翻译必备<br><img src="http://static.tsukasa.moe/images/post-images/2018/01/youdao-translate.jpg" alt=""><br>设置：取消取词，禁止开机启动，检查快捷键冲突，关闭每日推荐</p><h3 id="DirectX"><a href="#DirectX" class="headerlink" title="DirectX"></a>DirectX</h3><p>是一组低级“应用程序编程接口(API)”，可为Windows 程序提供高性能的硬件加速多媒体支持。<br><img src="http://static.tsukasa.moe/images/post-images/2018/01/directX.jpg" alt=""><br>安装：打开压缩包，直接运行安装程序<code>DXSETUP.exe</code>即可</p><h3 id="Bandicam"><a href="#Bandicam" class="headerlink" title="Bandicam"></a>Bandicam</h3><p>一款录屏软件，简明的操作，流畅的录制，超清的画质。</p><h3 id="Folder-Sizes-8"><a href="#Folder-Sizes-8" class="headerlink" title="Folder Sizes 8"></a>Folder Sizes 8</h3><p>直观了解磁盘使用情况<br><img src="http://static.tsukasa.moe/images/post-images/2018/01/foldersize8.jpg" alt=""><br>安装破解：</p><ul><li>解压后运行<code>fs8-setup.exe</code>安装</li><li>打开软件，点击<code>Enter License code</code>，从<code>Key.txt</code>选择一行许可密钥输入</li><li>Done</li></ul><h3 id="VMware"><a href="#VMware" class="headerlink" title="VMware"></a>VMware</h3><p>虚拟机器<br><img src="http://static.tsukasa.moe/images/post-images/2018/01/vmware.jpg" alt=""><br>安装破解：</p><ul><li>安装完成后，断开网络</li><li>输入<code>key.txt</code>的许可密钥</li></ul><h3 id="Microsoft-Office-2016"><a href="#Microsoft-Office-2016" class="headerlink" title="Microsoft Office 2016"></a>Microsoft Office 2016</h3><p>必备办公软件<br><img src="http://static.tsukasa.moe/images/post-images/2018/01/office.jpg" alt=""><br>安装破解：安装完成使用KMSpico软件破解即可</p><h3 id="常用软件"><a href="#常用软件" class="headerlink" title="常用软件"></a>常用软件</h3><p>下面几款几乎是生活中必备的吧，根据需要自行下载安装，不会下载安装的可以洗洗睡了╮(╯▽╰)╭</p><ul><li>Tim：取消声音提醒，消息闪烁，禁止开机启动</li><li>微信：取消声音提醒，消息闪烁，禁止开机启动</li><li>网易云音乐：禁止开机启动</li><li>PotPlayer：单击，双击设置</li><li>Steam：设置下载位置</li></ul><h1 id="工作系列"><a href="#工作系列" class="headerlink" title="工作系列"></a>工作系列</h1><p>作为一个Web后台开发人员，下面的软件基本上是必备的：</p><ul><li>Sublime Text</li><li>Visual Studio Code</li><li>Git</li><li>C-Free</li><li>Xshell</li><li>Xftp</li><li>Mysql</li><li>Navicat</li><li>Beyond Compare</li><li>Eclipse</li><li>Intellij IDEA</li><li>PyCharm</li></ul><h3 id="Sublime-Text"><a href="#Sublime-Text" class="headerlink" title="Sublime Text"></a>Sublime Text</h3><p>支持扩展的轻量级别文本编辑器，前端神器之一<br><img src="http://static.tsukasa.moe/images/post-images/2018/01/sublime-text.jpg" alt=""><br>安装破解：</p><ul><li>不破解也可以，只是保存时弹窗有点烦</li></ul><p>配置：</p><ul><li>插件安装可以通过在线安装，离线安装只需将下载好的插件放在<code>C:\Users\LuoWe\AppData\Roaming\Sublime Text 3\Packages</code>中</li><li>重启插件会自动安装好</li></ul><p>本人常用插件列表：<br><img src="http://static.tsukasa.moe/images/post-images/2018/01/sublime-text-extensions.jpg" alt=""></p><h3 id="Visual-Studio-Code"><a href="#Visual-Studio-Code" class="headerlink" title="Visual Studio Code"></a>Visual Studio Code</h3><p>新一代代码编辑神器<br><img src="http://static.tsukasa.moe/images/post-images/2018/01/vscode.jpg" alt=""><br>安装：下载并安装即可<br>配置：配置插件<br>本人插件列表如下：<br><img src="http://static.tsukasa.moe/images/post-images/2018/01/visual-studio-code-extensions.jpg" alt=""></p><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><p>一个分布式版本控制系统。<br><img src="http://static.tsukasa.moe/images/post-images/2018/01/Git.jpg" alt=""><br>安装：<code>https://git-scm.com/</code>上下载安装Git即可使用Git进行版本管理<br>配置：密钥生成与配置</p><h3 id="C-Free"><a href="#C-Free" class="headerlink" title="C-Free"></a>C-Free</h3><p>小型C，C++集成开发环境<br><img src="http://static.tsukasa.moe/images/post-images/2018/01/cfree.jpg" alt=""><br>安装破解：</p><ul><li>安装完成后，打开<code>帮助</code> =&gt; <code>注册</code>窗口</li><li>输入<code>c-free注册.txt</code>中的注册信息</li></ul><h3 id="Xshell"><a href="#Xshell" class="headerlink" title="Xshell"></a>Xshell</h3><p>Xshell是一款强大，著名的终端模拟软件，被广泛的用于服务器运维和管理,Xshell支持SSH，SFTP，TELNET，RLOGIN和SERIAL功能。<br><img src="http://static.tsukasa.moe/images/post-images/2018/01/xshell.jpg" alt=""><br>安装：官网下载安装即可</p><h3 id="Xftp"><a href="#Xftp" class="headerlink" title="Xftp"></a>Xftp</h3><p>是一个基于 MS windows 平台的功能强大的SFTP、FTP 文件传输软件。使用了 Xftp 以后，MS windows 用户能安全地在 UNIX/Linux 和 Windows PC 之间传输文件。<br><img src="http://static.tsukasa.moe/images/post-images/2018/01/xftp.jpg" alt=""><br>安装：官网下载安装即可</p><h3 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h3><p>Mysql是最流行的关系型数据库管理系统，在WEB应用方面MySQL是最好的RDBMS。<br><img src="http://static.tsukasa.moe/images/post-images/2018/01/mysql.jpg" alt=""><br>安装：官网下载安装</p><h3 id="Navicat"><a href="#Navicat" class="headerlink" title="Navicat"></a>Navicat</h3><p>Navicat是一套快速、可靠并价格相当便宜的数据库管理工具，专为简化数据库的管理及降低系统管理成本而设。<br><img src="http://static.tsukasa.moe/images/post-images/2018/01/navicat.jpg" alt=""><br>安装破解：</p><ul><li>运行对应位数的安装程序进行安装</li><li>运行<code>PatchNavicat.exe</code>，选中安装目录下的navicat启动文件，确定</li><li>弹出“Patch Success!”则破解成功</li></ul><h3 id="Beyond-Compare"><a href="#Beyond-Compare" class="headerlink" title="Beyond Compare"></a>Beyond Compare</h3><p>一款文件比对工具，可结合Git使用。<br><img src="http://static.tsukasa.moe/images/post-images/2018/01/beyond-compare.jpg" alt=""><br>安装破解：安装完成后，输入提供序列号</p><h3 id="Eclipse"><a href="#Eclipse" class="headerlink" title="Eclipse"></a>Eclipse</h3><p>Java开发人员主要的集成开发环境之一。<br><img src="http://static.tsukasa.moe/images/post-images/2018/01/eclipse.jpg" alt=""><br>安装：需要JDK环境，官网下载Java EE版本安装<br>配置：Tomcat，Maven，插件。</p><h3 id="Intellij-IDEA"><a href="#Intellij-IDEA" class="headerlink" title="Intellij IDEA"></a>Intellij IDEA</h3><p>推荐使用的Java开发人员主要的集成开发环境之一。<br><img src="http://static.tsukasa.moe/images/post-images/2018/01/Intellij-IDEA.jpg" alt=""><br>安装破解：</p><ul><li>需要JDK环境，官网下载安装，学生认证期间免费使用</li><li>购买或者可选用<code>http://idea.lanyus.com/</code>提供的注册码破解</li></ul><p>配置：Tomcat，Maven，插件。</p><h3 id="PyCharm"><a href="#PyCharm" class="headerlink" title="PyCharm"></a>PyCharm</h3><p>一款Python集成开发环境。<br><img src="http://static.tsukasa.moe/images/post-images/2018/01/PyCharm.jpg" alt=""><br>安装：需要Python环境，官网下载安装<br>配置：interpreter配置</p><h1 id="后期系列"><a href="#后期系列" class="headerlink" title="后期系列"></a>后期系列</h1><h3 id="Adobe系列"><a href="#Adobe系列" class="headerlink" title="Adobe系列"></a>Adobe系列</h3><p>安装到电脑中占点内存吧，后期技术的一点点执念Ψ(￣∀￣)Ψ</p><ul><li>Adobe Photoshop CC</li><li>Adobe After Effect CC</li><li>Adobe Premiere CC</li><li>Adobe Illustrator CC</li></ul><p><img src="http://static.tsukasa.moe/images/post-images/2018/01/Adobe.jpg" alt=""><br>安装破解：</p><ul><li>下载Adobe Creative Cloud并安装，在应用上登陆账号，安装需要的Adobe系列软件</li><li>断开网络，以试用模式安装 Adobe 各类软件程序</li><li>运行 AMT Emulator，选择对应的软件版本</li><li>点击Install替换各个软件安装目录下的amtlib.dll，并生成painter.ini配置文件</li><li>Done</li></ul><h1 id="其他系列"><a href="#其他系列" class="headerlink" title="其他系列"></a>其他系列</h1><h3 id="Locale-Emulator"><a href="#Locale-Emulator" class="headerlink" title="Locale Emulator"></a>Locale Emulator</h3><p>galgame必备，转区工具<br>安装：运行<code>LEInstall.exe</code>进行安装</p><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;\assets\js\APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这篇文章归纳整理了我的工作环境常用的软件以及其安装破解方法，分类如下所示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基础系列&lt;/li&gt;
&lt;li&gt;工作系列&lt;/li&gt;
&lt;li&gt;后期系列&lt;/li&gt;
&lt;li&gt;其他系列&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="管理方案" scheme="http://blog.tsukasa.moe/categories/%E7%AE%A1%E7%90%86%E6%96%B9%E6%A1%88/"/>
    
    
      <category term="Windows" scheme="http://blog.tsukasa.moe/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>华为软件训练营（Java语言）学习笔记</title>
    <link href="http://blog.tsukasa.moe/2017/12/06/huawei-software-camp-java/"/>
    <id>http://blog.tsukasa.moe/2017/12/06/huawei-software-camp-java/</id>
    <published>2017-12-06T07:11:23.000Z</published>
    <updated>2019-03-10T13:28:27.483Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><p>这篇文章是针对华为的软件训练营（Java语言）的网上学习总结，主要有以下内容：</p><ul><li>职业发展规划</li><li>Java编程规范</li><li>敏捷开发之道</li><li>软件测试基础</li></ul><h1 id="职业发展规划"><a href="#职业发展规划" class="headerlink" title="职业发展规划"></a>职业发展规划</h1><p>首先，公司给出软件开发需要的各项软件能力具体要求，主要有软件需求、架构、设计、实现、验证、维护六个方面的能力，并且给出了任职级别的八个等级，下面这张图将成为我发展的一个定位依据，我要做一个有着明确目标并为之努力的人，我的梦想是成为一名架构师=￣ω￣=：<br><img src="http://static.tsukasa.moe/images/post-images/2017/12/development-direction.jpg" alt=""></p><h4 id="如何学习编程"><a href="#如何学习编程" class="headerlink" title="如何学习编程"></a>如何学习编程</h4><ul><li>从脚本语言开始：建议Python（JS，Ruby等）</li><li>精通一门面向对象语言：建议Java/C#</li><li>精通一门底层编码语言：建议C（汇编等）</li><li>最好是把五种语言都学会了：Python，Java，C/C++，Perl和LISP</li></ul><h4 id="不断的循环渐进"><a href="#不断的循环渐进" class="headerlink" title="不断的循环渐进"></a>不断的循环渐进</h4><ul><li>多学习：计算机基础，比如数据结构与算法</li><li>多练习：OJ，竞赛，小游戏</li><li>多思考：没有最好，只有更好</li><li>多总结：知识的一次升华，输出文档</li><li>多交流：学习别人更好的经验</li></ul><h1 id="Java编程规范"><a href="#Java编程规范" class="headerlink" title="Java编程规范"></a>Java编程规范</h1><h4 id="排版"><a href="#排版" class="headerlink" title="排版"></a>排版</h4><p>规则</p><ul><li>在不同概念之间，增加空行</li><li>将逻辑紧密相关的代码放在一起</li><li>控制一行的宽度，不要超过120个字符</li><li>控制一行的宽度，不同概念之间增加空格（关键字、变量、操作符等），以区分概念</li><li>控制采用缩进来区分不同层次的概念，对齐时只使用空格键，不适用TAB键<br>建议：</li><li>将局部变量的作用域最小化</li><li><code>if，for，do，while，case，switch，default</code>等语句独占一行，且<code>if，for，do，while</code>等语句的执行语句无论多少行都要加括号{}</li><li>控制文件的长度，最好不要超过500行</li></ul><h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h4><p>原则：尽量用代码来解释自己<br>规则：</p><ul><li>注释应解释代码的意图，而不是描述代码应该怎么做</li><li>保证注释与代码一致，避免误导</li><li>注释应与其描述代码位置相邻，放在所注释代码上方，并与代码采用同样缩进<br>建议：</li><li>不要用注释保留废弃代码</li><li>不要用注释记录修改日志</li></ul><h4 id="命名"><a href="#命名" class="headerlink" title="命名"></a>命名</h4><p>原则：团队为包、类、方法、变量取一个好名字，使代码易于理解</p><ul><li>能清晰表达意图：使用完整的描述性单词</li><li>避免造成误导：如<code>String accountList</code>不是一个List类型</li><li>避免不必要的编解码</li><li>能区分出意思：不要在变量/类名后加data、info、object等一般意义的词语</li><li>不用或少用缩写：小于15个字母的一般不用缩写<br>规则：</li><li>禁止使用魔鬼数字，采用静态变量或枚举来代替</li><li>常量命名，由全大写单词组成，单词间用下划线分隔，且使用<code>static final</code>修饰</li><li>变量、属性命名，使用名词，并采用首字母小写的驼峰命名法</li><li>方法的命名，使用动词和动宾结构，采用首字母小写的驼峰命名法</li><li>类和接口的命名，使用名词，并采用首字母大写的驼峰命名法</li><li>包的命名，有一个或若干个单词组成，所有的字母均为小写<br>建议：</li><li>数组声明时使用<code>int[] index</code>而非<code>int index[]</code></li></ul><h4 id="变量和类型"><a href="#变量和类型" class="headerlink" title="变量和类型"></a>变量和类型</h4><p>原则：谨慎使用静态成员变量<br>规则：</p><ul><li>避免随意进行强制类型转换，最好改善设计，否则需在转换前用<code>instanceof</code>进行判断</li><li>需要精确计算时不要使用float和double</li><li>不能用浮点数做循环变量</li><li>浮点型数据判断相等不能直接使用<code>==</code>，转化为<code>Math.abs(a - b) &lt; 1E-6f</code></li><li>避免同一个局部变量在前后表达不同的含义</li></ul><h4 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h4><p>原则：</p><ul><li>方法设计的第一原则是要短小，建议不超过50行</li><li>方法设计应遵循单一职责原则（SRP），一个方法仅完成一个功能</li><li>方法设计应遵循单一抽象层次原则（SLAP）</li><li>方法设计应遵循命令与查询职责分离原则（CQRS）</li><li>不要把方法的入参当作工作变量/临时变量，传引用类型建议在参数前加final关键字</li><li>静态方法应使用类名来调用<br>建议：</li><li>应明确规定对接口方法参数的合法性检查由调用者负责还是由接口方法本身负责</li><li>对接方法的参数不宜过多</li><li>谨慎使用可变数量参数的方法</li></ul><h4 id="包、类和接口"><a href="#包、类和接口" class="headerlink" title="包、类和接口"></a>包、类和接口</h4><p>原则：</p><ul><li>类和接口的设计应遵循面向对象SOLID设计原则<ul><li>单一职责原则（Single Responsibility Principle）</li><li>开放封闭原则（Open CLosed Principle）</li><li>里氏替换原则（Liskov Substitution Principle）</li><li>接口分离原则（Interface Segregation Principle）</li><li>依赖倒置原则（Dependency Inversion Principle）</li></ul></li><li>类的设计应遵循迪米特法则</li><li>类的设计应遵循“Tell, Don’t ask”原则：告诉对象你希望它们去做的事情，而不要询问它们的状态之后做出决定<br>规则：</li><li>除提供给外部使用的全局变量外，应尽量避免类成员变量被外部直接访问</li><li>避免在无关的变量或无关的概念之间重用名字，避免隐藏（hide）、遮蔽（shadow）和遮掩（obscure）</li><li>不要再父类的构造方法中调用可能被子类覆写的方法</li><li>覆写equals方法时，应同时覆写hashCode方法</li><li>子类覆写父类方法时应加上@Override注解</li></ul><h4 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h4><p>规则：</p><ul><li>只针对真正异常的情况才使用exception机制</li><li>在抛出异常的细节信息中，应包含能捕获失败的信息</li><li>对可恢复情况使用受检异常（checked exception），对编程错误使用运行时异常（runtime exception）</li><li>不要忽略异常</li><li>方法注释和文档中要包含所抛异常的说明，内容包括什么场景会抛出该异常，该如何处理它</li><li>方法抛出的异常，应该与本身的抽象层次相对应</li><li>在finally块中不要使用return、break或continue使finally块非正常结束，导致异常无法抛出</li><li>不要直接捕获受检异常的基类Exception<br>建议：</li><li>对第三方API抛出大量各类异常进行封装</li><li>一个方法不应抛出太多类型的异常</li></ul><h4 id="语言特性"><a href="#语言特性" class="headerlink" title="语言特性"></a>语言特性</h4><p>运算和表达式<br>规则：</p><ul><li>不要编写复杂的表达式</li><li>运算时应避免产生溢出<br>建议：</li><li>运算采用括号明确运算优先级</li></ul><p>控制语句规则：</p><ul><li>在switch语句的每一个case、default中都放置一条break语句</li><li>采用for-each代替传统for循环</li></ul><p>泛型规则；在集合中使用泛型（v1.5+）<br>其他规则：新代码不要使用已标注为@Deprecated的方法</p><h1 id="敏捷开发之道"><a href="#敏捷开发之道" class="headerlink" title="敏捷开发之道"></a>敏捷开发之道</h1><p>IPD：Integrated Product Development，软件工程中集成产品开发流程，包括四个DCP决策评审点，七个TR技术评审点，一个LAUNCH点，一个GA点。<br><img src="http://static.tsukasa.moe/images/post-images/2017/12/IPD.jpg" alt=""></p><p>敏捷宣言：</p><ul><li>个体和交互胜过过程和工具</li><li>可以工作的软件胜过面面俱到的文档</li><li>客户合作胜过合同谈判</li><li>响应变化胜过遵循计划</li></ul><p>敏捷开发遵循软件的客观规律，不断的进行迭代增量开发，最终交付符合客户价值的产品<br>统一认识：敏捷 = 理念 + 优秀实践 + 具体应用</p><ul><li>理念：VTA原则，VALUE，TEAM，ADAPTING</li><li>优秀实践：敏捷的经验总结，比如站立会议与结对编程，持续集成与测试驱动开发，重构与迭代</li><li>具体应用：结合自身灵活运用才是真正的敏捷</li></ul><h1 id="软件测试基础"><a href="#软件测试基础" class="headerlink" title="软件测试基础"></a>软件测试基础</h1><p>测试定义：测试是一个包含计划、准备和测量活动的过程。其目的是确认被测系统的特性，并指出需求和实现之间的差异。不同类型的测试在软件生命周期的位置：<br><img src="http://static.tsukasa.moe/images/post-images/2017/12/software-development-life.jpg" alt=""></p><p>下图是按照目标/特性，测试阶段或层次，方法的测试分类，作为开发人员需要掌握单元测试，了解其他阶段的测试：<br><img src="http://static.tsukasa.moe/images/post-images/2017/12/test-categories.jpg" alt=""></p><h4 id="一些测试方式"><a href="#一些测试方式" class="headerlink" title="一些测试方式"></a>一些测试方式</h4><p>静态测试：静态测试技术通过手工检查（评审）或自动化分析（静态分析工具）的方式对代码或其他项目文档进行检查。</p><ul><li>代码检查工具检查（pclint，圈复杂度检查）</li><li>走读（walk through）</li><li>检视（inspection）</li></ul><p>动态测试：通过运行被测程序，检查运行结果与预期结果的差异，并分析运行效率和健壮性等性能，这种方法有三部分组成：构造测试实例、执行程序、分析程序的输出结果。</p><ul><li>等价类划分</li><li>边界值分析</li><li>决策表分析</li><li>判断条件覆盖</li><li>条件组合覆盖</li></ul><p>黑盒测试：把被测对象看作一个黑盒，测试软件产品的功能，而不需关注软件产品的内部构造和处理过程。</p><ul><li>等价类划分</li><li>边界值分析</li><li>决策表分析</li><li>状态转换测试</li></ul><p>白盒测试：根据被测程序的内部设计测试用例的一种测试方法。</p><ul><li>语句覆盖</li><li>判定覆盖</li><li>条件覆盖</li><li>判定条件覆盖</li><li>条件组合覆盖</li><li>路径覆盖</li></ul><h4 id="测试基本原则"><a href="#测试基本原则" class="headerlink" title="测试基本原则"></a>测试基本原则</h4><ul><li>测试显示缺陷的存在</li><li>穷尽测试是不可能的</li><li>测试尽早介入</li><li>缺陷集群性，二八法则</li><li>杀虫剂悖论</li><li>测试活动依赖于测试Context</li><li>“Absence-of-error”谬论</li></ul><h4 id="测试常用术语"><a href="#测试常用术语" class="headerlink" title="测试常用术语"></a>测试常用术语</h4><ul><li>Test basis（测试依据）：能从中判断出组件/系统需求的所有文档。测试用例是基于这些文档的。只能通过正式的修正过程来修正的文档称为固定测试依据</li><li>test condition（测试条件）：组件/系统中能被一个或多个测试用例验证的条目或事件。例如，功能、事务、特性、质量属性或结构化元素</li><li>test coverage（测试覆盖）：用于确定执行测试套件所能覆盖项目的程度，通常用百分比来表示。</li><li>exit criteria（出口准则）：和利益相关者达成一致的系列通用和专门的条件，来正式的定义一个过程的结束点。出口准则的目的可以防止将没有完成的任务错误地看成任务已经完成。测试中使用的出口准则可以来报告和计划什么时候可以停止测试</li><li>confirmation testing（确认测试）：重新执行上次失败的测试用例，以验证纠错的正确性</li><li>regression testing（回归测试）：测试先前测试过并修改过的程序，确保更改没有跟给软件其他未改变的部分带来新的缺陷（defect）。软件修改后或者使用环境变更后要执行回归测试</li><li>test strategy（测试策略）：一个高级文档，该文档定义了需要对程序（一个或多个项目）执行的测试级别和需要进行的测试</li><li>test level（测试层级）：共同进行组织和管理的一组测试活动。可以分为底层测试嗯哼高层测试</li><li>test specificatiion technique（测试规格技术）：一种结构化的方法，用于测试依据（例如，需求、功能或技术规格）中得到测试用例。可以分为白盒测试和黑盒测试技术</li><li>Low-level test（底层测试）：底层测试包括分别或组合地测试系统的个别组件。通常由开发人员执行。分为单元测试和集成测试，主要使用白盒测试技术</li><li>High-level test（高层测试）：高层测试指测试完整的产品。分为系统测试和验收测试，主要使用黑盒测试技术</li><li>Unit test（单元测试）：单元测试是有开发人员在实验室环境中执行的测试，应当验证代码是否满足设计规格中的需求</li><li>Integration test（集成测试）：集成测试是由开发人员在实验室环境中执行的测试，应当论证代码的逻辑组合是否满足设计规格中的要求</li><li>System test（系统测试）：系统测试是由开发人员或独立测试团队在（完全可控的）实验室环境中执行的测试，应当论证所开发的系统或子系统是否满足功能或质量规格中的需求</li><li>Acceptance test（验收测试）：验收测试是由用户和系统管理员哎最大可能模拟实际运行环境的环境中执行的测试，应当论证所开发的系统是否满足功能和质量需求</li></ul><h4 id="测试技术"><a href="#测试技术" class="headerlink" title="测试技术"></a>测试技术</h4><p>测试用例：可以独立进行测试执行的最小单元，包括必不可少的几个要素：</p><ul><li>测试用例设计的目的</li><li>测试操作步骤及其每个步骤所需要的输入数据</li><li>需要从被测系统收集的输出数据</li><li>测试要通过的标准</li></ul><h4 id="Junit-4测试框架"><a href="#Junit-4测试框架" class="headerlink" title="Junit 4测试框架"></a>Junit 4测试框架</h4><ul><li><code>junit.framework.Test</code>：测试接口</li><li><code>junit.framework.TestCase</code>：测试用例类，根据情况编写若干个<code>public void testXxx()</code>方法，在方法中通过<code>assertYyy()</code>定制若干个测试规则</li><li><code>junit.framework.TestSuite</code>：测试套件类，它可以将多个测试用例类捆绑在一起运行，也可以捆绑另一个测试套件</li></ul><p>测试固件：</p><ul><li>一个测试用例可以包含若干个<code>testXxx()</code>方法，测试用例测试一个或多个类API接口的正确性</li><li>在调用类API时，需要事先创建这个类的对象及一些关联的对象，这组对象就称为测试固件（Fixture），相当于测试用例的“工作对象”</li></ul><p>测试集TestSuite创建方式有两种：</p><p>写函数语句：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CalculatorTestSuite</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Test <span class="title">suite</span><span class="params">()</span> </span>&#123;</span><br><span class="line">TestSuite suite = <span class="keyword">new</span> TestSuite();</span><br><span class="line">suite.addTest(<span class="keyword">new</span> JUnit4TestAdapter(CalculatorTest.class));</span><br><span class="line">suite.addTest(<span class="keyword">new</span> JUnit4TestAdapter(CalculatorTest2.class));</span><br><span class="line"><span class="keyword">return</span> suite;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注解方式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.junit.runners.Suite;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith</span>(Suite.class)</span><br><span class="line"><span class="meta">@Suite</span>.SuiteClasses(&#123;CalculatorTest.class, CalculatorTest2.class, CalculatorTestSuite.class&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CalculatorTestSuite2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Junit 4.x的测试过程：</p><ul><li><code>@Before</code>注解：用于测试方法执行之前构建需要执行的环境，可以有多个<code>@Before</code>方法，Junit 4.0前的版本必须通过自定义方法为setUp方法告知框架该方法是初始化代码</li><li><code>@After</code>注解：在测试方法执行完成后进行清除，Junit 4.0前的版本必须通过自定义方法为tearDown方法告知框架该方法是清理代码</li><li><code>@Test</code>：测试方法</li></ul><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;\assets\js\APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这篇文章是针对华为的软件训练营（Java语言）的网上学习总结，主要有以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;职业发展规划&lt;/li&gt;
&lt;li&gt;Java编程规范&lt;/li&gt;
&lt;li&gt;敏捷开发之道&lt;/li&gt;
&lt;li&gt;软件测试基础&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="编程开发" scheme="http://blog.tsukasa.moe/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Java" scheme="http://blog.tsukasa.moe/tags/Java/"/>
    
      <category term="编程规范" scheme="http://blog.tsukasa.moe/tags/%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83/"/>
    
  </entry>
  
  <entry>
    <title>「深入理解Java虚拟机」读书笔记</title>
    <link href="http://blog.tsukasa.moe/2017/10/09/jvm-readingnotes/"/>
    <id>http://blog.tsukasa.moe/2017/10/09/jvm-readingnotes/</id>
    <published>2017-10-09T10:59:18.000Z</published>
    <updated>2019-03-10T13:30:04.644Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这篇文章是我读《深入理解Java虚拟机》后的笔记总结，对每一个Java开发者来说这是一本值得多看几遍的好书，文章主要内容包括：</p><ul><li>自动内存管理</li><li>类加载与执行引擎</li><li>程序编译与代码优化</li><li>并发与线程安全</li></ul><h1 id="自动内存管理"><a href="#自动内存管理" class="headerlink" title="自动内存管理"></a>自动内存管理</h1><h2 id="内存模型"><a href="#内存模型" class="headerlink" title="内存模型"></a>内存模型</h2><p>Java虚拟机运行时数据区域：</p><ul><li>线程共享的数据区域，随虚拟机启动而存在，GC工作区域<ul><li>方法区：存储已被虚拟机加载的类信息、常量、静态变量、JIT后的代码等数据，通常称为“永久代（Permanent Generation）”。GC回收的目标主要是针对常量池的回收和对类型的卸载<ul><li>运行时常量池：方法区的一部分，存放编译期生成的字面量和符号引用，在运行期也可以将新的常量放入池中（比如String类的intern()方法）</li><li>直接内存：不是虚拟机运行时数据区的一部分。JDK1.4中引入的NIO类，引入基于通道（Chanel）和缓冲区（Buffer）的I/O方式，可以使用Native函数直接分配堆外内存，通过Java堆的DirectByteBuffer对象引用，避免Java堆与Native堆数据复制带来的性能消耗</li></ul></li><li>Java堆：内存中最大的一块区域，专门用于存放对象实例（包括数组）和成员变量（包括基本类型），GC主要工作区域。根据GC特性分为老年代和新生代，其中新生代又可以细分为Eden空间、From Survivor空间、To Survivor空间</li></ul></li><li>线程隔离的数据区，随线程启动而创建，随线程结束而销毁<ul><li>程序计数器：当前线程执行代码的行号指示器，唯一没有规定OutOfMemoryError的区域。执行Java代码时，记录正在执行字节码指令的地址；执行Native方法时，计数器值为空。</li><li>虚拟机栈：描述Java方法执行的内存模型，每个方法从调用到执行完成对应一个栈帧从虚拟机栈入栈到出栈<ul><li>栈帧：存储局部变量、操作数栈、动态链接、方法出口等信息</li><li>局部变量表：存放编译器可知的各种基本数据类型数据、对象引用reference（对象实例本身还是存放到堆）、returnAddress类型（字节码指令地址），以局部变量空间Slot为基本分配单位，所需内存空间在编译期间完成分配</li></ul></li><li>本地方法栈：与虚拟机栈负责执行Java方法类似，本地方法栈负责执行Native方法，具体虚拟机可以自由实现它</li></ul></li><li>小结 Java的内存模型除了程序计数器区域没有定义<code>OutOfMemoryError</code>异常，其他区域都存在<code>OutOfMemoryError</code>异常，虚拟机栈与本地方法栈中存在<code>StackOverFlowError</code>异常</li></ul><p><img src="http://static.tsukasa.moe/images/post-images/2017/10/jvm-model.jpg" alt=""></p><p>对象在内存中存储的布局可以分为三块区域：</p><ul><li>Header（对象头）：存储对象自身运行时数据，比如HashCode、GC分代年龄等信息，类型指针</li><li>Instance Data（实例数据）：对象真正存储的有效信息</li><li>Padding（对齐填充）：对象大小必须是8字节的整数倍，当大小不符合时需要通过对齐填充补全</li></ul><p>对象访问定位的两种方式：</p><ul><li>句柄访问：保证reference存放的是稳定的句柄地址，访问对象时从句柄池中取句柄，读取句柄中对象实例数据（存放在堆区）和类型数据（存放在方法区）地址信息</li><li>直接指针访问：节省了到对象实例数据指针定位开销，速度快，HotSpot目前使用的方式</li></ul><h2 id="Garage-Collection"><a href="#Garage-Collection" class="headerlink" title="Garage Collection"></a>Garage Collection</h2><p>内存资源并非取之不尽用之不竭的，对于无用对象我们需要回收其所占用的内存。首先我们来思考三个问题：如何判断对象可被回收，何时执行回收，如何执行回收？现在我带领大家来揭开垃圾收集技术的神秘面纱。</p><p>判断对象可被回收的方法：</p><ul><li>引用计数法：给对象添加一个引用计数器，对象被引用时计数器值加一，引用失效时计数器值减一，值为0时表示对象不再使用可被回收。由于引用计数法无法解决循环引用的问题，因此虚拟机没有采用这种方案</li><li>可达性分析法：主流商用虚拟机采用的方案，以一系列作为<code>GC Root</code>对象作为起点，以引用作边，进行图的遍历，走过的路径称为引用链，未被遍历的对象为不可用对象需要进行回收。Java中可作为<code>GC Roots</code>的对象：<ul><li>虚拟机栈区的栈帧中的本地变量表引用的对象</li><li>方法区中静态属性引用的对象</li><li>方法区中常量引用的对象</li><li>本地方法栈区Native方法引用的对象</li></ul></li></ul><p>四种引用类型：</p><ul><li>强引用：new创建的对象产生的引用，只要强引用存在，即使OOM也不能被回收</li><li>软引用：OOM前会回收该引用指向的对象，JDK1.2之后提供SoftReference类实现软引用</li><li>弱引用：下一次GC时会回收该引用指向的对象，JDK1.2之后提供WeakReference类实现弱引用</li><li>虚引用：无法通过虚引用来获得对象实例，关联的对象仅在被回收时收到一个系统通知。可以用于监视缓存，对象回收后释放资源的工作。JDK1.2之后提供PhantomReference类实现虚引用</li></ul><p>垃圾回收算法：</p><ul><li>标记-清除算法：最基础的回收算法，通过可达性分析遍历后标记出所有可回收的对象，然后回收所有被标记过的对象。效率不高，容易产生内存碎片</li><li>复制算法：将可用内存划分为大小相等的两块，每次使用其中一块，当空间占满后将所有存活对象复制到另一块并清理当前这一块的空间。这样提高了效率，解决了内存碎片的问题，代价是每次只能使用一半的内存空间。这种方案适合对象存活率低的场景，可以减少复制对象带来的开销。根据新生代对象“朝生夕死”的特点，用于回收新生代对象。</li><li>标记-整理算法：标记过程类似标记-清除算法，但是之后不是直接回收，而是将所有存活对象移至一端，然后清除端边界外的内存。这种方法解决了内存碎片化问题，也提高了内存空间利用率，适合对象存活率高的场景，每次只需要标记少量对象，适合老年代。</li><li>分代收集算法：根据对象存活周期的不同将内存划分为新生代和老年代，根据各自特点采用合适的回收算法。</li></ul><p>GC类型：</p><ul><li>Minor GC：Eden区内存不足以分配给对象时触发的新生代GC，频率高</li><li>Major GC：通常等价于Full GC，会<code>Stop-The-World</code>。老年代/永久代的GC，频率低速度慢，伴随至少一次的Minor GC</li></ul><p>了解以上内容后，最后完整梳理一下分代收集算法具体过程以及采用的GC策略：</p><ul><li>在新生代区域根据<code>SurvivorRatio</code>参数划分Eden，Survivor A，Survivor B三块区域比例</li><li>每次创建实例时会优先在Eden分配内存，Eden空间不足时执行Minor GC，采用复制算法将所有存活对象复制到Survivor B中，然后将Eden清空后继续向外提供内存空间，Eden空间再次不足时将Eden和Survivor A中存活的对象复制到Survivor B中，同时清空Eden和Survivor A，每次Eden对象复制时使用一块Survivor，如此反复。</li><li>虚拟机给每个对象都分配了一个年龄计数器，对象在Survivor区中每“熬过”一次Minor GC后年龄加一，超过MaxTenuringThreshold参数值时会晋升到老年代</li><li>当老年代空间不足或永久代空间不足时会执行Major GC，采用的GC算法是标记-整理算法</li></ul><p>以上是分代收集算法的完整过程，除了上面描述的常规过程以外，实际过程中还存在一些额外策略：</p><ul><li>大对象直接进入老年代：大量连续内存的Java对象，比如很长的字符串以及数组</li><li>动态对象年龄判定：如果在Survivor空间中所有年龄相同的对象大小总和大于Survivor空间的一半，则年龄大于或等于该年龄的对象就可以忽略MaxTenuringThreshold参数值直接进入老年代。</li><li>空间分配担保：在Minor GC发生之前会先检查老年代最大连续空间是否大于新生代所有对象总空间，这是为防止内存回收后新生代对象全部存活状态，导致老年代无法提供足够空间，导致Minor GC后紧接着又执行Full GC的情况。而虚拟机在完成内存回收前并不知道会存在新生代全部是存活状态这种极端情况，因此虚拟机会查看HandlePromotionFailure值是否允许担保失败。如果不允许担保失败（HandlePromotionFailure == false）则直接进行Full GC；如果允许担保失败（HandlePromotionFailure == true）则虚拟机会将老年代最大连续可用空间与之前每一次回收晋升到老年代对象容量的平均值作比较，大于则相当于担保成功尝试Minor GC，小于则相当于担保失败直接执行Full GC。</li></ul><p>虚拟机支持参数配置，我们可以根据应用场景设置相应参数达到性能优化的效果：</p><p>示例：-Xms20M -Xmx20M -Xmn10M -XX:+PrintGCDetails -XX:SurvivorRatio=8</p><table><thead><tr><th style="text-align:center">Params</th><th style="text-align:center">Description</th></tr></thead><tbody><tr><td style="text-align:center">Xms</td><td style="text-align:center">最小堆容量</td></tr><tr><td style="text-align:center">Xmx</td><td style="text-align:center">最大堆容量</td></tr><tr><td style="text-align:center">Xmn</td><td style="text-align:center">新生代容量 &lt;==&gt; Eden + Survivor A + Survivor B</td></tr><tr><td style="text-align:center">PrintGCDetail</td><td style="text-align:center">记录GC日志</td></tr><tr><td style="text-align:center">SurvivorRatio</td><td style="text-align:center">新生代中Eden与Survivor区域的比值，默认值为8</td></tr><tr><td style="text-align:center">PretenureSizeThreshold</td><td style="text-align:center">对象大小大于该值，直接分配至老年代</td></tr><tr><td style="text-align:center">MaxTenuringThreshold</td><td style="text-align:center">大于该阈值时晋升至老年代，默认值为15</td></tr><tr><td style="text-align:center">HandlePromotionFailure</td><td style="text-align:center">是否允许担保失败</td></tr><tr><td style="text-align:center">ParalleGCThreads</td><td style="text-align:center">设置并行GC时进行内存回收的线程数</td></tr></tbody></table><h1 id="类加载与执行引擎"><a href="#类加载与执行引擎" class="headerlink" title="类加载与执行引擎"></a>类加载与执行引擎</h1><h2 id="类加载"><a href="#类加载" class="headerlink" title="类加载"></a>类加载</h2><p>虚拟机把描述类的数据从Class文件加载到内存，并对数据进行校验、转换解析和初始化，最终形成可以被虚拟机直接使用的Java类型。</p><p>Class文件：一串二进制字节流，无论以何种形式存在。</p><p>类加载生命周期：</p><ul><li>Loading（加载）：通过一个类的全限定名获取类的二进制字节流，将字节流所代表的静态存储结构转化为方法区运行时数据结构，最后在内存中生成一个代表该类的java.lang.Class对象作为访问类数据信息的方法区入口。</li><li>Verification（验证）：保证Class文件字节流合法性，防止恶意代码危害虚拟机安全，验证动作包括文件格式验证、元数据验证、字节码验证、符号引用验证。</li><li>Preparation（准备）：正式在方法区为类变量分配内存并设置类变量初始值，除ConstantValue属性外通常为零值。</li><li>Resolution（解析）：将常量池中的符号引用转换为直接引用，JVM根据16个字节码指令判断是在类加载时就对常量池进行符号引用解析，还是等到使用时进行解析。<ul><li>符号引用：以一组符号描述所引用的目标，符号可以是任意形式的字面量。</li><li>直接引用：可以是直接指向目标的指针、相对偏移量或间接定位到目标的句柄。</li><li>运行时绑定使得程序实际执行到invokedynamic指令时才进行解析。</li></ul></li><li>Initialization（初始化）：真正执行Java代码，父类<code>&lt;clinit&gt;()</code>方法优先执行，<ul><li><code>&lt;clinit&gt;()</code>方法由类变量赋值动作和静态语句块组成，编译器收集的顺序由语句在源文件中出现的顺序决定。</li><li>父类<code>&lt;clinit&gt;()</code>方法优于子类<code>&lt;linit&gt;()</code>方法先执行。</li><li><code>&lt;clinit&gt;()</code>方法对于class或interface非必需。</li><li>VM保证一个类的<code>&lt;linit&gt;()</code>方法在多线程中能被正确加锁、同步，只会有一个线程去执行<code>&lt;linit&gt;f()</code>方法。</li></ul></li><li>Using（使用）</li><li>Unloading（卸载）</li></ul><p>类加载场景：</p><ul><li>遇到new，getstatic，putstatic，invokestatic 4条指令时</li><li>使用<code>java.lang.reflect</code>包方法对类进行反射调用时</li><li>子类初始化时首先初始化其父类</li><li>虚拟机启动时，首先初始化包含main方法的主类</li><li><code>JDK1.7 java.lang.invoke.MethodHandle</code>解析出REF_getStatic，REF_putStatic，REF_invokeStatic的方法句柄时，初始化句柄类</li></ul><p>四种类型的加载器：</p><ul><li>BootstrapClassLoader：由JVM内部实现，负责加载<code>$JAVA_HOME/lib</code>或<code>-Xbootclasspath</code>并且是虚拟机识别的核心类库至内存。 </li><li>ExtClassLoader：继承java.lang.ClassLoader，负责加载<code>$JAVA_HOME/lib/ext</code>或<code>java.ext.dirs</code>指定的类库。</li><li>AppClassLoader：继承java.lang.ClassLoader，负责加载<code>classpath</code>路径的类库，默认类加载器。</li><li>CustomClassLoader：如果我们想动态加载class文件（本地文件/网络下载），需要自定义类加载器，继承java.lang.ClassLoader，并重写findClass方法。</li></ul><p>对于任何一个类，由加载它的类加载器和这个类一同确立其在JVM中的唯一性，每个加载器类都有一个独立的类名称空间。同一个Class文件，被同一个虚拟机加载，但是使用不同的类加载器时，会得到不同的两个类，而影响equal，isAssignableFrom，isInstance方法的返回结果和instanceof的判定。那么全限定类名一致的情况下如何保证唯一确定一个类呢？双亲委派模型类加载机制可以解决这个问题。</p><p>双亲委派模型：类加载器收到类加载请求时，优先将请求交给parent加载器加载，无法完成时才自己加载，类似与责任链设计模式。加载器之间使用组合Composition关系复用parent加载器的代码，加载请求的传递路径为：<code>CustomClassLoader -&gt; AppClassLoader -&gt; ExtClassLoader -&gt; BootstrapClassLoader</code>。下面是ClassLoader的loadClass方法源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">synchronized</span> Class&lt;?&gt; loadClass(String name, <span class="keyword">boolean</span> resolve) <span class="keyword">throws</span> ClassNotFoundException &#123;</span><br><span class="line">    <span class="comment">// 首先检查请求的类是否已经被加载过了</span></span><br><span class="line">    Class c = findLoadedClass(name);</span><br><span class="line">    <span class="keyword">if</span> (c == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (parent != <span class="keyword">null</span>) &#123;</span><br><span class="line">                c = parent.loadClass(name, <span class="keyword">false</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                c = findBootstrapClassOrNull(name);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            <span class="comment">// 父类无法完成加载</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (c == <span class="keyword">null</span>) &#123;</span><br><span class="line">            c = findClass(name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (resolve) &#123;</span><br><span class="line">        resolveClass(name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加载流程梳理：</p><ul><li>首先检查类是否被加载过，如果已加载直接返回加载过的Class对象</li><li>没有加载过，递归父类加载器的loadClass方法处理加载请求</li><li>parent加载器加载成功，则直接返回</li><li>parent加载器加载失败，调用本身的findClass方法加载类</li></ul><p>以类java.lang.Object为例，无论是哪一个类加载器要加载该类，双亲委派模型可以实现最终交给模型最顶端的BootstrapClassLoader加载，保证Object类在程序运行中的唯一性。现在我们来分析另一种场景，如果用户在项目中编写了java.lang.Object类，双亲委派机制使得<code>AppClassLoader</code>最终会委托<code>BootstrapLoader</code>调用loadClass方法加载，而java.lang.Object已加载过<code>$JAVA_HOME/lib</code>中的java.lang.Object类了，会通过<code>BootstrapClassLoader</code>的findLoadedClass方法直接返回该类，解决了加载多个java.lang.Object的问题，保证了类的唯一性。</p><p>根据上面的源码，我们得到自定义ClassLoader的规则，继承ClassLoader类，重写findClass方法而无需重写loadClass方法，确保双亲委派机制的逻辑正确执行。</p><h2 id="执行引擎"><a href="#执行引擎" class="headerlink" title="执行引擎"></a>执行引擎</h2><p>运行时栈帧（Stack Frame）：栈帧是用于虚拟机进行方法调用和方法执行的数据结构，包括局部变量表、操作栈、动态链接、返回地址和附加信息。每一个方法从调用开始到执行完成的过程，对应一个栈帧虚拟机栈中从入栈到出栈的过程。下面我们通过分析栈帧结构了解字节码是如何被执行的。</p><ul><li>局部变量表：一组变量值存储空间，用于存放方法参数和方法内部定义的局部变量。除了上面内存模型中对局部变量表的介绍，虚拟机是如何描述Java方法执行时是参数值到参数列表的传递过程呢？首先，如果是调用实例方法则Slot 0存放调用该方法的对象的引用，因此可以使用this访问到该对象；如果调用的是类方法则Slot 0存放0。接下来的Slot按照方法参数列表 ==&gt; 局部变量列表的顺序存放变量。需要注意的是局部变量中的Slot可重用，当方法体内定义的变量超出其作用域时，会被后面的变量重用前面变量的Slot</li></ul><p>我们观察下面简短的代码对GC的影响可以说明局部变量表Slot复用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">byte</span>[] placeholder = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">64</span> * <span class="number">1024</span> * <span class="number">1024</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">0</span>; <span class="comment">// 代码A</span></span><br><span class="line">    System.gc();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（1）直接执行程序，placeholder内存会被回收。<br>（2）将代码A注释掉，执行程序后内存并没有被回收。</p><p>自然地我们需要知道placeholder能否被回收的根本原因：局部变量表中的Slot是否存在有关于placeholder数组对象的引用。情形（1）虽然代码已经离开了placeholder作用域，后面没有任何对局部变量表的读写操作，placeholder原本占用的Slot仍旧保持着对placeholder的引用，所以GC roots仍会保持着对placeholder的关联导致placeholder不能被回收。情形（2）利用了Slot可重用性，<code>int a = 0</code>中的变量a会重用placeholder占用的Slot，导致placeholder解引用可以被GC回收。</p><ul><li>操作数栈：具有存放执行运算的参数、栈帧数据共享的功能，Java虚拟机的解释执行引擎称为“基于栈的执行引擎”中的“栈”就是操作数栈</li><li>动态连接：字节码中的方法调用指令以常量池中指向方法的符号引用做参数。符号引用在类加载阶段或第一次使用时转为直接引用称为静态解析，每次在运行期转化为直接引用称为动态连接</li><li>方法返回地址：方法遇return指令正常退出时会将调用者的PC计数器值作为返回地址，异常退出时通过异常处理表确定返回地址</li></ul><p>下面是一段Java程序的执行过程</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">foo</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> b = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">int</span> c = (a + b) * <span class="number">5</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://static.tsukasa.moe/images/post-images/2017/10/jvm-run.gif" alt=""></p><h2 id="方法调用"><a href="#方法调用" class="headerlink" title="方法调用"></a>方法调用</h2><p>方法调用阶段的唯一任务是确定被调用方法的版本，不涉及方法内部的具体执行过程，通常会经过解析和分派的过程：</p><ul><li>解析：运行前可唯一确定一个可调用版本，并且该方法调用版本在运行期不可变的方法，能被invokestatic和invokespecial指令调用的方法例如静态方法、私有方法、实例构造器、父类方法以及使用invokevirtual调用的final方法，类加载解析阶段会将该方法的符号引用解析为直接引用，即编译期确定<ul><li>invokestatic：调用静态方法</li><li>invokespecial：调用实例构造器<code>&lt;init&gt;</code>方法、private方法和父类方法</li><li>invokevirtual：调用所有虚方法</li><li>invokeinterface：调用接口方法</li><li>invokedynamic：先在运行时动态解析出调用点限定符所引用的方法，然后再执行该方法</li></ul></li><li>分派<ul><li>静态分派：根据静态类型来定位方法执行版本的分派，编译器完成，经典应用是函数的重载</li><li>动态分派：依赖实际类型来定位方法执行版本的分派，运行期完成，经典应用是函数的重写</li></ul></li></ul><p>举个例子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="keyword">extends</span> <span class="title">Human</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Human man = <span class="keyword">new</span> Man();</span><br></pre></td></tr></table></figure><p>在这个例子里，man这个实例的静态类型是<code>Human</code>，实际类型是<code>Man</code></p><p>未完待续</p><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p>《深入理解Java虚拟机》<br><a href="https://blog.codeest.moe/2017/06/05/android-jvm-note/" target="_blank" rel="external"></a><br><a href="http://blog.csdn.net/isunn/article/details/50487329" target="_blank" rel="external"></a></p><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;\assets\js\APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这篇文章是我读《深入理解Java虚拟机》后的笔记总结，对每一个Java开发者来说这是一本值得多看几遍的好书，文章主要内容包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自动内存管理&lt;/li&gt;
&lt;li&gt;类加载与执行引擎&lt;/li&gt;
&lt;li&gt;程序编译与代码优化&lt;/li&gt;
&lt;li&gt;并发与线程安全&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="编程开发" scheme="http://blog.tsukasa.moe/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Java" scheme="http://blog.tsukasa.moe/tags/Java/"/>
    
      <category term="JVM" scheme="http://blog.tsukasa.moe/tags/JVM/"/>
    
  </entry>
  
  <entry>
    <title>设计模式篇之除了你之外我都不要</title>
    <link href="http://blog.tsukasa.moe/2017/09/24/desgin-pattern-singleton/"/>
    <id>http://blog.tsukasa.moe/2017/09/24/desgin-pattern-singleton/</id>
    <published>2017-09-24T01:23:53.000Z</published>
    <updated>2019-03-10T14:00:08.540Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><h1 id="懒汉式"><a href="#懒汉式" class="headerlink" title="懒汉式"></a>懒汉式</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton singleton = <span class="keyword">null</span>;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;</span><br><span class="line">            singleton = <span class="keyword">new</span> Singleton();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>特点：lazy，非线程安全，简单</p><h1 id="饿汉式"><a href="#饿汉式" class="headerlink" title="饿汉式"></a>饿汉式</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton singleton = <span class="keyword">new</span> Singleton();</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>特点：not lazy，线程安全，简单高效，但类加载时就初始化，即使暂不需要，浪费内存</p><h1 id="双重校验锁-Double-checked-locking"><a href="#双重校验锁-Double-checked-locking" class="headerlink" title="双重校验锁(Double-checked locking)"></a>双重校验锁(Double-checked locking)</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> Singleton singleton = <span class="keyword">null</span>;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123; <span class="comment">// 代码1</span></span><br><span class="line">        <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123; </span><br><span class="line">            <span class="keyword">synchronized</span>(Singleton.class) &#123;</span><br><span class="line">                <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    singleton = <span class="keyword">new</span> Singleton(); <span class="comment">// 代码2</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>特点：Lazy，线程安全，多线程下能保持高性能</p><h4 id="为什么需要volatile？"><a href="#为什么需要volatile？" class="headerlink" title="为什么需要volatile？"></a>为什么需要volatile？</h4><p>加volatile关键字生成的汇编指令会多一个lock前缀指令，相当于一个内存屏障。</p><ul><li>禁止进行指令重排序。</li><li>保证了不同线程对该变量操作的可见性。具体来说是强制将对缓存的修改立即写入主存，<br>如果是写操作，它会导致其他CPU中对应的缓存行无效。</li></ul><h4 id="为什么需要双重if校验？"><a href="#为什么需要双重if校验？" class="headerlink" title="为什么需要双重if校验？"></a>为什么需要双重if校验？</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">singleton = <span class="keyword">new</span> Singleton(); <span class="comment">// 代码2</span></span><br></pre></td></tr></table></figure><p>上面这行可以分解为三个操作：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. memory = allocate(); <span class="comment">// 分配内存</span></span><br><span class="line"><span class="number">2</span>. ctorInstance(memory); <span class="comment">// 初始化对象</span></span><br><span class="line"><span class="number">3</span>. instance = memory; <span class="comment">// 设置instance指向刚分配的地址</span></span><br></pre></td></tr></table></figure><p>如果没有加入volatile关键字，可能会出现指令重排序<code>1-2-3</code>或<code>1-3-2</code>两种情况<br>对于第2种情况，线程A，B都进入getInstance方法后，线程A获得锁，执行了1，3，此时B判断instance不为null，直接返回未初始完成的对象，就会出现问题。因此需要用volatile保证指令重排序。</p><h1 id="枚举类型"><a href="#枚举类型" class="headerlink" title="枚举类型"></a>枚举类型</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> Singleton &#123;</span><br><span class="line"></span><br><span class="line">    SINGLETON;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">whateverMethod</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>特点：not Lazy，线程安全，实现简单，不存在反射和反序列化漏洞</p><h1 id="静态内部类-static-nested-class"><a href="#静态内部类-static-nested-class" class="headerlink" title="静态内部类(static nested class)"></a>静态内部类(static nested class)</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Inner</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton INSTANCE = <span class="keyword">new</span> Singleton();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Inner.INSTANCE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>特点：Lazy，线程安全，实现相比双重校验锁简单<br>引申：静态内部类与内部类区别，内存泄漏<br>静态内部类等同于外部类的静态方法，只能访问外部类的静态变量和静态方法。</p><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;\assets\js\APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这篇文章是学习单例模式的笔记总结，主要内容包括了懒汉式，饿汉式，双重校验锁，枚举，静态内部类五种单例模式，强烈推荐使用原生记事本默写一遍。&lt;/p&gt;
    
    </summary>
    
      <category term="编程开发" scheme="http://blog.tsukasa.moe/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="设计模式" scheme="http://blog.tsukasa.moe/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>二叉树必知必会</title>
    <link href="http://blog.tsukasa.moe/2017/09/14/data-structure-bintree/"/>
    <id>http://blog.tsukasa.moe/2017/09/14/data-structure-bintree/</id>
    <published>2017-09-14T01:41:19.000Z</published>
    <updated>2019-03-10T13:30:04.604Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这篇文章总结了二叉树常见的操作集合，大体从递归非递归给出代码实现，包括以下各个操作：</p><ul><li>遍历二叉树</li><li>建立二叉树</li><li>插入节点</li><li>查找节点</li><li>删除节点</li><li>求树的高度</li></ul><h1 id="遍历二叉树"><a href="#遍历二叉树" class="headerlink" title="遍历二叉树"></a>遍历二叉树</h1><h4 id="递归遍历"><a href="#递归遍历" class="headerlink" title="递归遍历"></a>递归遍历</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rPreOrderTraversal</span><span class="params">(Node&lt;T&gt; root)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (root != <span class="keyword">null</span>) &#123;</span><br><span class="line">        System.out.print(root.getData()+<span class="string">" "</span>);</span><br><span class="line">        rPreOrderTraversal(root.getLeft());</span><br><span class="line">        rPreOrderTraversal(root.getRight());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rInOrderTraversal</span><span class="params">(Node&lt;T&gt; tree)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (root != <span class="keyword">null</span>) &#123;</span><br><span class="line">        rPreOrderTraversal(root.getLeft());</span><br><span class="line">        System.out.print(root.getData()+<span class="string">" "</span>);</span><br><span class="line">        rPreOrderTraversal(root.getRight());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rPostOrderTraversal</span><span class="params">(Node&lt;T&gt; tree)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (root != <span class="keyword">null</span>) &#123;</span><br><span class="line">        rPreOrderTraversal(root.getLeft());</span><br><span class="line">        rPreOrderTraversal(root.getRight());</span><br><span class="line">        System.out.print(root.getData()+<span class="string">" "</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="非递归遍历"><a href="#非递归遍历" class="headerlink" title="非递归遍历"></a>非递归遍历</h4><p>非递归遍历借助堆栈实现<br>前序与中序：</p><ol><li>遇到一个节点，压栈，并遍历其左子树</li><li>左子树遍历结束后，栈顶弹出节点</li><li>对弹出节点的右子树进行先（中）序遍历</li></ol><p>区别 =&gt; 访问时刻：入栈时访问节点是先序，出栈时访问节点为后续</p><p>后序：<br>采用两个栈，栈1保存遍历顺序，栈2保存访问的倒序。<br>下图是前序、中序、后序的访问顺序：<br><img src="http://static.tsukasa.moe/images/post-images/2017/09/traverse.jpg" alt=""></p><p>注：电灯泡符号、三角形、星号分别表示前序、中序、后序访问各节点的时刻</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">preOrderTraversal</span><span class="params">(Node&lt;T&gt; root)</span> </span>&#123;</span><br><span class="line">    Stack&lt;Node&lt;T&gt;&gt; stack = <span class="keyword">new</span> Stack&lt;Node&lt;T&gt;&gt;();</span><br><span class="line">    Node&lt;T&gt; tree = root;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (tree != <span class="keyword">null</span> || !stack.empty()) &#123;</span><br><span class="line">        <span class="keyword">while</span> (tree != <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.print(tree.getData()+<span class="string">" "</span>);</span><br><span class="line">            stack.push(tree);</span><br><span class="line">            tree = tree.getLeft();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!stack.empty()) &#123;</span><br><span class="line">            tree = stack.pop();</span><br><span class="line">            tree = tree.getRight();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">inOrderTraversal</span><span class="params">(Node&lt;T&gt; root)</span> </span>&#123;</span><br><span class="line">    Stack&lt;Node&lt;T&gt;&gt; stack = <span class="keyword">new</span> Stack&lt;Node&lt;T&gt;&gt;();</span><br><span class="line">    Node&lt;T&gt; tree = root;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (tree != <span class="keyword">null</span> || !stack.empty()) &#123;</span><br><span class="line">        <span class="keyword">while</span> (tree != <span class="keyword">null</span>) &#123;</span><br><span class="line">            stack.push(tree);</span><br><span class="line">            tree = tree.getLeft();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!stack.empty()) &#123;</span><br><span class="line">            tree = stack.pop();</span><br><span class="line">            System.out.print(tree.getData()+<span class="string">" "</span>);</span><br><span class="line">            tree = tree.getRight();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postOrderTraversal</span><span class="params">(Node&lt;T&gt; root)</span> </span>&#123;</span><br><span class="line">    Stack&lt;Node&lt;T&gt;&gt; s1 = <span class="keyword">new</span> Stack&lt;Node&lt;T&gt;&gt;();</span><br><span class="line">    Stack&lt;Node&lt;T&gt;&gt; s2 = <span class="keyword">new</span> Stack&lt;Node&lt;T&gt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (root != <span class="keyword">null</span>) &#123; <span class="comment">// 先将根节点入栈</span></span><br><span class="line">        s1.push(root);</span><br><span class="line">    &#125;</span><br><span class="line">    Node&lt;T&gt; tempNode;</span><br><span class="line">    <span class="keyword">while</span> (!s1.empty()) &#123;</span><br><span class="line">        tempNode = s1.pop(); <span class="comment">// 弹出当前根节点</span></span><br><span class="line">        s2.push(tempNode); <span class="comment">// 当前根节点入栈</span></span><br><span class="line">        <span class="comment">// 根节点的左右子节点入栈</span></span><br><span class="line">        <span class="keyword">if</span> (tempNode.getLeft() != <span class="keyword">null</span>) &#123; </span><br><span class="line">            s1.push(tempNode.getLeft());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (tempNode.getRight() != <span class="keyword">null</span>) &#123;</span><br><span class="line">            s1.push(tempNode.getRight());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!s2.empty()) &#123;</span><br><span class="line">        System.out.print(s2.pop().getData()+<span class="string">" "</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="层序遍历"><a href="#层序遍历" class="headerlink" title="层序遍历"></a>层序遍历</h4><p>借助队列先进先出性质实现层序遍历</p><ol><li>将根节点入队</li><li>执行循环：节点出队，访问该节点，左右儿子入队</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">levelOrderTraversal</span><span class="params">(Node&lt;T&gt; root)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Queue&lt;Node&lt;T&gt;&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">    queue.offer(root);</span><br><span class="line">    <span class="keyword">while</span> (!queue.isEmpty()) &#123;</span><br><span class="line">        Node&lt;T&gt; temp = queue.poll();</span><br><span class="line">        System.out.print(temp.getData() +<span class="string">" "</span>);</span><br><span class="line">        <span class="keyword">if</span> (temp.getLeft() != <span class="keyword">null</span>) &#123;</span><br><span class="line">            queue.offer(temp.getLeft());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (temp.getRight() != <span class="keyword">null</span>) &#123;</span><br><span class="line">            queue.offer(temp.getRight());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="建树"><a href="#建树" class="headerlink" title="建树"></a>建树</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Node&lt;Integer&gt; <span class="title">create</span><span class="params">()</span></span>&#123;</span><br><span class="line">    InputStream is = <span class="keyword">null</span>;</span><br><span class="line">    Node&lt;Integer&gt; tree = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        is = <span class="keyword">new</span> BufferedInputStream(<span class="keyword">new</span> FileInputStream(<span class="keyword">new</span> File(<span class="string">"BinTree.txt"</span>)));</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    System.setIn(is);</span><br><span class="line">    Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">    tree = buildTree(tree, sc);</span><br><span class="line">    <span class="keyword">return</span> tree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Node&lt;Integer&gt; <span class="title">buildTree</span><span class="params">(Node&lt;Integer&gt; root, Scanner sc)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!sc.hasNext()) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Integer data = sc.nextInt();</span><br><span class="line">    <span class="keyword">if</span> (data == -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        root = <span class="keyword">new</span> Node&lt;&gt;(data);</span><br><span class="line">        root.setLeft(buildTree(root.getLeft(), sc));</span><br><span class="line">        root.setRight(buildTree(root.getRight(), sc));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="插入节点"><a href="#插入节点" class="headerlink" title="插入节点"></a>插入节点</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Node&lt;Integer&gt; <span class="title">insert</span><span class="params">(Integer t, Node&lt;Integer&gt; root)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="keyword">null</span>) &#123;</span><br><span class="line">        root = <span class="keyword">new</span> Node&lt;&gt;(t);</span><br><span class="line">        root.setLeft(<span class="keyword">null</span>);</span><br><span class="line">        root.setRight(<span class="keyword">null</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (t &lt; root.getData()) &#123;</span><br><span class="line">            root.setLeft(insert(t, root.getLeft()));</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (t &gt; root.getData()) &#123;</span><br><span class="line">            root.setRight(insert(t, root.getRight()));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="查找节点"><a href="#查找节点" class="headerlink" title="查找节点"></a>查找节点</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Node&lt;Integer&gt; <span class="title">find</span><span class="params">(Integer t, Node&lt;Integer&gt; root)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (t &gt; root.getData()) &#123;</span><br><span class="line">        <span class="keyword">return</span> find(t, root.getRight());</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (t &lt; root.getData()) &#123;</span><br><span class="line">        <span class="keyword">return</span> find(t, root.getLeft());</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Node&lt;Integer&gt; <span class="title">iterFind</span><span class="params">(Integer t, Node&lt;Integer&gt; root)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (root != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (t &gt; root.getData()) &#123;</span><br><span class="line">            root = root.getRight();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (t &lt; root.getData()) &#123;</span><br><span class="line">            root = root.getLeft();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> root;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Node&lt;T&gt; <span class="title">findMax</span><span class="params">(Node&lt;T&gt; tree)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (tree != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">while</span> (tree.getRight()!= <span class="keyword">null</span>) &#123;</span><br><span class="line">            tree = tree.getRight();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> tree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Node&lt;Integer&gt; <span class="title">findMin</span><span class="params">(Node&lt;Integer&gt; tree)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (tree != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">while</span> (tree.getLeft() != <span class="keyword">null</span>) &#123;</span><br><span class="line">            tree = tree.getLeft();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> tree;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h1><p>按值删除一个节点，用二分查找递归到需要删除的节点，根据删除节点是否有左右子树分三种情况：</p><ol><li>无左右子树，直接将父节点对其引用置为null。</li><li>只有左子树或者右子树，将父节点对其引用置为其左子树或右子树。</li><li>存在左子树和右子树，在右子树中找最小节点代替被删节点，接着对其右子树的替身节点即最小节点进行删除。<br>其中1，2可以合并为一种情况，</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Node&lt;Integer&gt; <span class="title">delete</span><span class="params">(Integer t, Node&lt;Integer&gt; root)</span> </span>&#123;</span><br><span class="line">    Node&lt;Integer&gt; temp;</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="keyword">null</span>) &#123;</span><br><span class="line">        System.out.println(<span class="string">"未找出要删除节点"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (t &lt; root.getData()) &#123;</span><br><span class="line">        root.setLeft(delete(t, root.getLeft()));</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (t &gt; root.getData()) &#123;</span><br><span class="line">        root.setRight(delete(t, root.getRight()));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; </span><br><span class="line">        <span class="keyword">if</span> (root.getLeft()!= <span class="keyword">null</span> &amp;&amp; root.getRight() != <span class="keyword">null</span>) &#123; <span class="comment">// 存在左右子树，找右子树最小节点替换被删节点，对右子树的替身节点删除</span></span><br><span class="line">            temp = findMin(root.getRight());</span><br><span class="line">            root.setData(temp.getData());</span><br><span class="line">            root.setRight(delete(temp.getData(), root.getRight()));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (root.getLeft() == <span class="keyword">null</span>) &#123; <span class="comment">// 左子树为空，用右子节点替换本身</span></span><br><span class="line">                root = root.getRight();</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (root.getRight() == <span class="keyword">null</span>) &#123; <span class="comment">// 右子树为空，用左子节点替换本身</span></span><br><span class="line">                root = root.getLeft();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="求树高"><a href="#求树高" class="headerlink" title="求树高"></a>求树高</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 6.tree height</span></span><br><span class="line"><span class="comment">// height = max&#123;lh, rh&#125; + 1</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">postOrderGetHeight</span><span class="params">(Node&lt;T&gt; root)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> heightLeft, heightRight, maxHeight;</span><br><span class="line">    <span class="keyword">if</span> (root != <span class="keyword">null</span>) &#123;</span><br><span class="line">        heightLeft = postOrderGetHeight(root.getLeft());</span><br><span class="line">        heightRight = postOrderGetHeight(root.getRight());</span><br><span class="line">        maxHeight = heightLeft &gt; heightRight ? heightLeft : heightRight;</span><br><span class="line">        <span class="keyword">return</span> maxHeight+<span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">// 空树高度</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><p><a href="https://github.com/solano-yume/Algorithm/tree/master/Tree/BinTree" target="_blank" rel="external">Github代码仓库</a></p><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;\assets\js\APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这篇文章总结了二叉树常见的操作集合，大体从递归非递归给出代码实现，包括以下各个操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;遍历二叉树&lt;/li&gt;
&lt;li&gt;建立二叉树&lt;/li&gt;
&lt;li&gt;插入节点&lt;/li&gt;
&lt;li&gt;查找节点&lt;/li&gt;
&lt;li&gt;删除节点&lt;/li&gt;
&lt;li&gt;求树的高度&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="编程开发" scheme="http://blog.tsukasa.moe/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="数据结构与算法" scheme="http://blog.tsukasa.moe/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
      <category term="Java" scheme="http://blog.tsukasa.moe/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Intellij IDEA的Swing程序打包为exe可执行文件</title>
    <link href="http://blog.tsukasa.moe/2017/08/16/pack-java-program-to-exe-file/"/>
    <id>http://blog.tsukasa.moe/2017/08/16/pack-java-program-to-exe-file/</id>
    <published>2017-08-15T17:57:43.000Z</published>
    <updated>2019-03-10T10:37:00.411Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本人要将基于Spring Boot + JPA/Hibernate框架写的Swing程序打包为exe可执行文件发布，踩了各种坑，虽然结果不尽人意，但不做点记录感觉对不起自己浪费的时间。</p><h1 id="了解jar与exe"><a href="#了解jar与exe" class="headerlink" title="了解jar与exe"></a>了解jar与exe</h1><p>Java程序创建出可执行jar包需要满足的是：首先要确定Main Class，即是应用程序的入口，其次是需要Java运行环境。而运行环境本身包括了你在项目的依赖，以及运行java程序所需的环境即JVM。</p><p>生成jar包在不同平台有不同方法，这里只给出Intellij IDEA平台的解决方案。</p><p>exe4j不支持将jre打包进入exe的，要让你的java变身成为的exe变得可执行，意味着什么呢？你需要告诉最终的exe文件去哪里找jre，exe4j打包是提供了查找jre几个方式：注册表，环境变量，或者某个路径。</p><p>当然我打包出来的目的肯定是要拿到没有jre环境的pc下使用，解决方案有两种：</p><ol><li>给电脑jre环境，装jdk（或者说至少要装个jre吧），还要看环境变量，麻烦；</li><li>指定jre相对路径，一起放到一个目录下，虽然不能融为一体，但是可以朝夕相伴嘛，当然你要将她保护起来也行。</li></ol><h1 id="创建可执行jar包"><a href="#创建可执行jar包" class="headerlink" title="创建可执行jar包"></a>创建可执行jar包</h1><p>打开<code>Project Structure（ctrl+shift+alt+s）</code>——&gt; <code>Artifacts</code> ——&gt; 点加号添加jar ——&gt; <code>From modules with dependecies...</code>,选择程序入口主类，Apply配置完成，生成<code>META-INF/MANIFEST.MF</code>文件，格式是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Manifest-Version: 1.0</span><br><span class="line">Main-Class: cn.tsukasalwq.productmanager.ProductmanagerApplication</span><br></pre></td></tr></table></figure><p>Main-Class就是我们上面说到的主类，程序入口没错，不过请注意后面使用exe4j转为exe可执行文件时有变动。</p><p>因为用的是Maven做项目管理依赖，使用Maven进行jar打包。底部Terminal窗口，目录为当前工作根目录（和<code>pom.xml</code>同级）,命令如下，参数<code>-Dmaven.test.skip=true</code>表示排除测试代码后打包，不然有可能失败。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean package  -Dmaven.test.skip=true</span><br></pre></td></tr></table></figure><p>不加参数在测试类没问题时候则一切正常，是直接在打开右边的Maven project面板，Lifecycle的双击package相当于执行<code>mvn package</code>命令生成jar包。</p><p>等在target文件中生成jar包后，用命令行，或双击执行它，前者可以看到控制台打印的信息。如果没什么差错，创建可执行jar包成功。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar  target/spring-boot-scheduler-<span class="number">1.0</span>.0.jar</span><br></pre></td></tr></table></figure><h1 id="jar转换为exe文件"><a href="#jar转换为exe文件" class="headerlink" title="jar转换为exe文件"></a>jar转换为exe文件</h1><p>前置工作：新建一个目录App,目录下放从jdk下拷贝出来的jre文件夹和之前创建的可执行jar包，相互厮守，记得不要忽略。</p><p>打开破解版的exe4j，设置各种参数：如exe名称，输出目录；Executable info下的程序是32位还是64位；Java invocation下添加需要打包的jar包并选择主类，重点了，要选择主类是<code>org.springframework.boot.loader.JarLauncher</code>，而不是我们写的，不过不用担心，这点等我弄清楚原因在更新。设置JRE下的最小jre版本，并将Search sequence下三种jre查找方式删除，添加刚才新建文件夹App下的jre目录，如果与jar包同级，添加完成后显示有<code>.\jre</code>。</p><p>打包完成后将jre文件夹和exe文件放在同级目录运行即可成功运行。</p><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;\assets\js\APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;本人要将基于Spring Boot + JPA/Hibernate框架写的Swing程序打包为exe可执行文件发布，踩了各种坑，虽然结果不尽人意，但不做点记录感觉对不起自己浪费的时间。&lt;/p&gt;
    
    </summary>
    
      <category term="编程开发" scheme="http://blog.tsukasa.moe/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Intellij IDEA" scheme="http://blog.tsukasa.moe/tags/Intellij-IDEA/"/>
    
      <category term="Swing" scheme="http://blog.tsukasa.moe/tags/Swing/"/>
    
  </entry>
  
  <entry>
    <title>Eclipse如何构建一个SSM项目</title>
    <link href="http://blog.tsukasa.moe/2017/07/30/eclipse-create-ssm-project/"/>
    <id>http://blog.tsukasa.moe/2017/07/30/eclipse-create-ssm-project/</id>
    <published>2017-07-30T09:26:31.000Z</published>
    <updated>2019-03-10T17:11:20.846Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这是一篇针对新手使用Eclipse如何搭建SSM项目的教程，大佬可以右上叉了，文章主要内容包括：</p><ul><li>SSM框架原理备忘图示</li><li>Eclipse集成Maven工具</li><li>进行框架文件配置</li></ul><p>项目配置完成后的图片：<br><img src="http://static.tsukasa.moe/images/post-images/2017/07/project-view.png" alt=""></p><h1 id="SSM框架工作原理"><a href="#SSM框架工作原理" class="headerlink" title="SSM框架工作原理"></a>SSM框架工作原理</h1><p>首先确保阅读过SSM各部分是如何工作的，又有那些配置文件，这里直接祭出一张Spring+SpringMVC+Mybatis框架工作原理：<br><img src="http://static.tsukasa.moe/images/post-images/2017/07/ssm.png" alt=""></p><h1 id="Maven项目管理工具"><a href="#Maven项目管理工具" class="headerlink" title="Maven项目管理工具"></a>Maven项目管理工具</h1><p>Maven一个项目构建，依赖管理，项目信息管理工具，类似的还有Gradle，Ant。Maven主要有以下三个作用：</p><ul><li>下载jar包</li><li>寻找依赖，下载依赖</li><li>热部署，热编译</li></ul><p>那么你可能会问Maven是如何工作的呢？项目中所用到jar包，在没有用管理工具之前，我们先从网上下载回来存放到项目的lib目录中，然后添加相应的依赖，项目才能够使用其中的API完成我们的编码。而Maven则是一个只需要你在pom.xml配置文件中添加相应配置，就会帮你完成上述工作的工具。Maven又是去哪里获取依赖的呢？请看下图：<br><img src="http://static.tsukasa.moe/images/post-images/2017/07/maven-work.png" alt=""></p><p>首先Maven会从本地仓库寻找项目用到的jar包，假设我们配置私服，则先是到私服上面找，如果私服上也没有我们想要的jar包，最后才去中央仓库下载我们的依赖，如果中央服务器还是没有呢，好吧，大概是未发布上去的依赖jar包，这时你才需要使用原始的方法导入。</p><p>下载并安装Maven：<a href="http://maven.apache.org/download.cgi" target="_blank" rel="external">下载Maven</a>并解压，配置环境变量<code>MAVEN_HOME</code>为<code>D:\Framework\Maven\apache-maven-3.5.0</code>,并添加到<code>PATH</code>中<code>%MAVEN_HOME%;</code><br>测试配置是否成功：打开cmd，运行输入<code>mvn -v</code>查看版本<br>本地仓库配置：新建<code>D:\Workplace\Maven\maven-repository</code>文件夹做本地仓库，用于存放下载的jar包。打开目录解压目录如<code>D:\Framework\Maven\apache-maven-3.5.0\conf</code>下的<code>settings.xml</code>编辑，setting标签内添加下面代码，然后复制<code>settings.xml</code>到仓库文件夹中，Eclipse会通过指定的settings.xml找到我们的本地仓库。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>D:\Workplace\Maven\maven-repository<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在<code>settings.xml</code>的mirrors配置了私服：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-aliyun<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>Nexus aliyun<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在profiles标签下配置jdk版本</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>jdk-1.8<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jdk</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">jdk</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.compilerVersion</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.compilerVersion</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">properties</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Eclipse进行关联：</p><ul><li><code>Windows =&gt; Preferences =&gt; Maven =&gt; Installations</code>中添加Maven安装目录并打勾</li><li><code>Maven =&gt; User Settings</code>下通过<code>Global Settings</code>或者<code>User Settings</code>设置本地仓库Local Repository，至此Maven配置结束</li></ul><p>下面讲解如何使用Maven呢？<br>首先在<a href="http://search.maven.org/" target="_blank" rel="external"></a>中搜索你需要的jar包名称，添加需要jar包的<code>groupId</code>，<code>artifactId</code>，<code>version</code>三个属性，保存pom.xml文件后Maven就会自动下载并配置好，我们就可以愉快的使用API了。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  项目名</span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  项目模块  </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  项目版本</span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Eclipse新建一个SSM项目"><a href="#Eclipse新建一个SSM项目" class="headerlink" title="Eclipse新建一个SSM项目"></a>Eclipse新建一个SSM项目</h1><ul><li><p>打开Eclipse，新建maven project，勾选<code>Create a simple project(skip archetype selection)</code>，web项目设置Packaging为war包，Maven项目创建成功</p></li><li><p>在新建项目右键，<code>Properties =&gt; Project Facets</code>中设置Dynamic Web Module版本为3.0和Java版本并勾选，点击新出现的<code>Further configuration available</code>填写<code>Content directory</code>为<code>src/main/webapp</code>,并勾选<code>Generate web.xml deployment descriptor</code>,Apply,Maven项目创建成功。</p></li><li>添加SSM框架用到的依赖配置，如下所示：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.tsukasalwq<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ssmproj<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>ssmproj Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.apache.org<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- spring版本号 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>4.0.2.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- mybatis版本号 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mybatis.version</span>&gt;</span>3.2.6<span class="tag">&lt;/<span class="name">mybatis.version</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- log4j日志文件管理包版本 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">slf4j.version</span>&gt;</span>1.7.7<span class="tag">&lt;/<span class="name">slf4j.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">log4j.version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">log4j.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- spring核心包 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-oxm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context-support<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- mybatis核心包 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- mybatis/spring整合包 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 导入java ee jar 包 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;dependency&gt;</span></span><br><span class="line"><span class="comment">            &lt;groupId&gt;javax&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">            &lt;artifactId&gt;javaee-api&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">            &lt;version&gt;8.0&lt;/version&gt;</span></span><br><span class="line"><span class="comment">        &lt;/dependency&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- servlet-api相关 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!-- servlet-api相关 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 导入Mysql数据库链接jar包 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.30<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 导入dbcp的jar包，用来在applicationContext.xml中配置数据库 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-dbcp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-dbcp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- JSTL标签类 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 日志文件管理包 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- log start --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;log4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 格式化对象，方便输出日志 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.41<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;slf4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;slf4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- log end --&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 映入JSON --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.jackson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-mapper-asl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 上传组件包 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-codec<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-codec<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!-- pagehelper分页 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!-- 反向工程创建依赖的jar包 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!-- c3p0数据库连接池、驱动 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>ssmproj<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>最后创建package：<br><code>cn.tsukasalwq.entity</code>：实体类，表结构的映射<br><code>cn.tsukasalwq.dao</code>：数据持久层，管理数据库<br><code>cn.tsukasalwq.service</code>：业务模块的逻辑应用设计<br><code>cn.tsukasalwq.controller</code>：业务模块流程的控制<br><code>cn.tsukasalwq.utils</code>：工具类集合</li></ul><p><strong>一个表 ==&gt; 实体类Entity ==&gt; 数据操作接口 ==&gt; xml ==&gt; 业务接口 ==&gt; 业务实现类</strong></p><h1 id="配置Mybatis"><a href="#配置Mybatis" class="headerlink" title="配置Mybatis"></a>配置Mybatis</h1><p>配置dtd<br>解压mybatis的jar包,把<code>org/apache/ibatis/builder/xml</code>的dtd文件复制到Tools文件夹，<code>Windows--&gt;Preferences--&gt;XML--&gt;XML Catalog配置</code><br><code>mybatis-3-config.dtd</code>对应key：<code>-//mybatis.org//DTD Config 3.0//EN</code><br><code>mybatis-3-mapper.dtd</code>对应key：<code>-//mybatis.org//DTD Mapper 3.0//EN</code></p><p><code>mybatis-config.xml</code>是mybatis的全局配置文件，用于配置数据源，事务。<br>步骤：new other =&gt; 输入xml选xml file =&gt; 一直next，配置dtd，生成<code>mybatis-config.xml</code>文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "mybatis-3-config.dtd" &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>映射文件<code>XXXMapper.xml</code>初始化如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Spring配置：<code>applicationContext.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:cache</span>=<span class="string">"http://www.springframework.org/schema/cache"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans </span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/mvc </span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd </span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop </span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context </span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context/spring-context-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/tx </span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/cache </span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/cache/spring-cache-4.3.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>小技巧：对常用代码段可以配置模板，Preferences =&gt; XM =&gt; XML Files=&gt; Editor =&gt;Templates中添加，在<code>.xml</code>文件<code>Alt+/</code>即可直接导入模板。</p><p><code>spring-servlet.xml</code>：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span> <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:cache</span>=<span class="string">"http://www.springframework.org/schema/cache"</span> <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans </span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/mvc </span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd </span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop </span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context </span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context/spring-context-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/tx </span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 扫描包，将@Controller的类通过spring容器创建一个实例 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span></span></span><br><span class="line"><span class="tag">        <span class="attr">base-package</span>=<span class="string">"cn.tsukasalwq.controller,cn.tsukasalwq.service"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 一键化配置，自动注册处理器，处理器适配器等，解决乱码问题 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 文件上传 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"multipartResolver"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">"org.springframework.web.multipart.commons.CommonsMultipartResolver"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 100M --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxUploadSize"</span> <span class="attr">value</span>=<span class="string">"104857600"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultEncoding"</span> <span class="attr">value</span>=<span class="string">"utf-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 视图解析器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="在Spring中整合SpringMVC："><a href="#在Spring中整合SpringMVC：" class="headerlink" title="在Spring中整合SpringMVC："></a>在Spring中整合SpringMVC：</h1><p>在项目上右键，Resource中设置xml编码为UTF-8<br>加载Spring的配置文件<code>applicationContext.xml</code>，监听器方式，虽然<code>applicationContext.xml</code>放在<code>webapp/WEB-INF</code>下会自动加载，但是不方便集中管理，存在多个Spring配置文件时可以用<code>*</code>组合加载进来<br>SpringMVC配置文件，它是通过一个<code>DispatchServlet</code>的Servlet去配置的</p><p><code>web.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">id</span>=<span class="string">"schedule-console"</span> <span class="attr">version</span>=<span class="string">"3.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>ssmproj<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 解决post方法乱码 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">async-supported</span>&gt;</span>true<span class="tag">&lt;/<span class="name">async-supported</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置监听器加载Spring的配置文件applicationContex.xml --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:applicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Spring监听器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!-- 防止Spring内存溢出监听器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.util.IntrospectorCleanupListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置dispatchServlet，加载SpringMVC的配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc-servlet.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>Servers</code>添加相应版本<code>tomcat =&gt; 右键 =&gt; Add and Remove</code><br><img src="http://static.tsukasa.moe/images/post-images/2017/07/servers-add-tomcat-eclipse.png" alt=""></p><p><code>Project Explorer</code>视图下的<code>Server =&gt; server.xml</code>更改根名称，以<code>localhost:8080</code>为根目录则更改为下面的path</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Context</span> <span class="attr">docBase</span>=<span class="string">"ssmproj"</span> <span class="attr">path</span>=<span class="string">"/"</span> <span class="attr">reloadable</span>=<span class="string">"true"</span> <span class="attr">source</span>=<span class="string">"org.eclipse.jst.jee.server:ssmproj"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p><code>Navigator</code>视图下，<code>.settings</code>文件夹文件<code>org.eclipse.wst.common.project.facet.core.xml</code>更改java,jst相关版本和添加相应fixed</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">faceted-project</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">runtime</span> <span class="attr">name</span>=<span class="string">"Apache Tomcat v8.5"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">fixed</span> <span class="attr">facet</span>=<span class="string">"wst.jsdt.web"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">fixed</span> <span class="attr">facet</span>=<span class="string">"jst.web"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">fixed</span> <span class="attr">facet</span>=<span class="string">"java"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">installed</span> <span class="attr">facet</span>=<span class="string">"java"</span> <span class="attr">version</span>=<span class="string">"1.8"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">installed</span> <span class="attr">facet</span>=<span class="string">"jst.web"</span> <span class="attr">version</span>=<span class="string">"3.0"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">installed</span> <span class="attr">facet</span>=<span class="string">"wst.jsdt.web"</span> <span class="attr">version</span>=<span class="string">"1.0"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">faceted-project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置完成后，项目已经可以跑起来了，要想整合持久层框架则需要<code>mybatis-config.xml</code>文件整合进来。</p><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;\assets\js\APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这是一篇针对新手使用Eclipse如何搭建SSM项目的教程，大佬可以右上叉了，文章主要内容包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SSM框架原理备忘图示&lt;/li&gt;
&lt;li&gt;Eclipse集成Maven工具&lt;/li&gt;
&lt;li&gt;进行框架文件配置&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="编程开发" scheme="http://blog.tsukasa.moe/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Java" scheme="http://blog.tsukasa.moe/tags/Java/"/>
    
      <category term="SSM" scheme="http://blog.tsukasa.moe/tags/SSM/"/>
    
      <category term="Eclipse" scheme="http://blog.tsukasa.moe/tags/Eclipse/"/>
    
      <category term="Maven" scheme="http://blog.tsukasa.moe/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>中移物联网实习小记</title>
    <link href="http://blog.tsukasa.moe/2017/07/29/feelings-about-working-in-iot/"/>
    <id>http://blog.tsukasa.moe/2017/07/29/feelings-about-working-in-iot/</id>
    <published>2017-07-29T08:06:49.000Z</published>
    <updated>2019-03-10T10:36:40.881Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><h1 id="实习生活"><a href="#实习生活" class="headerlink" title="实习生活"></a>实习生活</h1><p>7.5晚收到中移物联网实习生录取通知，收拾完东西，7号前往深圳，期间认识了许多大神朋友。7.8到达深圳，第一次住青年旅馆，青旅作为一两日的停留或许可以，令人堪忧的卫生情况让我彻底打消了长期居住的想法。</p><p>7.9早8点半，踏上寻舍之旅，当天步数毫无疑问登qq步数榜首，累。所幸是许多朋友帮助，现居住的地方是一个在深圳工作两年左右的妹子介绍的，也一起为找住处逛了许多地方，意外惊喜的这位姐姐也喜欢日本文化并且想学习日语！晚上安顿好夜已深，1点睡。</p><p>7.10早6：00起床，7点50左右到公司，比报到时间早了1个多小时，与门外江阿姨聊了会天，8点半进公司，刘大哥让我坐着等待。和HRBP贺姐姐签完实习协议后，认识导师姚华超和部分组内同事。接着组装领取的HP新电脑，win7更新为win10，配置环境，确定4G家庭基站项目学习。</p><p>7.11早8点到公司，学习TR069 CPE广域网管理协议，搭本地项目环境搭了半天，在才庆哥和梁贝哥的帮助下终于跑起项目。</p><p>7.12拿到项目代码，项目是基于ssm框架写的。学习了mybatis框架，读项目代码。</p><p>7.13几乎接了一上午网线，除了首次接线成功的小高兴，有些心疼宝贵的时间。在谢大哥和才庆哥的帮助下完成家庭基站网管设备配置，研读代码，找bug。</p><p>7.14第一次参加会议，了解Bug管理工具Bugzilla.</p><p>7.20听华超分析了家庭基站的网络拓扑，把计算机网络理解得这么透彻原来是这么棒，初步设计了mac地址管理器的数据库。</p><p>7.27写了个Mac地址管理器工具，bug待测试，学习Spring boot框架。</p><p>7.28下午公司半年工作报告会，各部门代表发言，或许中移现在的深圳分公司可以用这句话概括：麻雀虽小，五脏俱全，这是一个有目标充满斗志的团队，同事关系很不错，首次产生一起开拓公司的未来的想法。开了整整5个小时，了解到一个公司各个部门是怎么运作的以及一些新观点和语言艺术，陈总说的这句”你的心里能容得下多少人，就有多少人能够容得下你”颇有同感，于人际关系而言是和谐相处，于公司来说是实现共同目标，一个问题在个人与公司角度来看是不一样的，但是无论从哪个角度都有不变的思想核心，另外，”公平”与”公正”的话题，何为成长，果然自己还是差得远了。总之，得到了许多有价值的东西。晚上一起去烧烤，吃得很饱，喝得很欢，聊得很开心，不过国企的酒文化还真的不是盖得啊，差点醉了。。。</p><h1 id="感悟与总结"><a href="#感悟与总结" class="headerlink" title="感悟与总结"></a>感悟与总结</h1><p>三周中，心中最强烈的两点感受是：</p><ol><li>学生时期真的应该早点去公司实习，在周围有那么多优秀的人和资源下努力，你也会变得优秀。实践让你知道自己缺乏什么能力，想要达成自己的目标如何前进才最快速。</li><li>靠自己的力量生活才知道生活是那么的不容易，父母是伟大的，我现在能做的只是不断变得强大。</li></ol><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;\assets\js\APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这篇文章是我在中移物联网实习三周后写的，人生中第一次实习体验，初尝工作新鲜之余小有感悟，遂记之。&lt;/p&gt;
    
    </summary>
    
      <category term="工作生活" scheme="http://blog.tsukasa.moe/categories/%E5%B7%A5%E4%BD%9C%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="随笔" scheme="http://blog.tsukasa.moe/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>RecyclerView学习笔记</title>
    <link href="http://blog.tsukasa.moe/2017/07/05/recyclerview-learning-notes-01/"/>
    <id>http://blog.tsukasa.moe/2017/07/05/recyclerview-learning-notes-01/</id>
    <published>2017-07-04T17:47:14.000Z</published>
    <updated>2019-03-10T17:11:21.267Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文是针对Android的RecyclerView的学习笔记，主要内容有：</p><ul><li>RecyclerView实现ListView</li><li>RecyclerView实现StaggeredGridLayout</li></ul><p>RecyclerView可轻松实现ListView、GridView、瀑布流布局，可以设置横向，纵向显示，自带的ItemAnimation添加动画效果简单，并且能够快速实现各种动态浏览效果</p><h1 id="RecyclerView实现ListView"><a href="#RecyclerView实现ListView" class="headerlink" title="RecyclerView实现ListView"></a>RecyclerView实现ListView</h1><p>和ListView实现一样，RecylerView需要经过写布局，定义适配器，加载布局三个步骤，只是ViewHolder需要继承RecyclerView.ViewHolder。</p><h4 id="写布局"><a href="#写布局" class="headerlink" title="写布局"></a>写布局</h4><p>使用RecyclerView需在项目build.gradle的dependencies闭包中添加以下依赖：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compile &apos;com.android.support:recyclerview-v7:24.2.1&apos;</span><br></pre></td></tr></table></figure><p><code>girl_item.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/girl_image"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:src</span>=<span class="string">"@drawable/icon1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"72dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"72dp"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/girl_name"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"chiaki"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">"center_horizontal"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginLeft</span>=<span class="string">"10dp"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>recycler_view.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.v7.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/recycler_view"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="写适配器"><a href="#写适配器" class="headerlink" title="写适配器"></a>写适配器</h4><p><code>GirlsAdapter.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GirlsAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">GirlsAdapter</span>.<span class="title">ViewHolder</span>&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Girl&gt; girlList;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GirlsAdapter</span><span class="params">(List&lt;Girl&gt; girlList)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.girlList = girlList;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</span><br><span class="line">        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.girl_staggered_item, parent, <span class="keyword">false</span>);</span><br><span class="line">        <span class="keyword">final</span> ViewHolder viewHolder = <span class="keyword">new</span> ViewHolder(view);</span><br><span class="line">        viewHolder.girlView.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">int</span> position = viewHolder.getAdapterPosition();</span><br><span class="line">                Girl girl = girlList.get(position);</span><br><span class="line">                Toast.makeText(v.getContext(), <span class="string">"you cliced view "</span>+girl.getName(), Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        viewHolder.girlImage.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">int</span> position = viewHolder.getAdapterPosition();</span><br><span class="line">                Girl girl = girlList.get(position);</span><br><span class="line">                Toast.makeText(v.getContext(), <span class="string">"you clicked image "</span>+girl.getName(), Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> viewHolder;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(ViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        Girl girl = girlList.get(position);</span><br><span class="line">        holder.girlImage.setImageResource(girl.getImageId());</span><br><span class="line">        holder.girlName.setText(girl.getName());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> girlList.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;</span><br><span class="line">        View girlView;</span><br><span class="line">        ImageView girlImage;</span><br><span class="line">        TextView girlName;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ViewHolder</span><span class="params">(View itemView)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(itemView);</span><br><span class="line">            girlView = itemView;</span><br><span class="line">            girlImage = (ImageView) itemView.findViewById(R.id.girl_image);</span><br><span class="line">            girlName = (TextView) itemView.findViewById(R.id.girl_name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="加载布局"><a href="#加载布局" class="headerlink" title="加载布局"></a>加载布局</h4><p>通过布局管理器，设置相应布局以及滚动方向</p><p><code>RecyclerViewActivity.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RecyclerViewActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Girl&gt; girlsList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.recycler_view);</span><br><span class="line"></span><br><span class="line">        initGirls();</span><br><span class="line">        RecyclerView recyclerView = (RecyclerView) findViewById(R.id.recycler_view);</span><br><span class="line">        <span class="comment">// 选用不同布局Manager，实现你想要的布局</span></span><br><span class="line">        LinearLayoutManager layoutManager = <span class="keyword">new</span> LinearLayoutManager(<span class="keyword">this</span>); <span class="comment">// 设置ListView</span></span><br><span class="line">        layoutManager.setOrientation(LinearLayoutManager.HORIZONTAL);<span class="comment">// 横向滚动</span></span><br><span class="line">        recyclerView.setLayoutManager(layoutManager); <span class="comment">// </span></span><br><span class="line">        <span class="comment">// recyclerView.setLayoutManager(new GridLayoutManager(this, 2));//这里用线性宫格显示 类似于grid view</span></span><br><span class="line">        <span class="comment">// recyclerView.setLayoutManager(new StaggeredGridLayoutManager(2, OrientationHelper.VERTICAL));//这里用线性宫格显示 类似于瀑布流</span></span><br><span class="line"></span><br><span class="line">        GirlsAdapter girlsAdapter2 = <span class="keyword">new</span> GirlsAdapter(girlsList);</span><br><span class="line">        recyclerView.setAdapter(girlsAdapter2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initGirls</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            Girl gir11 = <span class="keyword">new</span> Girl(<span class="string">"chiaki"</span>, R.drawable.icon1);</span><br><span class="line">            girlsList.add(gir11);</span><br><span class="line">            Girl gir12 = <span class="keyword">new</span> Girl(<span class="string">"setsuna"</span>, R.drawable.icon2);</span><br><span class="line">            girlsList.add(gir12);</span><br><span class="line">            Girl gir13 = <span class="keyword">new</span> Girl(<span class="string">"touma"</span>, R.drawable.icon3);</span><br><span class="line">            girlsList.add(gir13);</span><br><span class="line">            Girl gir14 = <span class="keyword">new</span> Girl(<span class="string">"koharu"</span>, R.drawable.icon4);</span><br><span class="line">            girlsList.add(gir14);</span><br><span class="line">            Girl gir15 = <span class="keyword">new</span> Girl(<span class="string">"mari"</span>, R.drawable.icon5);</span><br><span class="line">            girlsList.add(gir15);</span><br><span class="line">            Girl gir16 = <span class="keyword">new</span> Girl(<span class="string">"nayuki"</span>, R.drawable.icon6);</span><br><span class="line">            girlsList.add(gir16);</span><br><span class="line">            Girl gir17 = <span class="keyword">new</span> Girl(<span class="string">"aiko"</span>, R.drawable.icon7);</span><br><span class="line">            girlsList.add(gir17);</span><br><span class="line">            Girl gir18 = <span class="keyword">new</span> Girl(<span class="string">"nagisa"</span>, R.drawable.icon8);</span><br><span class="line">            girlsList.add(gir18);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="RecyclerView实现StaggeredGridLayout"><a href="#RecyclerView实现StaggeredGridLayout" class="headerlink" title="RecyclerView实现StaggeredGridLayout"></a>RecyclerView实现StaggeredGridLayout</h1><p><img src="http://static.tsukasa.moe/images/post-images/2017/07/recycler_staggered_view.jpg" alt=""></p><h4 id="写布局-1"><a href="#写布局-1" class="headerlink" title="写布局"></a>写布局</h4><p>写布局<code>recycler_view.xml</code>和<code>girl_staggered_item.xml</code>，<code>recycler_view.xml</code>和listview写法相同。</p><p><code>girl_staggered_item.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_margin</span>=<span class="string">"5dp"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/girl_image"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"72dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">"center_horizontal"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:src</span>=<span class="string">"@drawable/icon1"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/girl_name"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">"left"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"chiaki"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="写适配器-1"><a href="#写适配器-1" class="headerlink" title="写适配器"></a>写适配器</h4><p>自定义适配器继承<code>RecyclerView.Adapter&lt;GirlsAdapter.ViewHolder&gt;</code>，重写<code>onCreateViewHolder(),onBindViewHolder()</code>，<code>getItemCount()</code>三个方法，自定义ViewHolder需要继承Recyclerview.ViewHolder类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GirlsAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">GirlsAdapter</span>.<span class="title">ViewHolder</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Girl&gt; girlList;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GirlsAdapter</span><span class="params">(List&lt;Girl&gt; girlList)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.girlList = girlList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</span><br><span class="line">        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.girl_staggered_item, parent, <span class="keyword">false</span>);</span><br><span class="line">        <span class="keyword">final</span> ViewHolder viewHolder = <span class="keyword">new</span> ViewHolder(view);</span><br><span class="line"></span><br><span class="line">        viewHolder.girlView.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">int</span> position = viewHolder.getAdapterPosition();</span><br><span class="line">                Girl girl = girlList.get(position);</span><br><span class="line">                Toast.makeText(v.getContext(), <span class="string">"you cliced view "</span>+girl.getName(), Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 监听item子项包含的组件事件</span></span><br><span class="line">        viewHolder.girlImage.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">int</span> position = viewHolder.getAdapterPosition();</span><br><span class="line">                Girl girl = girlList.get(position);</span><br><span class="line">                Toast.makeText(v.getContext(), <span class="string">"you clicked image "</span>+girl.getName(), Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> viewHolder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(ViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        Girl girl = girlList.get(position);</span><br><span class="line">        holder.girlImage.setImageResource(girl.getImageId());</span><br><span class="line">        holder.girlName.setText(girl.getName());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> girlList.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;</span><br><span class="line">        View girlView;</span><br><span class="line">        ImageView girlImage;</span><br><span class="line">        TextView girlName;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ViewHolder</span><span class="params">(View itemView)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(itemView);</span><br><span class="line">            girlView = itemView;</span><br><span class="line">            girlImage = (ImageView) itemView.findViewById(R.id.girl_image);</span><br><span class="line">            girlName = (TextView) itemView.findViewById(R.id.girl_name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="加载布局-1"><a href="#加载布局-1" class="headerlink" title="加载布局"></a>加载布局</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaggeredGridActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Girl&gt; girlsList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.recycler_view);</span><br><span class="line"></span><br><span class="line">        initGirls();</span><br><span class="line">        RecyclerView recyclerView = (RecyclerView) findViewById(R.id.recycler_view);</span><br><span class="line">        StaggeredGridLayoutManager layoutManager = <span class="keyword">new</span> StaggeredGridLayoutManager(<span class="number">4</span>, StaggeredGridLayoutManager.VERTICAL);</span><br><span class="line">        recyclerView.setLayoutManager(layoutManager);</span><br><span class="line"></span><br><span class="line">        GirlsAdapter girlsadapter = <span class="keyword">new</span> GirlsAdapter(girlsList);</span><br><span class="line">        recyclerView.setAdapter(girlsadapter);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initGirls</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            Girl gir11 = <span class="keyword">new</span> Girl(getRandomLengthName(<span class="string">"chiaki"</span>), R.drawable.icon1);</span><br><span class="line">            girlsList.add(gir11);</span><br><span class="line">            Girl gir12 = <span class="keyword">new</span> Girl(getRandomLengthName(<span class="string">"setsuna"</span>), R.drawable.icon2);</span><br><span class="line">            girlsList.add(gir12);</span><br><span class="line">            Girl gir13 = <span class="keyword">new</span> Girl(getRandomLengthName(<span class="string">"touma"</span>), R.drawable.icon3);</span><br><span class="line">            girlsList.add(gir13);</span><br><span class="line">            Girl gir14 = <span class="keyword">new</span> Girl(getRandomLengthName(<span class="string">"koharu"</span>), R.drawable.icon4);</span><br><span class="line">            girlsList.add(gir14);</span><br><span class="line">            Girl gir15 = <span class="keyword">new</span> Girl(getRandomLengthName(<span class="string">"mari"</span>), R.drawable.icon5);</span><br><span class="line">            girlsList.add(gir15);</span><br><span class="line">            Girl gir16 = <span class="keyword">new</span> Girl(getRandomLengthName(<span class="string">"nayuki"</span>), R.drawable.icon6);</span><br><span class="line">            girlsList.add(gir16);</span><br><span class="line">            Girl gir17 = <span class="keyword">new</span> Girl(getRandomLengthName(<span class="string">"aiko"</span>), R.drawable.icon7);</span><br><span class="line">            girlsList.add(gir17);</span><br><span class="line">            Girl gir18 = <span class="keyword">new</span> Girl(getRandomLengthName(<span class="string">"nagisa"</span>), R.drawable.icon8);</span><br><span class="line">            girlsList.add(gir18);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getRandomLengthName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        Random random = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">int</span> lenght = random.nextInt(<span class="number">20</span>)+<span class="number">1</span>;</span><br><span class="line">        StringBuilder builder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; lenght; i++) &#123;</span><br><span class="line">            builder.append(name);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> builder.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.yaohepeng.com/2015/08/08/RecyclerView%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97%E4%B9%8B%E5%9F%BA%E7%A1%80%E7%AF%87/" target="_blank" rel="external">RecyclerView使用心得之基础篇</a></p><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;\assets\js\APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;本文是针对Android的RecyclerView的学习笔记，主要内容有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RecyclerView实现ListView&lt;/li&gt;
&lt;li&gt;RecyclerView实现StaggeredGridLayout&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="编程开发" scheme="http://blog.tsukasa.moe/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://blog.tsukasa.moe/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>善用强大的Chrome浏览器</title>
    <link href="http://blog.tsukasa.moe/2017/06/20/how-to-use-powerful-chrome/"/>
    <id>http://blog.tsukasa.moe/2017/06/20/how-to-use-powerful-chrome/</id>
    <published>2017-06-19T18:42:27.000Z</published>
    <updated>2019-03-10T17:11:20.879Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><h1 id="搜索篇"><a href="#搜索篇" class="headerlink" title="搜索篇"></a>搜索篇</h1><p>开篇之前，需要知道自然描述语言机器不一定能够正确分析，一般推荐提取关键字进行搜索，如“我想要在windows10下写php程序”的自然描述语言可改为“windows10 phpstorm环境搭建”。</p><p>排错问题如软件报错、代码调试错误、异常等直接输入错误信息能够更快速找到答案，程序员调试报错常去stackoverflow吧。</p><p>除此之外，还要善用英文搜索，收集了一些软件相关英文词汇。</p><p>附：<a href="https://github.com/solano-yume/HostGallery/blob/master/file/%E8%BD%AF%E4%BB%B6%E7%9B%B8%E5%85%B3%E8%8B%B1%E6%96%87%E6%95%B4%E7%90%86.txt" target="_blank" rel="external">软件相关英文整理</a></p><h3 id="基本技巧"><a href="#基本技巧" class="headerlink" title="基本技巧"></a>基本技巧</h3><p><strong>完全匹配</strong> <code>&quot;&quot;</code><br><code>&quot;install mysql 5.7&quot;</code>：文章中必须能够完整匹配“install mysql 5.7”，只是“install mysql”还不行</p><p><strong>通配符</strong> <code>*</code><br><code>&quot;mysql connect error *&quot;</code>：返回所有关于MySQL连接错误的文章</p><p><strong>数字范围</strong> <code>..</code><br><code>windows php环境搭建 2016.. 2017年</code>：搜索结果为2016到2017年的内容，不过本人常用下面定制搜索的<code>工具</code>下进行时间设置</p><p><strong>求差集</strong> <code>-</code></p><ul><li><code>澄空字幕 -学园</code>：搜索结果中包含“澄空字幕”而不包含“学园”。</li><li><code>白色相簿2 -维基 -維基</code>：搜索结果中有“白色相簿2”而不包含包含“维基”，“維基”，不要慌，我只是做个测试而已，维基百科挺有用的。</li></ul><p><strong>站内搜索</strong> <code>site</code></p><ul><li><code>排序算法 site:tsukasalwq.cn</code>：在站点tsukasalwq.cn下搜索“排序算法”相关内容。</li><li><code>动漫 site:zhihu.com</code>：在zhihu.com中搜索包含“动漫”的文章。</li><li><code>&quot;mysql connect error&quot; site:stackoverflow.com</code>：stackoverflow是程序员查bug最好的网站，coder必须知道的。</li></ul><p><strong>搜索特定类型文件</strong> <code>filetype</code></p><ul><li><code>简历 filetype:pdf</code>：查找返回包含“简历”的pdf文件，搜索结果开头为<code>[PDF]</code>标签标注</li></ul><h3 id="定制搜索"><a href="#定制搜索" class="headerlink" title="定制搜索"></a>定制搜索</h3><p><code>工具</code>：如图，可以设置语言，时间段，匹配情况：<br><img src="http://static.tsukasa.moe/images/post-images/2017/06/search-skills01.jpg" alt=""></p><p><code>设置</code>：如图，选择高级搜索可以使用上面六个技巧的功能：<br><img src="http://static.tsukasa.moe/images/post-images/2017/06/search-skills02.jpg" alt=""></p><h3 id="特殊搜索"><a href="#特殊搜索" class="headerlink" title="特殊搜索"></a>特殊搜索</h3><ul><li><strong>图片搜索</strong>：有时意外的方便。</li><li><strong>语音搜索</strong>：懒得打字或不方便打字可以试试。</li></ul><h1 id="快捷键篇"><a href="#快捷键篇" class="headerlink" title="快捷键篇"></a>快捷键篇</h1><p>本人喜欢键盘流的干净利落感，不过键盘与鼠标结合才能发挥最大作用，在IDE环境中多记快捷键能够极大提升效率，网上冲浪娱乐配合扩展爽得不要不要的，除了插件必须记下：</p><h3 id="键盘向"><a href="#键盘向" class="headerlink" title="键盘向"></a>键盘向</h3><ul><li><code>Ctrl+T</code>：打开新标签页</li><li><code>Ctrl+Shift+T</code>：打开刚才关闭的标签</li><li><code>Ctrl+N</code>：打开新窗口</li><li><code>Ctrl+Shift+N</code>：隐身模式打开新窗口</li><li><code>Ctrl+W</code>：关闭标签页，很多地方多有用</li><li><code>Ctrl+Shift+W</code>：关闭所有标签页并关闭浏览器</li><li><code>Alt+左右方向键</code>：页面的后退与前进</li><li><p><code>F5</code>：刷新网页</p></li><li><p><code>Alt+D</code>：定位到地址输入栏，windows资源管理器也可以用哦</p></li><li><code>Alt+Enter</code>：一般先<code>Alt+D</code>定位到输入栏，接着输入搜索内容或网址，然后<code>Alt+Enter</code>在另一个网页打开搜索结果，<code>Enter</code>即当前标签下打开搜索结果，我喜欢这个操作</li><li><code>Ctrl+F</code>：页内搜索技能，想找到东西的时候按一下吧，快速定位</li><li><p><code>Tab</code>：输入网址入<code>baidu.com</code>，按一下<code>Tab</code>键，<code>Enter</code>即可以使用当前网站</p></li><li><p><code>Ctrl+Tab</code>和<code>Ctrl+Shift+Tab</code>：类似windows下的<code>Alt+Tab</code>和<code>Alt+Shift+Tab</code>，在标签页中向前或向后切换</p></li><li><p><code>Ctrl+数字</code>：直接定位到从左开始第几个标签，<code>Ctrl+9</code>是最后一个标签页</p></li><li><p><code>Ctrl+D</code>：收藏该网页</p></li><li><code>Shift+Ctrl+O</code>：打开书签管理器</li><li><p><code>Ctrl+Shift+B</code>：快速隐藏与显示书签栏</p></li><li><p><code>F12</code>或<code>Ctrl+Shift+J</code>：开发者工具，不必多说，网页调试，找资源必用</p></li><li><code>Ctrl+J</code>：下载界面</li><li><code>Shift+Esc</code>：打开Chrome的任务管理器</li><li><code>Ctrl+H</code>：打开历史记录</li><li><p><code>Ctrl+Shift+Delete</code>：浏览器会对浏览的网页的图片、Cookie等数据进行缓存，故可以在清除浏览数据窗口清除相应内容</p></li><li><p><code>chrome://about/</code>：一般人是不用的，不过里面提供了各种各样操作都很强大。</p></li></ul><h3 id="鼠标流"><a href="#鼠标流" class="headerlink" title="鼠标流"></a>鼠标流</h3><p>喜欢用鼠标操作的话可以考虑手势操作插件，貌似Windows平台下有一款WGesture的手势操作插件：</p><ul><li><code>Ctrl+左键</code>：在新标签页打开链接，和点击<code>鼠标滑轮</code>效果相同</li><li><code>Shift+左键</code>：新窗口打开链接</li><li><code>Ctrl+Shift+左键</code>：在新标签页打开链接并转到该标签页</li></ul><p>附：<a href="https://support.google.com/chrome/answer/157179?hl=zh-Hans&amp;ref_topic=14678" target="_blank" rel="external">chrome键盘快捷键</a></p><p>后序：插件与脚本后面会补充。</p><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="http://guoze.me/2016/06/26/how-to-google/" target="_blank" rel="external">程序员的基础生存技能–关于搜索引擎的小贴士</a><br><a href="https://www.zhihu.com/question/28013848" target="_blank" rel="external">如何高效地使用搜索引擎？</a><br><a href="https://tieba.baidu.com/p/4542943297?pid=89526828707&amp;cid=0#89526828707" target="_blank" rel="external">推荐各式各样的小软件</a></p><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;\assets\js\APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这篇文章主要用于收录Chrome浏览器的奇技淫巧，没错我是Chrome的粉丝，Chrome一生推~&lt;/p&gt;
    
    </summary>
    
      <category term="资源技巧" scheme="http://blog.tsukasa.moe/categories/%E8%B5%84%E6%BA%90%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="Chorme" scheme="http://blog.tsukasa.moe/tags/Chorme/"/>
    
  </entry>
  
  <entry>
    <title>算法刷题笔记六之二叉树下篇</title>
    <link href="http://blog.tsukasa.moe/2017/06/14/pta-algorithm-practice-06-binary-tree/"/>
    <id>http://blog.tsukasa.moe/2017/06/14/pta-algorithm-practice-06-binary-tree/</id>
    <published>2017-06-14T05:39:01.000Z</published>
    <updated>2019-03-10T17:11:21.223Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><h1 id="1-堆中的路径"><a href="#1-堆中的路径" class="headerlink" title="1.堆中的路径"></a>1.堆中的路径</h1><p>Problem<br>将一系列给定数字插入一个初始为空的小顶堆H[]。随后对任意给定的下标i，打印从H[i]到根结点的路径。<a href="https://pta.patest.cn/pta/test/15/exam/4/question/713" target="_blank" rel="external">详细描述</a></p><p>Analysis</p><ol><li>首先建堆有两种方式：(1)元素先用数组按顺序存放好使之满足完全二叉树结构，要构造一个堆，那么我们只需要左右子树为堆，然后调整当前堆为堆即可。(2)首先堆为空，然后按照完全二叉树的结构每次插入一个节点，然后调整当前树为一个堆，即找出插入节点应该在的位置进行插入，与插入排序类似。因为建堆的时间复杂度为O(logN)，有N个元素，时间复杂度为O(NlogN)。根据题目描述只能选择第二种建堆方式。</li><li>建堆过程中可以使用哨兵，如果是最小堆，则H[0]定义为一个足够小的值使得堆元素都大于它。同理可推最大堆应选用一个足够大的值。</li></ol><p>Code</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MINDATA -10001</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printHeap</span><span class="params">(<span class="keyword">int</span> numbers[], <span class="keyword">int</span> index)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(index &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, numbers[index]);</span><br><span class="line">        index /= <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, numbers[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insertHeap</span><span class="params">(<span class="keyword">int</span> numbers[], <span class="keyword">int</span> data, <span class="keyword">int</span> index)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = index;</span><br><span class="line">    <span class="keyword">for</span>(; numbers[i/<span class="number">2</span>] &gt; data; i /= <span class="number">2</span>) &#123; <span class="comment">// 只要插入元素比父节点i/2小，证明插入元素不再位置i上</span></span><br><span class="line">        numbers[i] = numbers[i/<span class="number">2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    numbers[i] = data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N, M;</span><br><span class="line">    <span class="keyword">int</span> index, data;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"MinHeap.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d\n"</span>, &amp;N, &amp;M);</span><br><span class="line">    <span class="keyword">int</span> numbers[N+<span class="number">1</span>];</span><br><span class="line">    numbers[<span class="number">0</span>] = MINDATA; <span class="comment">// 哨兵 </span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;data);</span><br><span class="line">        insertHeap(numbers, data, i);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= M; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;index);</span><br><span class="line">        printHeap(numbers, index);  </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-File-Transfer"><a href="#2-File-Transfer" class="headerlink" title="2.File Transfer"></a>2.File Transfer</h1><p>Problem<br>We have a network of computers and a list of bi-directional connections. Each of these connections allows a file transfer from one computer to another. Is it possible to send a file from any computer on the network to any other?<a href="https://pta.patest.cn/pta/test/15/exam/4/question/713" target="_blank" rel="external">详细描述</a></p><p>Analysis</p><ol><li>考察集合的并查集，即查找集合中的元素，求集合并集。</li><li>思路是数组下标i表示各台电脑，s[i]表示电脑的根，如果电脑属于同一个集合那么两台电脑相互连通，根为负数证明该节点是根节点，这里可以利用根节点的根s[root]表示树高的负数或者表示树规模的负数，都称为按秩归并，进行路径压缩可以加快查找效率。</li></ol><p><img src="http://static.tsukasa.moe/images/post-images/2017/06/file-transfer.jpg" alt=""></p><p>Code</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> count;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> s[], <span class="keyword">int</span> length)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; length; i++) &#123;</span><br><span class="line">        s[i] = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> s[], <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s[x] &lt; <span class="number">0</span>) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">return</span> s[x] = find(s, s[x]); <span class="comment">// 不仅将所属树根返回，而且进行了路径压缩 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Union</span><span class="params">(<span class="keyword">int</span> x1, <span class="keyword">int</span> x2, <span class="keyword">int</span> s[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> root1 = find(s, x1);</span><br><span class="line">    <span class="keyword">int</span> root2 = find(s, x2);</span><br><span class="line">    <span class="keyword">if</span>(root1 != root2) &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[root2] &lt; s[root1]) &#123; <span class="comment">// 如果root2的树高大于root1的树高，矮的root1贴在高的root2上面,即根节点为root2 </span></span><br><span class="line">            s[root2] += s[root1];</span><br><span class="line">            s[root1] = root2;</span><br><span class="line">            count--;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            s[root1] += s[root2];</span><br><span class="line">            s[root2] = root1;</span><br><span class="line">            count--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"FileTransfer.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    count = n;</span><br><span class="line">    <span class="keyword">int</span> s[n+<span class="number">1</span>];</span><br><span class="line">    init(s, n+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;ch);</span><br><span class="line">    <span class="keyword">while</span>(ch != <span class="string">'S'</span>) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;x, &amp;y);</span><br><span class="line">        <span class="keyword">if</span>(ch == <span class="string">'I'</span>) &#123;</span><br><span class="line">            Union(x, y, s);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(ch == <span class="string">'C'</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(find(s, x) == find(s, y)) <span class="built_in">printf</span>(<span class="string">"yes\n"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"no\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;ch);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(count == <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"The network is connected.\n"</span>);  </span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"There are %d components.\n"</span>, count);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;\assets\js\APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这篇文章是PTA算法刷题笔记，针对二叉树结构的练习题，题目包括了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;堆中的路径&lt;/li&gt;
&lt;li&gt;File Transfer&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="编程开发" scheme="http://blog.tsukasa.moe/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="数据结构与算法" scheme="http://blog.tsukasa.moe/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
      <category term="PTA" scheme="http://blog.tsukasa.moe/tags/PTA/"/>
    
  </entry>
  
  <entry>
    <title>算法刷题笔记五之二叉树中篇</title>
    <link href="http://blog.tsukasa.moe/2017/06/05/pta-algorithm-practice-05-binary-tree/"/>
    <id>http://blog.tsukasa.moe/2017/06/05/pta-algorithm-practice-05-binary-tree/</id>
    <published>2017-06-05T15:57:29.000Z</published>
    <updated>2019-03-10T10:37:05.548Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><h1 id="1-是否同一棵二叉搜索树"><a href="#1-是否同一棵二叉搜索树" class="headerlink" title="1.是否同一棵二叉搜索树"></a>1.是否同一棵二叉搜索树</h1><p>Problem<br>给定一个插入序列就可以唯一确定一棵二叉搜索树。然而，一棵给定的二叉搜索树却可以由多种不同的插入序列得到。例如分别按照序列{2, 1, 3}和{2, 3, 1}插入初始为空的二叉搜索树，都得到一样的结果。于是对于输入的各种插入序列，你需要判断它们是否能生成一样的二叉搜索树。<a href="https://pta.patest.cn/pta/test/15/exam/4/question/712" target="_blank" rel="external">详细描述</a></p><p>Analysis</p><ol><li>确定树的链表表示，根据第一输入序列建立一棵二叉搜索树，然后判断余下的序列与建立的树是否一致。</li><li>如何判断输入序列是否一致？可以在树BST中按顺序搜索输入序列的元素，如果搜索所经过的节点在前面都出现过，则一致。对于每个树节点可设置一个tag表示该节点是否被访问过。</li><li>本题需要注意的是，如果发现序列与二叉搜索树不一致时，不需要进行check判断，但还是要遍历完该行序列，不然会影响后面数据输入正确性。</li></ol><p>Code</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElementType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">TreeNode</span>* <span class="title">BinTree</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">TreeNode</span> &#123;</span></span><br><span class="line">    ElementType data;</span><br><span class="line">    BinTree left;</span><br><span class="line">    BinTree right;  </span><br><span class="line">    <span class="keyword">int</span> tag;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 清空树，释放空间</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">freeTree</span><span class="params">(BinTree BST)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(BST-&gt;left) freeTree(BST-&gt;left);</span><br><span class="line">    <span class="keyword">if</span>(BST-&gt;right) freeTree(BST-&gt;right);</span><br><span class="line">    <span class="built_in">free</span>(BST);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化tag为未被访问状态 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">resetTag</span><span class="params">(BinTree BST)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(BST-&gt;left) resetTag(BST-&gt;left);</span><br><span class="line">    <span class="keyword">if</span>(BST-&gt;right) resetTag(BST-&gt;right);</span><br><span class="line">    BST-&gt;tag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="function">BinTree <span class="title">newNode</span><span class="params">(<span class="keyword">int</span> data)</span> </span>&#123;</span><br><span class="line">    BinTree node = (BinTree)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(TreeNode));</span><br><span class="line">    node-&gt;data = data;</span><br><span class="line">    node-&gt;left = node-&gt;right = <span class="literal">NULL</span>;</span><br><span class="line">    node-&gt;tag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> node;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// 二叉搜索树中插入节点 </span></span><br><span class="line"><span class="function">BinTree <span class="title">insert</span><span class="params">(BinTree BST, <span class="keyword">int</span> data)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!BST) BST = newNode(data);</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(data &gt; BST-&gt;data) &#123;</span><br><span class="line">            BST-&gt;right = insert(BST-&gt;right, data);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(data &lt; BST-&gt;data) &#123;</span><br><span class="line">            BST-&gt;left = insert(BST-&gt;left, data);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> BST;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 建立二叉搜索树 </span></span><br><span class="line"><span class="function">BinTree <span class="title">buildTree</span><span class="params">(<span class="keyword">int</span> N)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> data;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;data);</span><br><span class="line">    BinTree BST = newNode(data);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;data);</span><br><span class="line">        BST = insert(BST, data);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> BST;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断当前结点是否一致</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(BinTree BST, ElementType data)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(BST-&gt;tag) &#123;</span><br><span class="line">        <span class="keyword">if</span>(data &lt; BST-&gt;data) <span class="keyword">return</span> check(BST-&gt;left, data);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(data &gt; BST-&gt;data) <span class="keyword">return</span> check(BST-&gt;right, data);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(data == BST-&gt;data) &#123;</span><br><span class="line">            BST-&gt;tag = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断序列是否同为一棵二叉搜索树 </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">judge</span><span class="params">(BinTree BST, <span class="keyword">int</span> N)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> data, flag = <span class="number">1</span>; <span class="comment">// flag=1表示目前一致 </span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;data);</span><br><span class="line">    <span class="keyword">if</span>(data != BST-&gt;data) flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> BST-&gt;tag = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;data);</span><br><span class="line">        <span class="keyword">if</span>(flag == <span class="number">1</span> &amp;&amp; !check(BST, data)) flag = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(flag == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N,L;</span><br><span class="line">    BinTree BST;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"BSTree.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">    <span class="keyword">while</span>(N) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;L);</span><br><span class="line">        BST = buildTree(N);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; L; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(judge(BST, N)) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            resetTag(BST);</span><br><span class="line">        &#125;</span><br><span class="line">        freeTree(BST);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-Root-of-AVL-Tree"><a href="#2-Root-of-AVL-Tree" class="headerlink" title="2.Root of AVL Tree"></a>2.Root of AVL Tree</h1><p>Problem<br>An AVL tree is a self-balancing binary search tree. In an AVL tree, the heights of the two child subtrees of any node differ by at most one; if at any time they differ by more than one, rebalancing is done to restore this property. Figures 1-4 illustrate the rotation rules.<a href="https://pta.patest.cn/pta/test/16/exam/4/question/668" target="_blank" rel="external">详细描述</a></p><p>Property</p><ol><li>旋转:被破坏节点与破坏结点的路径决定是什么类型的旋转(LL,RR,LR,RL),然后关注从被破坏结点开始(包括被破坏节点)的三个结点如何调整，旋转的根节点一定是这三者中中间大的那个。</li><li>设N(h)高度为h的平衡二叉树的最少结点数，则有 N(h) = N(h-1) + N(h-2) + 1</li></ol><p>Analysis<br>实质是构建一棵平衡二叉树得过程，如果平衡被破坏则通过旋转重新使得树平衡。</p><p>Code</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElementType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">AVLNode</span>* <span class="title">AVLTree</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">AVLNode</span> &#123;</span></span><br><span class="line">    ElementType value;</span><br><span class="line">    <span class="keyword">int</span> height;</span><br><span class="line">    AVLTree left;</span><br><span class="line">    AVLTree right;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getHeight</span><span class="params">(AVLTree T)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function">AVLTree <span class="title">LLRotate</span><span class="params">(AVLTree root)</span></span>;</span><br><span class="line"><span class="function">AVLTree <span class="title">RRRotate</span><span class="params">(AVLTree root)</span></span>;</span><br><span class="line"><span class="function">AVLTree <span class="title">LRRotate</span><span class="params">(AVLTree root)</span></span>;</span><br><span class="line"><span class="function">AVLTree <span class="title">RLRotate</span><span class="params">(AVLTree root)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function">AVLTree <span class="title">insert</span><span class="params">(AVLTree T, ElementType val)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//------------------------------</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a &gt; b ? a : b;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">        </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getHeight</span><span class="params">(AVLTree T)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(T == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> T-&gt;height;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">AVLTree <span class="title">LLRotate</span><span class="params">(AVLTree root)</span> </span>&#123;</span><br><span class="line">    AVLTree newRoot = root-&gt;left;  </span><br><span class="line">    root-&gt;left = newRoot-&gt;right;</span><br><span class="line">    newRoot-&gt;right = root;</span><br><span class="line">    </span><br><span class="line">    root-&gt;height = max(getHeight(root-&gt;left), getHeight(root-&gt;right))+<span class="number">1</span>;</span><br><span class="line">    newRoot-&gt;height = max(getHeight(newRoot-&gt;left), getHeight(newRoot-&gt;right))+<span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> newRoot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">AVLTree <span class="title">RRRotate</span><span class="params">(AVLTree root)</span> </span>&#123;</span><br><span class="line">    AVLTree newRoot = root-&gt;right; </span><br><span class="line">    root-&gt;right = newRoot-&gt;left;</span><br><span class="line">    newRoot-&gt;left = root;</span><br><span class="line">    </span><br><span class="line">    root-&gt;height = max(getHeight(root-&gt;left), getHeight(root-&gt;right))+<span class="number">1</span>;</span><br><span class="line">    newRoot-&gt;height = max(getHeight(newRoot-&gt;left), getHeight(newRoot-&gt;right))+<span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> newRoot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">AVLTree <span class="title">LRRotate</span><span class="params">(AVLTree root)</span> </span>&#123;</span><br><span class="line">     root-&gt;left = RRRotate(root-&gt;left);</span><br><span class="line">     <span class="keyword">return</span> LLRotate(root);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">AVLTree <span class="title">RLRotate</span><span class="params">(AVLTree root)</span> </span>&#123;</span><br><span class="line">    root-&gt;right = LLRotate(root-&gt;right);</span><br><span class="line">    <span class="keyword">return</span> RRRotate(root);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// insert node and rebalanced</span></span><br><span class="line"><span class="function">AVLTree <span class="title">insert</span><span class="params">(AVLTree T, ElementType val)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(T == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        T = (AVLTree)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct AVLNode));</span><br><span class="line">        T-&gt;value = val;</span><br><span class="line">        T-&gt;height = <span class="number">0</span>;</span><br><span class="line">        T-&gt;left = <span class="literal">NULL</span>;</span><br><span class="line">        T-&gt;right = <span class="literal">NULL</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(val &lt; T-&gt;value) &#123;</span><br><span class="line">            T-&gt;left = insert(T-&gt;left, val);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// check this tree is balanced or not</span></span><br><span class="line">            <span class="keyword">if</span>(getHeight(T-&gt;left) - getHeight(T-&gt;right) == <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(val &lt; T-&gt;left-&gt;value) &#123;</span><br><span class="line">                    T = LLRotate(T);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    T = LRRotate(T);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(val &gt; T-&gt;value) &#123;</span><br><span class="line">            T-&gt;right = insert(T-&gt;right, val);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(getHeight(T-&gt;left) - getHeight(T-&gt;right) == <span class="number">-2</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(val &gt; T-&gt;right-&gt;value) &#123;</span><br><span class="line">                    T = RRRotate(T);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    T = RLRotate(T);</span><br><span class="line">                &#125;   </span><br><span class="line">            &#125; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    T-&gt;height = max(getHeight(T-&gt;left), getHeight(T-&gt;right))+<span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> T;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num,val; </span><br><span class="line">    AVLTree T=<span class="literal">NULL</span>; <span class="comment">// must be NULL else error</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"BBTree.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// read node num</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d\n"</span>, &amp;num);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// loop build the balanced binary tree and get root</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;val);</span><br><span class="line">        T = insert(T, val);</span><br><span class="line">        <span class="comment">//printf("%d ", val); </span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, T-&gt;value);</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考资料：<br><a href="http://blog.csdn.net/bobo1356/article/details/71377390" target="_blank" rel="external">1.AVL树的构建</a><br><a href="http://lib.csdn.net/article/datastructure/56300" target="_blank" rel="external">2.AVL平衡二叉树</a></p><h1 id="3-Complete-Binary-Search-Tree"><a href="#3-Complete-Binary-Search-Tree" class="headerlink" title="3.Complete Binary Search Tree"></a>3.Complete Binary Search Tree</h1><p>Problem<br>给出构成一棵树的序列，已知该树为完全二叉搜索树的序列，求层次遍历顺序。<a href="https://pta.patest.cn/pta/test/16/exam/4/question/669" target="_blank" rel="external">详细描述</a></p><p>Analysis</p><ol><li>对于二叉搜索树，中序遍历为从小到大的序列，那么问题可以转化为已知中序求层次遍历顺序。</li><li>建树过程根据中序遍历建树，则为建立左子树，构造根，建立右子树。与中序遍历LVR有异曲同工之妙。</li><li>层次遍历输出对于数组存储的二叉查找树来说，即遍历顺序。</li></ol><p>Code</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MaxSize = <span class="number">1001</span>;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="keyword">int</span> in[MaxSize], tree[MaxSize]; </span><br><span class="line"><span class="keyword">int</span> index = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">buildTree</span><span class="params">(<span class="keyword">int</span> root)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(root &gt; N) <span class="keyword">return</span> ; </span><br><span class="line">    <span class="keyword">int</span> leftIndex = root*<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">int</span> rightIndex = leftIndex+<span class="number">1</span>;</span><br><span class="line">    buildTree(leftIndex);</span><br><span class="line">    tree[root] = in[index++];</span><br><span class="line">    buildTree(rightIndex);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对于数组存储的二叉树，顺序输出即 层次遍历结果 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">levelOrderTraversal</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;tree[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= N; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>&lt;&lt;tree[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"CBSTree.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;in[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 排序得到中序遍历结果 </span></span><br><span class="line">    sort(in+<span class="number">1</span>, in+N+<span class="number">1</span>);</span><br><span class="line">    <span class="comment">// 根据中序遍历构建完全二插搜索树</span></span><br><span class="line">    buildTree(<span class="number">1</span>); </span><br><span class="line">    levelOrderTraversal();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4-二叉搜索树的操作集"><a href="#4-二叉搜索树的操作集" class="headerlink" title="4.二叉搜索树的操作集"></a>4.二叉搜索树的操作集</h1><p>Problem<br>本题要求实现给定二叉搜索树的5种常用操作。<a href="https://pta.patest.cn/pta/test/15/exam/3/question/927" target="_blank" rel="external">详细描述</a></p><p>Analysis<br>考察二叉搜索树的基本操作，递归版本和非递归版本都要掌握，其中删除结点需要重点掌握。</p><p>Code</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElementType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">TNode</span>* <span class="title">Position</span>;</span></span><br><span class="line"><span class="keyword">typedef</span> Position BinTree;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">TNode</span>&#123;</span></span><br><span class="line">    ElementType Data;</span><br><span class="line">    BinTree Left;</span><br><span class="line">    BinTree Right;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PreorderTraversal</span><span class="params">( BinTree BT )</span></span>; <span class="comment">/* 先序遍历，由裁判实现，细节不表 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InorderTraversal</span><span class="params">( BinTree BT )</span></span>;  <span class="comment">/* 中序遍历，由裁判实现，细节不表 */</span></span><br><span class="line"></span><br><span class="line"><span class="function">BinTree <span class="title">Insert</span><span class="params">( BinTree BST, ElementType X )</span></span>;</span><br><span class="line"><span class="function">BinTree <span class="title">Delete</span><span class="params">( BinTree BST, ElementType X )</span></span>;</span><br><span class="line"><span class="function">Position <span class="title">Find</span><span class="params">( BinTree BST, ElementType X )</span></span>;</span><br><span class="line"><span class="function">Position <span class="title">FindMin</span><span class="params">( BinTree BST )</span></span>;</span><br><span class="line"><span class="function">Position <span class="title">FindMax</span><span class="params">( BinTree BST )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    BinTree BST, MinP, MaxP, Tmp;</span><br><span class="line">    ElementType X;</span><br><span class="line">    <span class="keyword">int</span> N, i;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">#<span class="meta-keyword">ifndef</span></span></span><br><span class="line">    freopen(<span class="string">"BSTreeOpre.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    BST = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">    <span class="keyword">for</span> ( i=<span class="number">0</span>; i&lt;N; i++ ) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;X);</span><br><span class="line">        BST = Insert(BST, X);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Preorder:"</span>); PreorderTraversal(BST); <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    MinP = FindMin(BST);</span><br><span class="line">    MaxP = FindMax(BST);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">    <span class="keyword">for</span>( i=<span class="number">0</span>; i&lt;N; i++ ) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;X);</span><br><span class="line">        Tmp = Find(BST, X);</span><br><span class="line">        <span class="keyword">if</span> (Tmp == <span class="literal">NULL</span>) <span class="built_in">printf</span>(<span class="string">"%d is not found\n"</span>, X);</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d is found\n"</span>, Tmp-&gt;Data);</span><br><span class="line">            <span class="keyword">if</span> (Tmp==MinP) <span class="built_in">printf</span>(<span class="string">"%d is the smallest key\n"</span>, Tmp-&gt;Data);</span><br><span class="line">            <span class="keyword">if</span> (Tmp==MaxP) <span class="built_in">printf</span>(<span class="string">"%d is the largest key\n"</span>, Tmp-&gt;Data);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">    <span class="keyword">for</span>( i=<span class="number">0</span>; i&lt;N; i++ ) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;X);</span><br><span class="line">        BST = Delete(BST, X);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Inorder:"</span>); InorderTraversal(BST); <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//-----------------------------------------------------</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PreorderTraversal</span><span class="params">(BinTree BT)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(BT) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, BT-&gt;Data);</span><br><span class="line">        PreorderTraversal(BT-&gt;Left);</span><br><span class="line">        PreorderTraversal(BT-&gt;Right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InorderTraversal</span><span class="params">(BinTree BT)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(BT) &#123;</span><br><span class="line">        InorderTraversal(BT-&gt;Left);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, BT-&gt;Data);</span><br><span class="line">        InorderTraversal(BT-&gt;Right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BinTree <span class="title">Insert</span><span class="params">( BinTree BST, ElementType X )</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(BST == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        BST = (BinTree)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct TNode));</span><br><span class="line">        BST-&gt;Data = X;</span><br><span class="line">        BST-&gt;Left = BST-&gt;Right = <span class="literal">NULL</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(X &lt; BST-&gt;Data) &#123;</span><br><span class="line">            BST-&gt;Left = Insert(BST-&gt;Left, X);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(X &gt; BST-&gt;Data) &#123;</span><br><span class="line">            BST-&gt;Right = Insert(BST-&gt;Right, X);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> BST;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BinTree <span class="title">Delete</span><span class="params">( BinTree BST, ElementType X )</span> </span>&#123;</span><br><span class="line">    Position tmp;</span><br><span class="line">    <span class="keyword">if</span>(BST == <span class="literal">NULL</span>) &#123; </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Not Found\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(X &lt; BST-&gt;Data) &#123;</span><br><span class="line">        BST-&gt;Left = Delete(BST-&gt;Left, X); </span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(X &gt; BST-&gt;Data) &#123;</span><br><span class="line">        BST-&gt;Right = Delete(BST-&gt;Right, X);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(BST-&gt;Left &amp;&amp; BST-&gt;Right) &#123;</span><br><span class="line">            tmp = FindMin(BST-&gt;Right);</span><br><span class="line">            BST-&gt;Data = tmp-&gt;Data;</span><br><span class="line">            BST-&gt;Right = Delete(BST-&gt;Right, BST-&gt;Data);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            tmp = BST;</span><br><span class="line">            <span class="keyword">if</span>(!BST-&gt;Left) &#123;</span><br><span class="line">                BST = BST-&gt;Right;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(!BST-&gt;Right) &#123;</span><br><span class="line">                BST = BST-&gt;Left;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">free</span>(tmp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> BST;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Position <span class="title">Find</span><span class="params">( BinTree BST, ElementType X )</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(BST == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    Position T = BST;</span><br><span class="line">    <span class="keyword">if</span>(X &lt; T-&gt;Data) T = Find(T-&gt;Left, X);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(X &gt; T-&gt;Data) T = Find(T-&gt;Right, X);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> T;   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Position <span class="title">FindMin</span><span class="params">( BinTree BST )</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(BST == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    Position T = BST;</span><br><span class="line">    <span class="keyword">while</span>(T-&gt;Left) &#123;</span><br><span class="line">        T = T-&gt;Left;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> T;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Position <span class="title">FindMax</span><span class="params">( BinTree BST )</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(BST == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    Position T = BST;</span><br><span class="line">    <span class="keyword">while</span>(T-&gt;Right) &#123;</span><br><span class="line">        T = T-&gt;Right;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> T;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;\assets\js\APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;PTA算法刷题笔记，针对二叉树的练习题，题目如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;是否同一棵二叉搜索树&lt;/li&gt;
&lt;li&gt;Root of AVL Tree&lt;/li&gt;
&lt;li&gt;Complete Binary Search Tree&lt;/li&gt;
&lt;li&gt;二叉搜索树的操作集&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="编程开发" scheme="http://blog.tsukasa.moe/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="数据结构与算法" scheme="http://blog.tsukasa.moe/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
      <category term="PTA" scheme="http://blog.tsukasa.moe/tags/PTA/"/>
    
  </entry>
  
  <entry>
    <title>算法刷题笔记四之二叉树上篇</title>
    <link href="http://blog.tsukasa.moe/2017/06/04/pta-algorithm-practice-04-binary-tree/"/>
    <id>http://blog.tsukasa.moe/2017/06/04/pta-algorithm-practice-04-binary-tree/</id>
    <published>2017-06-04T09:28:16.000Z</published>
    <updated>2019-03-10T17:11:20.906Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><h1 id="1-树的同构"><a href="#1-树的同构" class="headerlink" title="1.树的同构"></a>1.树的同构</h1><p>Problem<br>判断给定两棵树T1和T2是否同构。<a href="https://pta.patest.cn/pta/test/15/exam/4/question/711" target="_blank" rel="external">详细描述</a></p><p>Analysys</p><ol><li>构建树的结构体数组表示，下标指向左右儿子的所在位置。</li><li>确定树根，用一个check数组保存当前节点有没有被指向，没有被指向的节点为根节点。</li><li>判断一棵树是否同构，三种情况：两棵树是否有空树，返回两者是否都为空的并集；两棵树当前节点元素值不同，不同构返回false；否则，树T1，T2的左子树 &amp;&amp; T1，T2的右子树是否同时同构或者T1左子树 || T2右子树 &amp;&amp; T1左子树，T2右子树是否同时同构。根据上述条件递归调用进行判断。</li></ol><p>Code</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MaxTree 10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ElementType char</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Tree int</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Null -1</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">TreeNode</span>&#123;</span></span><br><span class="line">    ElementType data;</span><br><span class="line">    Tree left;</span><br><span class="line">    Tree right; </span><br><span class="line">&#125;T1[MaxTree], T2[MaxTree];</span><br><span class="line"></span><br><span class="line"><span class="function">Tree <span class="title">buildTree</span><span class="params">(TreeNode T[])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N;</span><br><span class="line">    ElementType cl, cr, root;</span><br><span class="line">    <span class="keyword">int</span> check[MaxTree];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d\n"</span>, &amp;N);</span><br><span class="line">    <span class="keyword">if</span>(N) &#123;</span><br><span class="line">        <span class="comment">// 初始化每个节点，设没有被指向时值为0 </span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) check[i] = <span class="number">0</span>; </span><br><span class="line">        <span class="comment">// 建树 </span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%c %c %c\n"</span>, &amp;T[i].data, &amp;cl, &amp;cr);</span><br><span class="line">            <span class="comment">// 对左子树处理 </span></span><br><span class="line">            <span class="keyword">if</span>(cl != <span class="string">'-'</span>) &#123;</span><br><span class="line">                T[i].left = cl - <span class="string">'0'</span>;</span><br><span class="line">                check[T[i].left] = <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                T[i].left = Null;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 对右子树处理</span></span><br><span class="line">            <span class="keyword">if</span>(cr != <span class="string">'-'</span>) &#123;</span><br><span class="line">                T[i].right = cr - <span class="string">'0'</span>;</span><br><span class="line">                check[T[i].right] = <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                T[i].right = Null;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//printf("%c %c %c\n", T[i].data, cl, cr);</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 遍历找出没有任何节点指向的节点，则其为根节点 </span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">            <span class="comment">//printf("%d ", check[i]);</span></span><br><span class="line">            <span class="keyword">if</span>(check[i] == <span class="number">0</span>) &#123;</span><br><span class="line">                root = i;</span><br><span class="line">                <span class="keyword">break</span>; </span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        root = Null;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//printf("%d\n", root);</span></span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断是否同构</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Isomorphism</span><span class="params">(Tree R1, Tree R2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(R1 == Null || R2 == Null) &#123;</span><br><span class="line">        <span class="keyword">return</span> (R1 == Null) &amp;&amp; (R2 == Null);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (T1[R1].data != T2[R2].data)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Isomorphism(T1[R1].left, T2[R2].left) &amp;&amp; Isomorphism(T1[R1].right, T2[R2].right)</span><br><span class="line">                || Isomorphism(T1[R1].left, T2[R2].right) &amp;&amp; Isomorphism(T1[R1].right, T2[R2].left);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Tree R1, R2; </span><br><span class="line">    </span><br><span class="line">    <span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"Isomorphism.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 建立树1</span></span><br><span class="line">    R1 = buildTree(T1);</span><br><span class="line">    <span class="comment">// 建立树2</span></span><br><span class="line">    R2 = buildTree(T2);</span><br><span class="line">    <span class="comment">// 判断是否同构</span></span><br><span class="line">    <span class="keyword">if</span>(Isomorphism(R1, R2)) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-List-Leaves"><a href="#2-List-Leaves" class="headerlink" title="2.List Leaves"></a>2.List Leaves</h1><p>Problem<br>Given a tree, you are supposed to list all the leaves in the order of top down, and left to right.<a href="https://pta.patest.cn/pta/test/16/exam/4/question/666" target="_blank" rel="external">详细描述</a></p><p>Analysys</p><ol><li>叶子结点打印按照层次遍历打印，判断左右子树为空时输出叶子节点。</li><li>树的问题可考虑数组还是链表两种存储方式，然后基于遍历和堆栈以及队列以及条件对树进行相关操作。</li></ol><p>Code</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MaxSize 10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> ElementType; </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">TreeNode</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> left;</span><br><span class="line">    <span class="keyword">int</span> right;  </span><br><span class="line">&#125;Tr[MaxSize];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 建树，返回根节点</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">builTree</span><span class="params">(TreeNode T[])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N; </span><br><span class="line">    <span class="keyword">char</span> cl, cr;</span><br><span class="line">    <span class="keyword">int</span> root;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d\n"</span>, &amp;N);</span><br><span class="line">    <span class="keyword">int</span> check[N];</span><br><span class="line">    <span class="keyword">if</span>(N) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">            check[i] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%c %c\n"</span>, &amp;cl, &amp;cr);</span><br><span class="line">            <span class="comment">//printf("%c %c\n", cl, cr);</span></span><br><span class="line">            <span class="keyword">if</span>(cl != <span class="string">'-'</span>) &#123;</span><br><span class="line">                T[i].left = cl - <span class="string">'0'</span>;</span><br><span class="line">                check[T[i].left] = <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                T[i].left = <span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">    </span><br><span class="line">            <span class="keyword">if</span>(cr != <span class="string">'-'</span>) &#123;</span><br><span class="line">                T[i].right = cr - <span class="string">'0'</span>;</span><br><span class="line">                check[T[i].right] = <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                T[i].right = <span class="number">-1</span>;</span><br><span class="line">            &#125;   </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(check[i] == <span class="number">0</span>) &#123;</span><br><span class="line">                root = i;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        root = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 层次遍历输出叶子节点 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">levelOrderTraversal</span><span class="params">(<span class="keyword">int</span> root)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(root == <span class="number">-1</span>) <span class="keyword">return</span> ; </span><br><span class="line">    <span class="keyword">int</span> current;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line">    Q.push(root);</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">while</span>(!Q.empty()) &#123;</span><br><span class="line">        current = Q.front();</span><br><span class="line">        Q.pop();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(Tr[current].left == <span class="number">-1</span> &amp;&amp; Tr[current].right == <span class="number">-1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(flag) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d"</span>, current);  </span><br><span class="line">                flag = <span class="literal">false</span>;   </span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">" %d"</span>, current); </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(Tr[current].left != <span class="number">-1</span>) Q.push(Tr[current].left);</span><br><span class="line">        <span class="keyword">if</span>(Tr[current].right != <span class="number">-1</span>) Q.push(Tr[current].right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"ListLeaves.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> root = builTree(Tr);</span><br><span class="line">    levelOrderTraversal(root);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-Tree-Traversals-Again"><a href="#3-Tree-Traversals-Again" class="headerlink" title="3.Tree Traversals Again"></a>3.Tree Traversals Again</h1><p>Problem<br>给出中序遍历的递归实现，求出后序遍历结果。<a href="https://pta.patest.cn/pta/test/16/exam/4/question/667" target="_blank" rel="external">详细描述</a></p><p>Analysys</p><ol><li>观察给出示例，递归版中序遍历的入栈操作即前序遍历结果，出栈顺序即中序遍历结果，可以将问题转化为已知先序、中序，构造树求后序。</li><li>先序、中序已知，如何构建树呢？首先由前序确定树根为pre[startPre]在中序序列的位置i，然后递归构造做右子树。</li></ol><p><img src="http://static.tsukasa.moe/images/post-images/2017/06/pre-in-find-postOrder.jpg" alt=""></p><p>Code</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TreeNode</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    TreeNode left;</span><br><span class="line">    TreeNode right;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TreeNode</span><span class="params">(<span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line">        val = v;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> MAXSIZE = <span class="number">31</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] pre = <span class="keyword">new</span> <span class="keyword">int</span>[MAXSIZE];</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] in = <span class="keyword">new</span> <span class="keyword">int</span>[MAXSIZE];</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> TreeNode <span class="title">reConstructBinaryTree</span><span class="params">(<span class="keyword">int</span>[] pre, <span class="keyword">int</span>[] in, <span class="keyword">int</span> length)</span> </span>&#123;</span><br><span class="line">        TreeNode root = reBuildBinTree(pre, <span class="number">1</span>, length, in, <span class="number">1</span>, length);</span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> TreeNode <span class="title">reBuildBinTree</span><span class="params">(<span class="keyword">int</span>[] pre, <span class="keyword">int</span> startPre, <span class="keyword">int</span> endPre, <span class="keyword">int</span>[] in, <span class="keyword">int</span> startIn, <span class="keyword">int</span> endIn)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (startPre &gt; endPre || startIn &gt; endIn) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        TreeNode root = <span class="keyword">new</span> TreeNode(pre[startPre]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = startIn; i &lt;= endIn; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (in[i] == pre[startPre]) &#123;</span><br><span class="line">                root.left = reBuildBinTree(pre, startPre + <span class="number">1</span>, startPre + i - startIn, in, startIn, i - <span class="number">1</span>);</span><br><span class="line">                root.right = reBuildBinTree(pre, startPre + <span class="number">1</span> + i - startIn, endPre, in, i + <span class="number">1</span>, endIn);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">postOrderTraversal</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root != <span class="keyword">null</span>) &#123;</span><br><span class="line">            postOrderTraversal(root.left);</span><br><span class="line">            postOrderTraversal(root.right);</span><br><span class="line">            <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">                System.out.printf(<span class="string">"%d"</span>, root.val);</span><br><span class="line">                flag = <span class="keyword">false</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.printf(<span class="string">" %d"</span>, root.val);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> FileNotFoundException </span>&#123;</span><br><span class="line">        InputStream is = <span class="keyword">new</span> BufferedInputStream(<span class="keyword">new</span> FileInputStream(<span class="string">"pta.txt"</span>));</span><br><span class="line">        System.setIn(is);</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        Stack&lt;Integer&gt; stack = <span class="keyword">new</span> Stack&lt;Integer&gt;();</span><br><span class="line">        <span class="keyword">int</span> N = sc.nextInt();</span><br><span class="line">        sc.nextLine();</span><br><span class="line">        <span class="keyword">int</span> preIndex = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> inIndex = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N * <span class="number">2</span>; i++) &#123;</span><br><span class="line">            String line = sc.nextLine();</span><br><span class="line">            <span class="keyword">if</span> (line.contains(<span class="string">"Push"</span>)) &#123;</span><br><span class="line">                Integer node = Integer.parseInt(line.split(<span class="string">" "</span>)[<span class="number">1</span>]);</span><br><span class="line">                stack.push(node);</span><br><span class="line">                pre[preIndex++] = node;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; </span><br><span class="line">                <span class="keyword">if</span> (!stack.empty()) &#123;</span><br><span class="line">                    in[inIndex++] = stack.pop();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        TreeNode root = reConstructBinaryTree(pre, in, N);</span><br><span class="line">        postOrderTraversal(root);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Extension<br>如果已知后序、中序，求前序呢？思路和上题一样。</p><p>Code</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TreeNode</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    TreeNode left;</span><br><span class="line">    TreeNode right;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TreeNode</span><span class="params">(<span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line">        val = v;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> TreeNode <span class="title">reBuildBinTreePostIn</span><span class="params">(<span class="keyword">int</span>[] post, <span class="keyword">int</span> startPost, <span class="keyword">int</span> endPost, </span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="keyword">int</span>[] in, <span class="keyword">int</span> startIn, <span class="keyword">int</span> endIn)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (startPost &gt; endPost || startIn &gt; endIn) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        TreeNode root = <span class="keyword">new</span> TreeNode(post[endPost]);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = startIn; i &lt;= endIn; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (in[i] == post[endPost]) &#123;</span><br><span class="line">                root.left = reBuildBinTreePostIn(post, startPost, startPost + i - startIn-<span class="number">1</span>, in, startIn, i - <span class="number">1</span>);</span><br><span class="line">                root.right = reBuildBinTreePostIn(post, endPost - (endIn - i), endPost - <span class="number">1</span>, in, i + <span class="number">1</span>, endIn);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">preOrderTraversal</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">                System.out.printf(<span class="string">"%d"</span>, root.val);</span><br><span class="line">                flag = <span class="keyword">false</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.printf(<span class="string">" %d"</span>, root.val);</span><br><span class="line">            &#125;</span><br><span class="line">            preOrderTraversal(root.left);</span><br><span class="line">            preOrderTraversal(root.right);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> FileNotFoundException </span>&#123;</span><br><span class="line">        <span class="comment">// 读入前序遍历序列</span></span><br><span class="line">        <span class="keyword">int</span>[] pre = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">10</span>&#125;;</span><br><span class="line">        <span class="comment">// 读入中序遍历序列</span></span><br><span class="line">        <span class="keyword">int</span>[] in = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;</span><br><span class="line">        <span class="comment">// 读入后序遍历序列</span></span><br><span class="line">        <span class="keyword">int</span>[] post = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">10</span>,<span class="number">9</span>,<span class="number">7</span>&#125;;</span><br><span class="line"></span><br><span class="line">        TreeNode root = reBuildBinTreePostIn(post, <span class="number">0</span>, <span class="number">7</span>, in, <span class="number">0</span>, <span class="number">7</span>);</span><br><span class="line">        preOrderTraversal(root);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;\assets\js\APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这篇文章主要针对二叉树知识点进行考察，算法题目有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;树的同构&lt;/li&gt;
&lt;li&gt;List Leaves&lt;/li&gt;
&lt;li&gt;Tree Traversals Again&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="编程开发" scheme="http://blog.tsukasa.moe/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="数据结构与算法" scheme="http://blog.tsukasa.moe/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
      <category term="PTA" scheme="http://blog.tsukasa.moe/tags/PTA/"/>
    
  </entry>
  
  <entry>
    <title>算法刷题笔记三之线性结构篇</title>
    <link href="http://blog.tsukasa.moe/2017/06/02/pta-algorithm-pratice-notes-03-linearlist/"/>
    <id>http://blog.tsukasa.moe/2017/06/02/pta-algorithm-pratice-notes-03-linearlist/</id>
    <published>2017-06-02T15:39:45.000Z</published>
    <updated>2019-03-10T10:37:14.831Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><h1 id="1-两个有序链表序列的合并"><a href="#1-两个有序链表序列的合并" class="headerlink" title="1.两个有序链表序列的合并"></a>1.两个有序链表序列的合并</h1><p>Problem<br>已知两个非降序链表序列S1与S2，设计函数构造出S1与S2的并集新非降序链表S3。<a href="https://pta.patest.cn/pta/test/15/exam/4/question/2992" target="_blank" rel="external">详细描述</a></p><p>Analysys</p><ol><li>分三步：构造两个链表；合并链表；遍历打印。</li><li>合并链表可以新建一条新链表，根据归并排序中得merge思想，每次选择小接到新链表得尾部，然后将另一条链表剩下部分(已经有序)直接接到新链表尾部。</li><li>空表特殊情况处理。</li></ol><p>Code</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElementType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">PtrToNode</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    ElementType Data;</span><br><span class="line">    PtrToNode   Next;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> PtrToNode List;</span><br><span class="line"></span><br><span class="line"><span class="function">List <span class="title">Read</span><span class="params">()</span></span>; <span class="comment">/* 细节在此不表 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Print</span><span class="params">( List L )</span></span>; <span class="comment">/* 细节在此不表；空链表将输出NULL */</span></span><br><span class="line"></span><br><span class="line"><span class="function">List <span class="title">Merge</span><span class="params">( List L1, List L2 )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    List L1, L2, L;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"in.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    L1 = Read();</span><br><span class="line">    L2 = Read();</span><br><span class="line">    L = Merge(L1, L2);</span><br><span class="line">    Print(L);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化链表 </span></span><br><span class="line"><span class="function">List <span class="title">Read</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    List L = (List)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct Node));</span><br><span class="line">    L-&gt;Next = <span class="literal">NULL</span>;</span><br><span class="line">    PtrToNode rear = L;</span><br><span class="line">    ElementType data;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;data);</span><br><span class="line">        <span class="keyword">if</span>(data != <span class="number">-1</span>) &#123;</span><br><span class="line">            PtrToNode p = (PtrToNode)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct Node));</span><br><span class="line">            p-&gt;Data = data;</span><br><span class="line">            p-&gt;Next = <span class="literal">NULL</span>;</span><br><span class="line">            rear-&gt;Next = p;</span><br><span class="line">            rear = p;       </span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> L-&gt;Next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 归并链表</span></span><br><span class="line"><span class="function">List <span class="title">Merge</span><span class="params">( List L1, List L2 )</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(L1 == <span class="literal">NULL</span> &amp;&amp; L2 == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    List p1 = L1;</span><br><span class="line">    List p2 = L2;</span><br><span class="line">    </span><br><span class="line">    List LM = (List)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct Node));</span><br><span class="line">    LM-&gt;Next = <span class="literal">NULL</span>;</span><br><span class="line">    List rear = LM;</span><br><span class="line">    <span class="keyword">while</span>(p1 &amp;&amp; p2) &#123;</span><br><span class="line">        <span class="keyword">if</span>(p1-&gt;Data &lt; p2-&gt;Data) &#123;</span><br><span class="line">            rear-&gt;Next = p1;</span><br><span class="line">            rear = p1;</span><br><span class="line">            p1 = p1-&gt;Next;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            rear-&gt;Next = p2;</span><br><span class="line">            rear = p2;</span><br><span class="line">            p2 = p2-&gt;Next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    rear-&gt;Next = p1 ? p1 : p2;  </span><br><span class="line">    <span class="keyword">return</span> LM-&gt;Next;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Print</span><span class="params">( List L )</span></span>&#123;</span><br><span class="line">    List p = L;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(p == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"NULL"</span>);</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(p) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, p-&gt;Data);</span><br><span class="line">        p = p-&gt;Next;</span><br><span class="line">        <span class="keyword">if</span>(p!=<span class="literal">NULL</span>) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-一元多项式的乘法与加法运算"><a href="#2-一元多项式的乘法与加法运算" class="headerlink" title="2.一元多项式的乘法与加法运算"></a>2.一元多项式的乘法与加法运算</h1><p>Problem<br>设计函数分别求两个一元多项式的乘积与和。<a href="https://pta.patest.cn/pta/test/15/exam/4/question/710" target="_blank" rel="external">详细描述</a></p><p>Analysys</p><ol><li>链表保存多项式的系数和系数，设计出程序框架,根据各部分分别实现函数。</li><li>加法：新建第三条链表，根据两个链表对应每一项指数大小关系，不等时添加大的一项，相等时判断系数和是否为0，不为0又该怎么移动。最后将链表剩余部分依次拷贝出来添加到第三条链表后面。</li><li>乘法：两种思路，一种是将乘法转化加法即将P1当前项(ci,ei)乘P2多项式，再加到结果多项式中。我选用另一种方法——逐项插入，即将当前P1当前项与P2当前项相乘，找到插入位置插入多项式。</li><li>乘法需要注意的细节：保证多项式指数递减顺序；指数相同与指数不同情况；指数相同系数和是否为0.</li></ol><p>Code</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt; </span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义数据结构</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">PolyNode</span>* <span class="title">Polynomial</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PolyNode</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> ceof; <span class="comment">// 系数 </span></span><br><span class="line">    <span class="keyword">int</span> expon; <span class="comment">// 指数</span></span><br><span class="line">    Polynomial next; </span><br><span class="line">&#125; ;</span><br><span class="line"><span class="comment">// 函数声明部分;需要设计的函数 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printPoly</span><span class="params">(Polynomial P)</span> </span>;</span><br><span class="line"><span class="function">Polynomial <span class="title">readPoly</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">Polynomial <span class="title">mult</span><span class="params">(Polynomial P1, Polynomial P2)</span></span>;</span><br><span class="line"><span class="function">Polynomial <span class="title">add</span><span class="params">(Polynomial P1, Polynomial P2)</span></span>;</span><br><span class="line"><span class="comment">// 函数实现部分 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printPoly</span><span class="params">(Polynomial P)</span></span>&#123;</span><br><span class="line">    <span class="comment">// 链表为空</span></span><br><span class="line">    <span class="keyword">if</span>(P == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"0 0\n"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="comment">// 链表非空</span></span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="literal">false</span>; </span><br><span class="line">    <span class="keyword">while</span>(P)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!flag) flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d"</span>, P-&gt;ceof, P-&gt;expon);</span><br><span class="line">        P = P-&gt;next;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">attach</span><span class="params">(<span class="keyword">int</span> c, <span class="keyword">int</span> e, Polynomial* pRear)</span></span>&#123;</span><br><span class="line">    Polynomial P;</span><br><span class="line">    </span><br><span class="line">    P = (Polynomial)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(PolyNode));</span><br><span class="line">    P-&gt;ceof = c;</span><br><span class="line">    P-&gt;expon = e;</span><br><span class="line">    P-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    (*pRear)-&gt;next = P;</span><br><span class="line">    (*pRear) = P;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Polynomial <span class="title">readPoly</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    </span><br><span class="line">    Polynomial P,rear,t;</span><br><span class="line">    P = (Polynomial)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(PolyNode));</span><br><span class="line">    P-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    rear = P;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> c,e;</span><br><span class="line">    <span class="keyword">while</span>(n--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;c, &amp;e);</span><br><span class="line">        attach(c, e, &amp;rear);</span><br><span class="line">    &#125;</span><br><span class="line">    t = P; </span><br><span class="line">    P = P-&gt;next; </span><br><span class="line">    <span class="built_in">free</span>(t);</span><br><span class="line">    <span class="keyword">return</span> P;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Polynomial <span class="title">add</span><span class="params">(Polynomial P1, Polynomial P2)</span> </span>&#123;</span><br><span class="line">    Polynomial PS,p1,p2,rear,t;</span><br><span class="line">    </span><br><span class="line">    p1 = P1;p2 = P2;</span><br><span class="line">    PS = (Polynomial)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(PolyNode));</span><br><span class="line">    PS-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    rear = PS;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(p1 &amp;&amp; p2) &#123;</span><br><span class="line">        <span class="keyword">if</span>(p1-&gt;expon &gt; p2-&gt;expon) &#123;</span><br><span class="line">            attach(p1-&gt;ceof, p1-&gt;expon, &amp;rear);</span><br><span class="line">            p1 = p1-&gt;next;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(p1-&gt;expon == p2-&gt;expon) &#123;</span><br><span class="line">            <span class="keyword">if</span>(p1-&gt;ceof + p2-&gt;ceof != <span class="number">0</span>) &#123;</span><br><span class="line">                attach(p1-&gt;ceof + p2-&gt;ceof, p1-&gt;expon, &amp;rear);</span><br><span class="line">            &#125;</span><br><span class="line">            p1 = p1-&gt;next;</span><br><span class="line">            p2 = p2-&gt;next;  </span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            attach(p2-&gt;ceof, p2-&gt;expon, &amp;rear);</span><br><span class="line">            p2 = p2-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(p1) &#123;</span><br><span class="line">        attach(p1-&gt;ceof, p1-&gt;expon, &amp;rear); </span><br><span class="line">        p1 = p1-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// for(; p1; p1 = p1-&gt;next) attach(p1-&gt;ceof, p1-&gt;expon, &amp;rear);</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(p2) &#123;</span><br><span class="line">        attach(p2-&gt;ceof, p2-&gt;expon, &amp;rear); </span><br><span class="line">        p2 = p2-&gt;next;  </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    rear-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    t = PS;</span><br><span class="line">    PS = PS-&gt;next;</span><br><span class="line">    <span class="built_in">free</span>(t);</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> PS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Polynomial <span class="title">mult</span><span class="params">(Polynomial P1, Polynomial P2)</span> </span>&#123;</span><br><span class="line">    Polynomial p1,p2,PP,rear, t;</span><br><span class="line">    <span class="keyword">int</span> c,e;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(!P1 || !P2) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    PP = (Polynomial)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(PolyNode));</span><br><span class="line">    PP-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    p1 = P1;</span><br><span class="line">    p2 = P2;</span><br><span class="line">    rear = PP;</span><br><span class="line">    <span class="comment">// p1乘p2</span></span><br><span class="line">    <span class="keyword">while</span>(p2) &#123;</span><br><span class="line">        attach(p1-&gt;ceof*p2-&gt;ceof,p1-&gt;expon+p2-&gt;expon,&amp;rear);</span><br><span class="line">        p2 = p2-&gt;next;</span><br><span class="line">    &#125; </span><br><span class="line">    </span><br><span class="line">    p1 = p1-&gt;next; <span class="comment">// 从第二项开始 </span></span><br><span class="line">    <span class="comment">// 逐项插入 </span></span><br><span class="line">    <span class="keyword">while</span>(p1) &#123;</span><br><span class="line">        <span class="comment">// p2每次初始化为多项式2得头，rear为新链表的头，插入删除操作都在PP链表(有一个空的节点)中进行 </span></span><br><span class="line">        p2 = P2;</span><br><span class="line">        rear = PP;</span><br><span class="line">        <span class="keyword">while</span>(p2) &#123;</span><br><span class="line">            c = p1-&gt;ceof*p2-&gt;ceof;</span><br><span class="line">            e = p1-&gt;expon+p2-&gt;expon;</span><br><span class="line">            <span class="keyword">while</span>(rear-&gt;next &amp;&amp; rear-&gt;next-&gt;expon &gt; e)&#123; <span class="comment">// 找到插入位置 </span></span><br><span class="line">                rear = rear-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(rear-&gt;next &amp;&amp; rear-&gt;next-&gt;expon == e)&#123; <span class="comment">// 当前指数次数相同，合并 </span></span><br><span class="line">                <span class="keyword">if</span>(rear-&gt;next-&gt;ceof+c != <span class="number">0</span>)&#123; <span class="comment">// 和不为0  </span></span><br><span class="line">                    rear-&gt;next-&gt;ceof += c;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123; <span class="comment">// 和为0 </span></span><br><span class="line">                    t = rear-&gt;next;</span><br><span class="line">                    rear-&gt;next = t-&gt;next;</span><br><span class="line">                    <span class="built_in">free</span>(t);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; <span class="comment">// 当前指数不相同，后插 </span></span><br><span class="line">                t = (Polynomial)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(PolyNode));</span><br><span class="line">                t-&gt;ceof = c;</span><br><span class="line">                t-&gt;expon = e;</span><br><span class="line">                </span><br><span class="line">                t-&gt;next = rear-&gt;next;</span><br><span class="line">                rear-&gt;next = t;</span><br><span class="line">                rear = rear-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">            p2 = p2-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        p1 = p1-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    p2 = PP;</span><br><span class="line">    PP = PP-&gt;next;</span><br><span class="line">    <span class="built_in">free</span>(p2);</span><br><span class="line">    <span class="keyword">return</span> PP;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 主函数入口</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Polynomial P1,P2,PP,PS; </span><br><span class="line">    </span><br><span class="line">    <span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"Polymial.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 读入多项式1</span></span><br><span class="line">    P1 = readPoly();</span><br><span class="line">    <span class="comment">// 读入多项式2</span></span><br><span class="line">    P2 = readPoly();</span><br><span class="line">    <span class="comment">// 乘法运算并输出</span></span><br><span class="line">    PP = mult(P1, P2);</span><br><span class="line">    printPoly(PP);</span><br><span class="line">    <span class="comment">// 加法运算并输出 </span></span><br><span class="line">    PS = add(P1, P2);</span><br><span class="line">    printPoly(PS);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-Pop-Sequence"><a href="#3-Pop-Sequence" class="headerlink" title="3.Pop Sequence"></a>3.Pop Sequence</h1><p>Problem<br>Given a stack which can keep M numbers at most. Push N numbers in the order of 1, 2, 3, …, N and pop randomly. You are supposed to tell if a given sequence of numbers is a possible pop sequence of the stack. <a href="https://pta.patest.cn/pta/test/16/exam/4/question/665" target="_blank" rel="external">详细描述</a></p><p>Analysys</p><ol><li>假设当前元素出栈，则比它小的元素都要入栈，这些元素什么时候出栈我们不管。当栈顶元素等于序列当前元素时，出栈，不等证明该序列不是出栈序列.</li><li>序列元素后移，重复此操作。</li></ol><p>Code</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1001</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> seq[], <span class="keyword">int</span> M, <span class="keyword">int</span> N)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; stack1;</span><br><span class="line">    stack1.push(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(index &lt;= N)&#123;</span><br><span class="line">        <span class="keyword">while</span>(seq[index] &gt; stack1.top() &amp;&amp; stack1.size() &lt;= M)&#123;</span><br><span class="line">            stack1.push(num++);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(seq[index] == stack1.top())&#123;</span><br><span class="line">            stack1.pop();</span><br><span class="line">            index++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> M, N, K;</span><br><span class="line">    <span class="keyword">int</span> seq[MAXN];</span><br><span class="line">    </span><br><span class="line">    <span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"PopSequence.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;M, &amp;N, &amp;K); </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(K--) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;seq[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(check(seq, M, N)) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);    </span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;\assets\js\APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;PTA算法刷题笔记三，主要是针对线性结构运用进行考察，题目包括了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;两个有序链表序列的合并&lt;/li&gt;
&lt;li&gt;一元多项式的乘法与加法运算&lt;/li&gt;
&lt;li&gt;Pop Sequence&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="编程开发" scheme="http://blog.tsukasa.moe/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="数据结构与算法" scheme="http://blog.tsukasa.moe/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
      <category term="PTA" scheme="http://blog.tsukasa.moe/tags/PTA/"/>
    
  </entry>
  
  <entry>
    <title>设计模式篇之工厂三个妹子不可能这么可爱系列</title>
    <link href="http://blog.tsukasa.moe/2017/05/31/design-pattern-factory/"/>
    <id>http://blog.tsukasa.moe/2017/05/31/design-pattern-factory/</id>
    <published>2017-05-31T02:33:11.000Z</published>
    <updated>2019-03-10T17:11:20.813Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><h1 id="简单工厂模式-Simple-Factory-Pattern"><a href="#简单工厂模式-Simple-Factory-Pattern" class="headerlink" title="简单工厂模式(Simple Factory Pattern)"></a>简单工厂模式(Simple Factory Pattern)</h1><p>简单工厂模式不属于GoF 23种设计模式，学习入门用。它通过定义一个工厂类，根据不同参数返回不同实例，被创建的实例都具有共同的父类。因简单工厂模式创建实例的方法属于静态方法，故也称静态工厂方法模式。属于创建型模式。</p><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><p>只要传入一个正确的参数，就能获取需要的对象，而无需了解创建细节。但是在扩展功能的时候，需要对工厂类进行改写，破坏了开-闭原则。故一般不用，可以借鉴其思想改善设计。</p><p>下面是大话数据结构中计算器的简单工厂模式UML表示图<br><img src="http://static.tsukasa.moe/images/post-images/2017/05/uml-simplefactory-demo.jpg" alt=""></p><p><a href="https://github.com/solano-yume/DesignPatternDemo/tree/master/out/production/DesignPattern/simplefactory/demo" target="_blank" rel="external">code</a></p><h1 id="工厂方法模式-Factory-Method-Pattern"><a href="#工厂方法模式-Factory-Method-Pattern" class="headerlink" title="工厂方法模式(Factory Method Pattern)"></a>工厂方法模式(Factory Method Pattern)</h1><h4 id="模式定义"><a href="#模式定义" class="headerlink" title="模式定义"></a>模式定义</h4><p>定义一个用于创建对象的接口，让子类决定实例化哪一个类，工厂方法模式使得一个类的实例化延迟到子类。与简单工厂模式相比是引入了抽象工厂角色。</p><p>具体工厂对象的获取：将具体工厂类的类名存储在配置文件（如XML文件）中，通过读取配置文件获取类名字符串，再使用Java的反射机制，根据类名字符串生成对象。Java反射机制与配置文件读取技术的运用使得系统更灵活。<br><img src="http://static.tsukasa.moe/images/post-images/2017/05/uml-factorymethod-origin.jpg" alt=""></p><h4 id="模式优点"><a href="#模式优点" class="headerlink" title="模式优点"></a>模式优点</h4><p>用户只需关心所需产品对应的工厂，无需关心创建细节。<br>系统假如新产品时，只需添加一个具体工厂和具体产品即可，符合开闭原则。</p><h4 id="模式缺点"><a href="#模式缺点" class="headerlink" title="模式缺点"></a>模式缺点</h4><p>每次增加一个产品时，都需要增加一个具体类和对象实现工厂，使得系统中类的个数成倍增加。实现时可能需要用到DOM、反射等技术，一定程度上增加了系统复杂度。</p><h4 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h4><p>客户端不知道它所需要的对象的类，只需知道对应工厂即可，抽象子类通过子类指定创建哪个对象。</p><h1 id="抽象工厂模式-Abstract-Factory-Pattern"><a href="#抽象工厂模式-Abstract-Factory-Pattern" class="headerlink" title="抽象工厂模式(Abstract Factory Pattern)"></a>抽象工厂模式(Abstract Factory Pattern)</h1><h4 id="模式定义-1"><a href="#模式定义-1" class="headerlink" title="模式定义"></a>模式定义</h4><p>提供一个创建一系列或相互依赖对象的接口，无需指定它们具体的类。主要解决接口选择的问题。围绕工厂与产品，抽象的工厂和抽象的产品提供统一的接口，具体的工厂创建具体的产品，增加产品需要确定抽象产品类，具体工厂类，<br><img src="http://static.tsukasa.moe/images/post-images/2017/05/uml-abstractfactory-origin.jpg" alt=""></p><p><a href="https://github.com/solano-yume/DesignPatternDemo/tree/master/src/abstractfactory/origin" target="_blank" rel="external">code</a></p><p>产品等级结构：抽象产品与具体产品构成产品等级结构，即继承结构<br>产品族：同一个工厂生产的，位于不同产品等级结构的一组产品</p><h4 id="模式特点"><a href="#模式特点" class="headerlink" title="模式特点"></a>模式特点</h4><p>抽象工厂的开闭原则具有“倾斜性”：</p><ul><li>增加产品族：对于增加新的产品族，抽象工厂模式很好地支持了“开闭原则”，只需要增加具体产品并对应增加一个新的具体工厂，对已有代码无须做任何修改。</li><li>增加新的产品等级结构：对于增加新的产品等级结构，需要修改所有的工厂角色，包括抽象工厂类，在所有的工厂类中都需要增加生产新产品的方法，违背了“开闭原则”。因此扩展产品族困难。</li></ul><h4 id="适用场景-1"><a href="#适用场景-1" class="headerlink" title="适用场景"></a>适用场景</h4><p>一个系统不应当依赖于产品类实例如何被创建、组合和表达的细节，用户无需关心创建的过程，将对象的创建和适用解耦。<br>产品等级结构稳定，每次使用一种产品族。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>抽象工厂模式隔离了具体类的生成，同一个具体工厂生产的对象属于同一个产品族，能够保证客户端始终适用同一个产品族中的对象，如qq不同风格的皮肤，Java的AWT设计。<br>抽象工厂模式增加产品族方便，增加新的产品结构需要进行大量修改且繁琐。</p><p>对switch或if，考虑用反射技术去除，解除分支判断带来的耦合。</p><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;\assets\js\APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;本文是针对设计模式中简单工厂模式，工厂方法模式，抽象工厂模式的学习笔记总结。&lt;/p&gt;
    
    </summary>
    
      <category term="编程开发" scheme="http://blog.tsukasa.moe/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="设计模式" scheme="http://blog.tsukasa.moe/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
</feed>
