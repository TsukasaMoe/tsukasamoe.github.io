<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tsukasa の 部屋</title>
  
  <subtitle>本当に萌え萌えだぜ</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.tsukasa.moe/"/>
  <updated>2023-09-25T06:45:55.784Z</updated>
  <id>http://blog.tsukasa.moe/</id>
  
  <author>
    <name>Tsukasa</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Redis系列-Window和Linux安装配置Redis</title>
    <link href="http://blog.tsukasa.moe/2023/09/24/Redis%E7%B3%BB%E5%88%97-Windows%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AERedis/"/>
    <id>http://blog.tsukasa.moe/2023/09/24/Redis系列-Windows安装配置Redis/</id>
    <published>2023-09-24T13:33:56.000Z</published>
    <updated>2023-09-25T06:45:55.784Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><!-- toc --><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Redis是分布式缓存数据库，这篇文章记录下Windows 10和Centos 7下Redis的安装配置。</p><h1 id="Windows-10"><a href="#Windows-10" class="headerlink" title="Windows 10"></a>Windows 10</h1><h2 id="下载并解压到安装目录"><a href="#下载并解压到安装目录" class="headerlink" title="下载并解压到安装目录"></a>下载并解压到安装目录</h2><p>下载Redis，解压到安装目录</p><p><a href="https://github.com/MicrosoftArchive/redis/releases" target="_blank" rel="external">Github下载地址</a></p><h2 id="配置环境变量并注册成服务"><a href="#配置环境变量并注册成服务" class="headerlink" title="配置环境变量并注册成服务"></a>配置环境变量并注册成服务</h2><p>环境变量配置</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202309242147280.png" alt=""></p><p>注册成服务并启动Redis服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-server --service-install redis.windows-service.conf --loglevel verbose</span><br><span class="line">net start redis</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202309242145331.png" alt=""></p><p>测试客户端功能正常</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202309242151194.png" alt=""></p><h2 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h2><p>设置临时密码：<code>config set requirepass &quot;admin&quot;</code>后，执行<code>auth admin</code>即可登陆。</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202309242158453.png" alt=""></p><h2 id="配置远程连接"><a href="#配置远程连接" class="headerlink" title="配置远程连接"></a>配置远程连接</h2><p>远程连接命令：<code>redis-cli -h IP地址 -p 端口号 -a 密码</code>，默认ip地址为127.0.0.1，默认端口为6379。</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202309251432967.png" alt=""></p><p>当然要进行远程访问，需要进行下面2个配置。</p><h3 id="Redis绑定IP配置"><a href="#Redis绑定IP配置" class="headerlink" title="Redis绑定IP配置"></a>Redis绑定IP配置</h3><p>Redis配置文件默认绑定本地IP，只能从本地发起连接，如果想要让远程服务发起连接，可以将下面的<code>bind 127.0.0.1</code>一行注释掉，或者添加需要访问redis缓存的服务器地址。</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202309242209963.png" alt=""></p><h3 id="添加防火墙入站规则"><a href="#添加防火墙入站规则" class="headerlink" title="添加防火墙入站规则"></a>添加防火墙入站规则</h3><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202309251430294.png" alt=""></p><h1 id="Centos-7"><a href="#Centos-7" class="headerlink" title="Centos 7"></a>Centos 7</h1><h2 id="离线下载安装包"><a href="#离线下载安装包" class="headerlink" title="离线下载安装包"></a>离线下载安装包</h2><p>查找需要安装的Redis版本：<code>http://download.redis.io/releases/</code>，我选择了7.0.8版本。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /export/download</span><br><span class="line">wget http://download.redis.io/releases/redis-7.0.8.tar.gz</span><br></pre></td></tr></table></figure><h2 id="解压安装"><a href="#解压安装" class="headerlink" title="解压安装"></a>解压安装</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zvxf redis-7.0.8.tar.gz</span><br></pre></td></tr></table></figure><h2 id="构建测试并安装"><a href="#构建测试并安装" class="headerlink" title="构建测试并安装"></a>构建测试并安装</h2><p>执行make进行构建时，如果提示缺少什么依赖就下载更新什么依赖即可。可以通过yum命令下载安装。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> redis</span><br><span class="line">sudo make</span><br><span class="line"><span class="comment"># 下面执行测试，时间较长</span></span><br><span class="line">sudo make <span class="built_in">test</span></span><br><span class="line">sudo make install PREFIX=/usr/<span class="built_in">local</span>/redis</span><br></pre></td></tr></table></figure><h2 id="复制并修改Redis配置文件"><a href="#复制并修改Redis配置文件" class="headerlink" title="复制并修改Redis配置文件"></a>复制并修改Redis配置文件</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /usr/<span class="built_in">local</span>/redis/etc</span><br><span class="line">cp /<span class="built_in">export</span>/download/redis/redis.conf /usr/<span class="built_in">local</span>/redis/etc</span><br></pre></td></tr></table></figure><p>修改Redis配置通常有2种方式，一种是在redis-cli客户端种进行，这种默认是直接生效的，如果修改的配置文件，需要重启Redis使修改生效。</p><p>编辑redis.conf配置文件，修改daemonize为yes，设置为后台启动。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">daemonize yes</span><br></pre></td></tr></table></figure><p>可以通过<code>config get protected-mode</code>命令获取该参数的配置，protected-mode默认为yes，表示Redis仅允许本地连接<strong>或者</strong>通过密码验证的连接访问，一般设置为yes。</p><h2 id="添加开机自启"><a href="#添加开机自启" class="headerlink" title="添加开机自启"></a>添加开机自启</h2><p>在/etc/rc.local中追加开机自启，需要sudo权限。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/rc.local</span><br><span class="line">/usr/<span class="built_in">local</span>/redis/bin/redis-server /usr/<span class="built_in">local</span>/redis/etc/redis.conf</span><br></pre></td></tr></table></figure><h2 id="启动Redis"><a href="#启动Redis" class="headerlink" title="启动Redis"></a>启动Redis</h2><p>复制redis-cli,redis-server到/usr/local/bin/目录下，类似Windows的环境变量配置，允许redis命令在其他目录下直接使用。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/<span class="built_in">local</span>/redis/bin/redis-server /usr/<span class="built_in">local</span>/bin/</span><br><span class="line">cp /usr/<span class="built_in">local</span>/redis/bin/redis-cli /usr/<span class="built_in">local</span>/bin/</span><br><span class="line">/usr/<span class="built_in">local</span>/redis/bin/redis-server /usr/<span class="built_in">local</span>/redis/etc/redis.conf</span><br></pre></td></tr></table></figure><h2 id="设置Redis密码"><a href="#设置Redis密码" class="headerlink" title="设置Redis密码"></a>设置Redis密码</h2><p>设置完密码后和Windows一样进行Redis连接即可。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">config <span class="built_in">set</span> requirepass &lt;密码&gt;</span><br></pre></td></tr></table></figure><h2 id="远程连接配置"><a href="#远程连接配置" class="headerlink" title="远程连接配置"></a>远程连接配置</h2><p>主要涉及防火墙配置，以及Redis配置文件修改bind ip，修改完成后重启即可。Centos防火墙配置为firewall-cmd</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 防火墙配置</span></span><br><span class="line">sudo firewall-cmd --add-port=6379/tcp --permanent</span><br><span class="line">sudo firewall-cmd --reload</span><br><span class="line">sudo firewall-cmd --list-ports</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启Redis服务</span></span><br><span class="line">pkill redis</span><br><span class="line">/usr/<span class="built_in">local</span>/redis/bin/redis-server /usr/<span class="built_in">local</span>/redis/etc/redis.conf</span><br></pre></td></tr></table></figure><h1 id="Redis无法连接问题排查"><a href="#Redis无法连接问题排查" class="headerlink" title="Redis无法连接问题排查"></a>Redis无法连接问题排查</h1><p>1、检查Redis服务是否启动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 执行下面命令返回PONG则已启动</span></span><br><span class="line">redis-cli -h 192.168.2.99 -p 6379 ping</span><br></pre></td></tr></table></figure><p>2、防火墙问题</p><p>检查防火墙规则，是否允许通过tcp协议访问Redis的6379端口，正常通过telnet可以连接该</p><p>如果防火墙使用的是iptables，执行下面的命令允许访问redis端口。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo iptables -L</span><br><span class="line">sudo iptables -A INPUT -p tcp --dport 6379 -j ACCEPT</span><br><span class="line"><span class="comment"># Centso</span></span><br><span class="line">sudo service iptables save</span><br></pre></td></tr></table></figure><p>如果使用的是firewalld，执行下面的命令允许访问redis端口。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看防火墙规则</span></span><br><span class="line">sudo firewall-cmd --list-ports</span><br><span class="line">sudo firewall-cmd --add-port=6379/tcp --permanent</span><br><span class="line">sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>如果防火墙没有启动，执行下面命令启动防火墙</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> firewalld</span><br><span class="line">sudo systemctl start firewalld</span><br></pre></td></tr></table></figure><p>配置成功后可以通过telnet命令验证是否可以正常连接</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet &lt;Windows_IP&gt; 6379</span><br></pre></td></tr></table></figure><p>3、Redis服务器配置的IP和端口是否正确</p><p>确认bind和port配置，看是否在白名单中，又或者允许所有ip访问。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bind</span> 192.168.2.99</span><br><span class="line">port 6379</span><br></pre></td></tr></table></figure><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>[Windows-Redis安装与配置<a href="https://juejin.cn/post/7043684887773052965?searchId=202309242122437CD4714D3D22884226F3" target="_blank" rel="external"></a><br><a href="https://juejin.cn/post/7212164132794662968?searchId=202309242122437CD4714D3D22884226F3" target="_blank" rel="external">Windows Redis msi方式安装</a></p><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;文章记录下Windows 10和Centos 7下Redis的安装配置。&lt;/p&gt;
    
    </summary>
    
      <category term="编程开发" scheme="http://blog.tsukasa.moe/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Redis" scheme="http://blog.tsukasa.moe/tags/Redis/"/>
    
      <category term="分布式缓存" scheme="http://blog.tsukasa.moe/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>Spring框架学习系列 - IOC容器是如何工作的</title>
    <link href="http://blog.tsukasa.moe/2023/08/06/Spring-Learning-series-How-does-IOC-container-work/"/>
    <id>http://blog.tsukasa.moe/2023/08/06/Spring-Learning-series-How-does-IOC-container-work/</id>
    <published>2023-08-06T08:09:33.000Z</published>
    <updated>2023-10-11T03:57:31.085Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><!-- toc --><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这篇文章主要从Spring IoC容器的角度进行切入，了解Spring是如何工作的。</p><h1 id="Spring-IOC容器构建过程"><a href="#Spring-IOC容器构建过程" class="headerlink" title="Spring IOC容器构建过程"></a>Spring IOC容器构建过程</h1><p><code>org.springframework.context.support.AbstractApplicationContext#refresh</code>核心代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">refresh</span><span class="params">()</span> <span class="keyword">throws</span> BeansException, IllegalStateException </span>&#123;</span><br><span class="line"><span class="keyword">synchronized</span> (<span class="keyword">this</span>.startupShutdownMonitor) &#123;</span><br><span class="line"><span class="comment">// Prepare this context for refreshing.</span></span><br><span class="line">prepareRefresh();</span><br><span class="line"><span class="comment">// Tell the subclass to refresh the internal bean factory.</span></span><br><span class="line">ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();</span><br><span class="line"><span class="comment">// Prepare the bean factory for use in this context.</span></span><br><span class="line">prepareBeanFactory(beanFactory);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// Allows post-processing of the bean factory in context subclasses.</span></span><br><span class="line">postProcessBeanFactory(beanFactory);</span><br><span class="line"><span class="comment">// Invoke factory processors registered as beans in the context.</span></span><br><span class="line">invokeBeanFactoryPostProcessors(beanFactory);</span><br><span class="line"><span class="comment">// Register bean processors that intercept bean creation.</span></span><br><span class="line">registerBeanPostProcessors(beanFactory);</span><br><span class="line"><span class="comment">// Initialize message source for this context.</span></span><br><span class="line">initMessageSource();</span><br><span class="line"><span class="comment">// Initialize event multicaster for this context.</span></span><br><span class="line">initApplicationEventMulticaster();</span><br><span class="line"><span class="comment">// Initialize other special beans in specific context subclasses.</span></span><br><span class="line">onRefresh();</span><br><span class="line"><span class="comment">// Check for listener beans and register them.</span></span><br><span class="line">registerListeners();</span><br><span class="line"><span class="comment">// Instantiate all remaining (non-lazy-init) singletons.</span></span><br><span class="line">finishBeanFactoryInitialization(beanFactory);</span><br><span class="line"><span class="comment">// Last step: publish corresponding event.</span></span><br><span class="line">finishRefresh();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (BeansException ex) &#123;</span><br><span class="line">logger.warn(<span class="string">"Exception encountered during context initialization - cancelling refresh attempt"</span>, ex);</span><br><span class="line"><span class="comment">// Destroy already created singletons to avoid dangling resources.</span></span><br><span class="line">destroyBeans();</span><br><span class="line"><span class="comment">// Reset 'active' flag.</span></span><br><span class="line">cancelRefresh(ex);</span><br><span class="line"><span class="comment">// Propagate exception to caller.</span></span><br><span class="line"><span class="keyword">throw</span> ex;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="invokeBeanFactoryPostProcessors"><a href="#invokeBeanFactoryPostProcessors" class="headerlink" title="invokeBeanFactoryPostProcessors"></a>invokeBeanFactoryPostProcessors</h2><p><code>invokeBeanFactoryPostProcessors</code>方法主要是获取<code>BeanFactoryPostProcessor</code>接口的子类，并执行它的<code>postProcessBeanFactory</code>方法:</p><p><code>org.springframework.beans.factory.config.BeanFactoryPostProcessor#postProcessBeanFactory</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">postProcessBeanFactory</span><span class="params">(ConfigurableListableBeanFactory beanFactory)</span> <span class="keyword">throws</span> BeansException</span>;</span><br></pre></td></tr></table></figure><h2 id="registerBeanPostProcessors"><a href="#registerBeanPostProcessors" class="headerlink" title="registerBeanPostProcessors"></a>registerBeanPostProcessors</h2><p><code>registerBeanPostProcessors</code>方法可以获取用户定义的<code>BeanPostProcessor</code>的子类，并把他们注册到<code>BeanFactory</code>对象中的<code>beanPostProcessors</code>变量中。<code>org.springframework.beans.factory.config.BeanPostProcessor</code>接口声明了2个方法：<code>postProcessBeforeInitialization</code>，<code>postProcessAfterInitialization</code>，在Bean初始化时执行用户自定义的操作。</p><h2 id="finishBeanFactoryInitialization"><a href="#finishBeanFactoryInitialization" class="headerlink" title="finishBeanFactoryInitialization"></a>finishBeanFactoryInitialization</h2><p>Bean的实例化代码逻辑，里面涉及一个FactoryBean，一个特殊的工厂bean，用于产生Bean。通常地，通过继承FactoryBean，实现其getObject方法，用户可以产生该类实例对象的方法。Spring获取FactoryBean本身的对象是通过在前面加上<code>&amp;</code>来完成。经常用来整合第三方框架。</p><p>Bean的实例创建流程比较复杂，可以查看流程图</p><h2 id="Bean存储在beanDefinitionMap中"><a href="#Bean存储在beanDefinitionMap中" class="headerlink" title="Bean存储在beanDefinitionMap中"></a>Bean存储在beanDefinitionMap中</h2><p>其中<code>BeanDefinition</code>接口是Bean的定义对象，Bean实例化之后存放在Spring容器中，维护在<code>DefaultListableBeanFactory#beanDefinitionMap</code>属性中，key默认是首字母小写的类名，value是一个BeanDefinition子类对象。</p><p><code>org.springframework.beans.factory.support.DefaultListableBeanFactory#beanDefinitionMap</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">private final Map&lt;String, BeanDefinition&gt; beanDefinitionMap = new ConcurrentHashMap&lt;String, BeanDefinition&gt;(64);</span><br></pre></td></tr></table></figure><h2 id="Bean如何加载到Spring容器中？"><a href="#Bean如何加载到Spring容器中？" class="headerlink" title="Bean如何加载到Spring容器中？"></a>Bean如何加载到Spring容器中？</h2><p>通过<code>org.springframework.beans.factory.support.BeanDefinitionReader</code>的子类来实现，XML配置文件，注解的方式标识需要Spring容器管理的Bean，有对应的<code>BeanDefinitionReader</code>进行加载。</p><h2 id="几个BeanFactory子列"><a href="#几个BeanFactory子列" class="headerlink" title="几个BeanFactory子列"></a>几个BeanFactory子列</h2><table><thead><tr><th style="text-align:left">类</th><th style="text-align:left">简介</th></tr></thead><tbody><tr><td style="text-align:left">ClassPathXmlApplicationContext</td><td style="text-align:left">通过读取类路径下的XMl配置文件创建IOC容器对象</td></tr><tr><td style="text-align:left">FileSystemXmlApplicationContext</td><td style="text-align:left">通过读取文件系统路径下的XMl配置文件创建IOC容器对象</td></tr><tr><td style="text-align:left">ConfigurableApplicationContext</td><td style="text-align:left">ApplicationContext的子接口，包含一些扩展方法refresh()和close()，让ApplicationContext具有启动、关闭和刷新上下文的能力</td></tr><tr><td style="text-align:left">WebApplicationContext</td><td style="text-align:left">基于Web环境创建IOC容器，将对象存入ServletContext中</td></tr></tbody></table><h2 id="Bean的生命周期"><a href="#Bean的生命周期" class="headerlink" title="Bean的生命周期"></a>Bean的生命周期</h2><h1 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h1><h1 id="代码工程"><a href="#代码工程" class="headerlink" title="代码工程"></a>代码工程</h1><hr><h1 id="Spring基本概念"><a href="#Spring基本概念" class="headerlink" title="Spring基本概念"></a>Spring基本概念</h1><p>1、IOC注入的三种方式</p><ul><li>构造方法</li><li>setter方法</li><li>接口注入</li></ul><p>注入有2层含义：<br>（1）将依赖的对象通过Spring容器注入进来；<br>（2）生成当前对象实例后注入到容器中（非必须）</p><p>注入是指，如果当前对象有依赖于其他对象实例，不再通过new的方式创建，而是直接从Spring容器中获取。</p><p>而从容器中获取的实例是否是同一个，涉及到对象的scope</p><p>2、对象的scope有几种<br>有3种：singleton单例，prototype多实例，session一次会话是相同的实例，不同的会话是不同的实例。</p><p>3、什么是控制反转IoC（Inversion of controll）<br>将原来通过new关键字创建对象实例的方式，改成直接从Spring容器中获取对象实例。</p><p>4、IoC的好处是什么？<br>好处是不用再关心依赖类的实例化，而是直接从容器中获取，从而直接使用被依赖对象提供的服务。</p><h1 id="IoC容器如何管理对象间的依赖关系"><a href="#IoC容器如何管理对象间的依赖关系" class="headerlink" title="IoC容器如何管理对象间的依赖关系"></a>IoC容器如何管理对象间的依赖关系</h1><p>1、有哪些管理对象间依赖的方式？</p><ul><li>直接编码，进行对象绑定 –&gt; 不符合IoC的理念，因此Spring主要是通过下面2种方式进行对象间依赖关系的管理</li><li>配置文件，通常用xml</li><li>元数据方式</li></ul><h1 id="IoC容器"><a href="#IoC容器" class="headerlink" title="IoC容器"></a>IoC容器</h1><p>1、Spring有哪些IoC容器？</p><ul><li>BeanFactory</li><li>ApplicationContext</li></ul><p>BeanFactory容器特点：<br>默认延迟初始化策略（懒加载lazy-load），启动初期所需资源少，速度快</p><p>ApplicationContext容器特点：<br>在BeanFactory的基础上构建，还提供了更高级的特性，如事件发布、国际化信息处理等<br>容器启动后，默认全部初始化并完成绑定，前期所需系统资源多，启动速度较慢</p><p>这2个容器都是接口</p><p>2、ApplicationContext与BeanFactory的关系是怎样的？ApplicationContext容器如何实现比BeanFactory更丰富的功能？ — 同样的问题</p><p>ApplicationContext间接继承BeanFactory，自然拥有BeanFactory的功能，此外还继承了其他三个接口：ApplicationEventPublisher，ResourceLoader，MessageSource，因此多出来的功能是通过三个接口抽象定义的。</p><p>3、BeanFactory与ApplicationContext分别如何进行构建？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">BeanFactory bf = <span class="keyword">new</span> XmlBeanFactory(<span class="string">"配置文件路径"</span>);</span><br><span class="line"></span><br><span class="line">ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"配置文件路径"</span>);</span><br><span class="line"><span class="comment">// 或者根据下面的方式构建</span></span><br><span class="line">ApplicationContext ac =  <span class="keyword">new</span> FileSystemXmlApplicatiionContext(<span class="string">"配置文件路径"</span>)</span><br></pre></td></tr></table></figure><p>4、是不是所有的对象实例都应该通过Bean容器进行管理？</p><p>当然不是，通常来说只有需要对外提供服务的对象实例要通过Spring容器管理起来</p><p>5、Bean如何被注入Spring容器？—阅读源代码</p><p>todo</p><p>6、BeanDefinitionRegistry和BeanDefinitionReader类之间的关系？或者说Spring如何实现同一个的外部配置文件加载？</p><p>BeanDefinitionReader负责将相应的配置文件内容读取并映射到BeanDefinition，然后将映射完成的BeanDefinition注册到一个BeanDefinitionRegistry中，然后BeanDefinitionRegistry即完成Bean的注册和加载。大部分的工作，如括解析文件格式、装配BeanDefinition之类的工作，都是由BeanDefinitionReader的实现类来完成，BeanDefinitionRegistry只负责保管。</p><p>BeanDefinitionReader有3个实现类，一个抽象类AbstractBeanDefinitionReader，2个具体子类：PropertiesBeanDefinitionReader和XmlBeanDefinitionReader，说明Spring默认支持2种配置文件：xml和properties</p><p>因此，如果想要实现自定义配置文件的加载，可以通过继承AbstractBeanDefinitionReader来实现。</p><p>7、@Component和@Autowired注解的作用</p><p>@Component在类和接口上标注，开启自动扫包后，对应扫描路径下如果有该注解的类实例会注册到Spring容器中，通过Spring容器进行管理</p><p>自动扫包配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"cn.spring21.project.base.package"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>@Autowired是从Spring容器中获取依赖的对象实例并注入到注解标注的地方</p><p>8、xml配置文件有哪些关键的配置？</p><p>某个场景下如果要对大部分的<code>&lt;bean&gt;</code>进行设置某些行为的话，可以利用<code>&lt;beans&gt;</code>统一设置。</p><p>一些常用的属性<br>default-lazy-init<br>default-autowire<br>default-dependency-check<br>default-init-method<br>default-destroy-method</p><p>添加别名</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">alias</span> <span class="attr">name</span>=<span class="string">"dataSourceForMasterDatabase"</span> <span class="attr">alias</span>=<span class="string">"masterDataSource"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>在xml配置文件进行配置时，如果通过属性注入要求类提供setter方法，通过构造参数注入要求类提供对应参数列表的构造方法</p><p>了解如何注入复杂类型的对象，如集合、空元素null、内部bean</p><p>depends-on显示指定bean之间的依赖关系，可以通过逗号分隔指定多个依赖的bean</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"classAInstance"</span> <span class="attr">class</span>=<span class="string">"...ClassA"</span> <span class="attr">depends-on</span>=<span class="string">"configSetup,configSetup2,..."</span>/&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"configSetup"</span> <span class="attr">class</span>=<span class="string">"SystemConfigurationSetup"</span>/&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"configSetup2"</span> <span class="attr">class</span>=<span class="string">"SystemConfigurationSetup2"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>9、Spring提供了哪些自动绑定方式？<br>5种：no(默认), byName, byType, constructor, autodetect</p><p>手动指定的绑定关系，会覆盖自动绑定的关系，一般来说会使用手动绑定，明确依赖关系，便于管理，避免一些不可预知的行为发生。比如，使用byName可能会导致同名的bean定义被替换，造成问题。</p><p>10、lazy-init属性了解<br>默认会进行初始化，除非设置了<code>lazy-init=&quot;true&quot;</code>。假如一个对象A依赖了延迟初始化的bean对象B，那么A实例化时会先实例化对象B，表现为lazy-init属性设置失效。</p><p>11、如果父类和子类都要放到bean容器进行管理，需要如何配置呢？</p><p>子类会继承父类的非私有属性，假如父类和子类的属性指向同一个对象，可以使用parent属性简化配置，当然建议是在代码属性上加上@Autowired注解，或者在xml中引用同一个bean对象即可。</p><h1 id="Bean的生命周期-1"><a href="#Bean的生命周期-1" class="headerlink" title="Bean的生命周期"></a>Bean的生命周期</h1><p>1.bean的scope</p><p>标记为singleton的bean是由容器来保证这种类型的bean在同一个容器中只存在一个共享实例；<br>而Singleton模式则是保证在同一个Classloader中只存在一个这种类型的实例</p><p>2、自定义scope的步骤</p><ul><li>实现Scope接口，参考org.springframework.context.support.SimpleThreadScope实现</li><li>Spring容器（例如ApplicationContext）中注册<ul><li>直接编码：<code>beanFactory.registerScope(&quot;thread&quot;,threadScope);</code></li><li>xml配置：</li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.beans.factory.config.CustomScopeConfigurer"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"scopes"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">map</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"thread"</span> <span class="attr">value</span>=<span class="string">"com.foo.ThreadScope"</span>/&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">map</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、工厂bean类FactoryBean的作用是什么？使用方法？</p><p>Java强调面向接口编程，依赖的属性通常为接口，但类实例化时通常会选择具体的接口实现，FactoryBean就是将声明依赖接口的对象与接口实现类关联起来的一种方式。</p><p>FactoryBean这里有一个知识点，用到了工厂方法模式。</p><p>工厂方法模式：<br>定义一个用于创建对象的接口，让子类决定实例化哪一个类，使一个类的实例化延迟到其子类。或者更加本质的概括说：延迟到子类来选择实现</p><p>4、Spring容器有哪些地方使用了FactoryBean？</p><ul><li>JndiObjectFactoryBean</li><li>LocalSessionFactoryBean </li><li>SqlMapClientFactoryBean </li><li>ProxyFactoryBean </li><li>TransactionProxyFactoryBean </li></ul><p>4、依赖注入DI与控制反转IoC是同一个意思吗？区别是什么？</p><p>两者是对同一件事情的不同描述<br>依赖注入：应用程序依赖于容器并注入它所需要的资源<br>控制反转：由容器反向地向应用程序注入其所需要的外部资源</p><p>5、类B是类A的属性成员，假如类B定义为prototype，如果要确保每次实例化A时获取一个新的实例化对象B，需要通过lookup-method标签指定获取依赖对象B的方式，Spring会通过Cglib动态生成一个子类并覆写方法getNewsBean，把新生成的子类对象注入到对象A的newsBean属性中。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"newsBean"</span> <span class="attr">class</span>=<span class="string">"..domain.FXNewsBean"</span> <span class="attr">scope</span>=<span class="string">"prototype"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"mockPersister"</span> <span class="attr">class</span>=<span class="string">"..impl.MockNewsPersister"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">lookup-method</span> <span class="attr">name</span>=<span class="string">"getNewsBean"</span> <span class="attr">bean</span>=<span class="string">"newsBean"</span>/&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>BeanFactoryAware接口：<br>容器会自己本身注入到BeanFactoryAware接口的子类中，通过BeanFactoryAware接口方法setBeanFactory实现，可以定义一个BeanFactory beanFactory属性，通过覆写setBeanFactory方法设置到beanFactory属性中，后续再次获取scope为prototype的对象时，则每次都通过beanFactory.getBean(“newsBean”)来获取。这种方式与上面的效果一样。</p><p>ObjectFactoryCreatingFactoryBean是一个FactoryBean实现类，它的父类还实现了BeanFactoryAware接口，但是通常认为直接操作BeanFactory可能会导致一些安全问题。ObjectFactoryCreatingFactoryBean会返回一个ObjectFactory实例，用于与Spring容器进行交互，隔离了客户端对BeanFactory的直接引用。</p><p>与方法注入只是通过相应方法为主体对象注入依赖对象不同，方法替换更多体现在方法的实现层<br>面上，它可以灵活替换或者说以新的方法实现覆盖掉原来某个方法的实现逻辑</p><p>方法替换MethodReplacer</p><p>ObjectFactoryCreatingFactoryBean源代码示例：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">&lt;!-- Prototype bean since we have state --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"myService"</span> <span class="attr">class</span>=<span class="string">"a.b.c.MyService"</span> <span class="attr">scope</span>=<span class="string">"prototype"</span>/&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"myServiceFactory"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">"org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"targetBeanName"</span>&gt;</span><span class="tag">&lt;<span class="name">idref</span> <span class="attr">local</span>=<span class="string">"myService"</span>/&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"clientBean"</span> <span class="attr">class</span>=<span class="string">"a.b.c.MyClientBean"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"myServiceFactory"</span> <span class="attr">ref</span>=<span class="string">"myServiceFactory"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> <span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyClientBean</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">private</span> ObjectFactory&lt;MyService&gt; myServiceFactory;</span><br><span class="line"> </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMyServiceFactory</span><span class="params">(ObjectFactory&lt;MyService&gt; myServiceFactory)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.myServiceFactory = myServiceFactory;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">someBusinessMethod</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// get a 'fresh', brand new MyService instance</span></span><br><span class="line">    MyService service = <span class="keyword">this</span>.myServiceFactory.getObject();</span><br><span class="line">    <span class="comment">// use the service object to effect the business logic...</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>6、BeanFactoryPostProcessor容器扩展机制，可以实现什么功能？</p><p>本身就有很多实现</p><p>BeanFactoryPostProcessor一些常见的实现：</p><p>PropertyPlaceholderConfigurer<br>（1）PropertyPlaceholderConfigurer允许我们在xml配置文件中使用&gt;${jdbc.url}之类的占位符，加载配置文件的方式对其进行填充，因此可以将这些配置信息单独配置到一个个的properties，不需要全部写到xml中。直接改properties的KV结构要比改xml配置文件更不如容易出错。<br>（2）PropertyPlaceholderConfigurer不单可以从properties文件中加载配置项，也可以从Java的System类中的Properties加载配置项，默认是先从properties文件中查找，再从System的Properties中查找。</p><p>PropertyOverrideConfigurer<br>（1）对任何的bean定义进行更改，指定一些properties配置文件，里面的kv可以替换掉其他地方的键值对定义，还可以修改bean定义。比如使用<code>beanName.propertyName=value</code>来修改。<br>（2）配置多个PropertyOverrideConfigurer时，以最后一个为准。</p><p>PropertyPlaceholderConfigurer和PropertyOverrideConfigurer都继承自PropertyResourceConfigurer，里面有一个protected类型的方法convertPropertyValue，子类可以覆盖这个方法对相应的配置项进行转换，比如有些敏感配置项是通过密文存储，加载的时候需要先解密在覆盖到bean定义中。</p><p>CustomEditorConfigurer<br>对对BeanDefinition没有做任何变动，只是将后期会用到的信息注册到容器。</p><p>PropertyEditor<br>xml文件中配置的都是String类型的字符串，解析bean定义时需要转换为实际的类型，比如</p><ul><li>StringArrayPropertyEditor：将逗号分隔的字符串转换为String[]格式</li><li>ClassEditor：根据String类型的class名称，直接将其转换成相应的Class对象，相当于Class.forName(String)完成的功效</li><li>FileEditor等等</li></ul><p>PropertyEditor也可以自定义，可以通过实现PropertyEditor接口，也可以继承PropertyEditorSupport，如果仅仅涉及格式转换，可以重写setAsText()和getAsText()方法</p><p>7、bean的实例化过程？或者说bean的生命周期<br>第一次调用beanFactory.getBean会进行bean的实例化，第二次调用会直接返回容器缓存的对象实例（prototype类型的bean除外）</p><p>实例化的过程如下：</p><ul><li>实例化bean对象</li><li>设置对象属性</li><li>检查Aware相关接口并设置相关依赖</li><li>BeanPostProcessor前置处理postProcessBeforeInitialization</li><li>检查是否是InitializingBean的实现，决定是否调用afterPropertiesSet方法</li><li>如果配置有init-method方法，则调用</li><li>BeanPostProcessor后置处理postProcessAfterInitialization</li><li>注册必要的Destruction相关回调接口</li><li><strong>使用中</strong></li><li>如果实现了DisposableBean接口，则调用destroy方法</li><li>如果配置有destroy-method方法，则调用</li></ul><p>可以AbstractAutowireCapableBeanFactory的createBean()方法查看完整实现</p><p>8、容器内部可以通过哪些方式来实例化bean？</p><p>策略模式来决定采用何种方式初始化bean实例，可以通过反射或者Cglib动态字节码的方式初始化bean或者动态生成其子类。<br>InstantiationStrategy定义是实例化策略的抽象接口，直接子类SimpleInstantiationStrategy实现了简单的对象实例化功能，可以通过反射来实例化对象实例。<br>CglibSubclassingInstantiationStrategy继承了SimpleInstantiationStrategy，除了能够通过反射实例化对象，也可以通过Cglib动态字节码技术生成某个类的子类，满足方法注入所需对象的实例化需求。<br>默认情况下，Spring容器内部采用的是CglibSubclassingInstantiationStrategy</p><p>策略模式：<br>AbstractAutowireCapableBeanFactory相当于context，持有InstantiationStrategy，而上面两种策略可以根据需要进行选择，默认选用CglibSubclassingInstantiationStrategy</p><p>BeanWrapper定义继承了org.springframework.beans.PropertyAccessor接口，可以以统一的<br>方式对对象属性进行访问</p><p>9、Spring容器的Aware接口</p><p>BeanFactory容器的Aware接口</p><ul><li>BeanNameAware：将改对象实例的bean定义对应的beanName设置到当前对象实例</li><li>BeanClassLoaderAware：将对应加载当前bean的ClassLoader注入到当前对象。默认会使用ClassUtils类的ClassLoader</li><li>：将BeanFactory容器自身注入到当前对象实例，当前对象实例就持有了BeanFactBeanFactoryAwareory容器的引用</li></ul><p>ApplicationContext容器的Aware接口</p><ul><li>ResourceLoaderAware：ApplicationContext实现了ResourceLoaderAware接口，会将当前的ApplicationContext容器注入到当前对象实例，与BeanFactoryAware类似</li><li>ApplicationEventPublisherAware：将当前的ApplicationContext容器注入到当前对象实例，还具有发布器的作用</li><li>MessageSourceAware：将当前的ApplicationContext容器注入到当前对象实例，并提供国际化的信息支持</li></ul><p>10、BeanFactoryPostProcessor和BeanPostProcessor区别<br>（1）前者是容器启动阶段，后者是对象实例化阶段。<br>（2）BeanFactoryPostProcessor会处理容器内所有符合条件的BeanDefinition，BeanPostProcessor会处理所有符合条件的实例化后的对象实例</p><h1 id="ApplicationContext容器"><a href="#ApplicationContext容器" class="headerlink" title="ApplicationContext容器"></a>ApplicationContext容器</h1><p>1、讲讲ApplicationContext如何实现统一资源加载？</p><p>Spring中通过Resource定义了资源的抽象接口，ResourceLoader定义资源的加载，两者结合完成统一资源加载。ApplicationContext继承了ResourcePatternResolver，间接实现了ResourceLoader接口，因此这就是ApplicationContext支持Spring内统一资源加载原因。</p><p>涉及的几个Aware接口：</p><ul><li>ResourceLoaderAware</li><li>ApplicationContextAware</li></ul><p>2、Java和Spring分别使用什么方式进行国际化信息的处理？</p><p>（1）Java主要涉及2个类；java.util包里的Locale和ResourceBundle，ResourceBundle用来保存特定某个Locale的信息，ResourceBundle管理一组信息序列，命名格式为：{basename}<em>{language}</em>{COUNTRY}.properties，例如messages_zh_CN.properties，每个文件涉及的key相同，value与国家语言有关。</p><p>（2）Spring通过MessageSource接口，传入相应的Locale、资源的key以及相应参数就可以获取相应的信息，不用先根据Locale取得ResourceBundle</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MessageSource</span> </span>&#123; </span><br><span class="line"><span class="function">String <span class="title">getMessage</span><span class="params">(String code, Object[] args, String defaultMessage, Locale locale)</span></span>; </span><br><span class="line"></span><br><span class="line"><span class="function">String <span class="title">getMessage</span><span class="params">(String code, Object[] args, Locale locale)</span> <span class="keyword">throws</span> NoSuchMessageException</span>; </span><br><span class="line"></span><br><span class="line"><span class="function">String <span class="title">getMessage</span><span class="params">(MessageSourceResolvable resolvable, Locale locale)</span> <span class="keyword">throws</span> NoSuchMessage zException</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ApplicationContext使用messageSourcec示例</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"messageSource"</span> <span class="attr">class</span>=<span class="string">"org.springframework.context.support.ResourceBundleMessageSource"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"basenames"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">list</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>messages<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>errorcodes<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">list</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ApplicationContext ctx = ...; </span><br><span class="line">String fileMenuName = ctx.getMessage(<span class="string">"menu.file"</span>, <span class="keyword">new</span> Object[]&#123;<span class="string">"F"</span>&#125;, Locale.US); </span><br><span class="line">String editMenuName = ctx.getMessage(<span class="string">"menu.file"</span>, <span class="keyword">null</span>, Locale.US); </span><br><span class="line">assertEquals(<span class="string">"File(F)"</span>, fileMenuName); </span><br><span class="line">assertEquals(<span class="string">"Edit"</span>, editMenuName);</span><br></pre></td></tr></table></figure><p>MessageSource的三种实现：</p><ul><li>StaticMessageSource：一般只用于测试</li><li>ResourceBundleMessageSource：提供了对多个ResourceBundle的缓存以提高查询速度，常用。</li><li>ReloadableResourceBundleMessageSource：通过其cacheSeconds属性可以指定时间段，以定期刷新并检查底层的properties资源文件是否有变更。</li></ul><p>上面三种MessageResource可以独立于容器在程序中使用。</p><p>MessageSourceAware类</p><p>3、容器内事件发布机制</p><p>（1）<br>与观察者模式有些相似，Listener相当于Observer，事件发布器Publisher+ApplicationEvent相当于主题Subject，持有Listner集合并维护集合，当主题状态发生变化时，通知所有Listener<br>注意：Spring的ApplicationContext容器内的事件发布机制，主要用于单一容器内的简单消息通知和处<br>理，并不适合分布式、多进程、多容器之间的事件通知。</p><p>（2）一旦容器内发布ApplicationEvent及其子类的事件，注册到容器的ApplicationListener就会对事件进行处理。</p><p>一些ApplicationEvent的子类：</p><ul><li>ContextClosedEvent：ApplicationContext容器在即将关闭时发布的事件类型</li><li>ContextRefreshedEvent：ApplicationContext容器在初始化或者刷新时发布的事件类型</li><li>RequestHandledEvent：Web请求处理后发布的事件类型，其中一个子类ServletRequestHandled用于Java EE的Servlet事件。</li></ul><p>ApplicationListener<br>ApplicationContext容器内使用的自定义事件监听器接口定义，继承自java.util.EventListener，ApplicationContext容器启动时，会自动识别并加载EventListener类型的bean定义，一旦容器内有事件发布，会将通知这些注册到容器的EventListener</p><p>ApplicationContext<br>继承了ApplicationEventPublisher接口，担当了事件发布者的角色，通过类层次结构可以看出来，它将对应的活委托给了ApplicationEventMulticaster接口来实现，而ApplicationEventMulticaster接口有一个抽象子类AbstractApplicationEventMulticaster，这个抽象子类实现了监听器的管理，将事件发布委托给了它的子类SimpleApplicationEventMulticaster。这个SimpleApplicationEventMulticaster事件发布交给Executor类型去执行，是否同步异步可以自定义。</p><p>（3）一些Aware类<br>ApplicationEventPublisherAware</p><p>4、Spring中的Aware接口使用场景有哪些？<br>Aware接口是Spring框架中提供的一组标记接口，用于在Bean装配的过程中获取Spring容器中提供的一些核心组件或运行时上下文等信息。通过使用Aware接口，我们可以在Bean实例化和初始化过程中获取到Spring容器中其他组件，方便Bean类实现更复杂的业务逻辑。</p><p>通俗的说，只要实现了Aware子接口的Bean都能获取到一个Spring底层组件。实现XXXAware接口的bean：通过实现的setXXX方法就可以获取到XXX组件对象，在Aware的实现类就可以对组件进行操作了。具体可以查看源码org.springframework.context.support.ApplicationContextAwareProcessor#invokeAwareInterfaces，本质是通过BeanPostProcessor的子类ApplicationContextAwareProcessor调用postProcessBeforeInitialization方法完成一些操作。</p><p>常见的是实现ApplicationContextAware获取ApplicationContext，做成一个工具类AppplicationUtil，提供应用去获取bean。</p><p>常见的Aware实现：</p><ul><li>ApplicationContextAware：web项目中可以获取ServletContext，获取国际化信息、Scheduler等定时任务</li><li>BeanFactoryAware：获取Spring容器中的Bean实例、手动注册BeanDefinition</li><li>MessageSourceAware：获取国际化信息</li><li>ResourceLoaderAware：进行资源加载操作</li><li>ServletContextAware：让Bean获取到ServletContext对象</li><li>EnvironmentAware：获取当前的环境配置，获取配置文件中的属性值</li><li>ServletConfigAware：让Bean获取到ServletConfig对象，可以获取Servlet相关参数</li><li>ApplicationContextInitializer：在Spring容器初始化之前做一些必要的操作</li><li>EmbeddedValueResolverAware：替换配置文件中的占位符，与@Value功能类似</li><li>LoadTimeWeaverAware：让Bean获取到LoadTimeWeaver对象，实现类的动态加载</li><li>ApplicationEventPublisherAware：让Bean获取到ApplicationEventPublisher对象，发布和监听事件</li><li>ConversionServiceAware：类型转换，数据校验</li></ul><h1 id="Spring注解"><a href="#Spring注解" class="headerlink" title="Spring注解"></a>Spring注解</h1><p>1、系统有哪些BeanPostProcessor？功能主要是做什么？</p><p>AutowiredAnnotationBeanPostProcessor：往@Autowired标注的对象注入</p><p>2、JSR250标准下的注解有哪些？</p><p>使用JSR250注解需要在xml配置文件往Spring容器中注入下面的对象</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.context.annotation.CommonAnnotationBeanPostProcessor"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>@Resource：byName的方式注入<br>@PostConstruct和@PreDestroy：用于标注对象生命周期管理相关方法</p><p>同理，使用Spring的注解@Autowired，也需要在xml配置进行配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>当然，有一种更简便的方法，在xml配置文件中使用下面配置搞定以上所有的BeanPostProcessor配置，作用是把AutowiredAnnotationBeanPostProcessor、CommonAnnotationBeanPostProcessor、PersistenceAnnotationBeanPostProcessor、RequiredAnnotationBeanPostProcessor四个BeanPostProcessor注册到容器。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>classpath-scanning功能可以从某一顶层包（base package）开始扫描。当扫描到某个类标注了相应的注解之后，就会提取该类的相关信息，构<br>建对应的BeanDefinition，然后把构建完的BeanDefinition注册到容器。注意，下面配置还将AutowiredAnnotationBeanPostProcessor和<br>CommonAnnotationBeanPostProcessor一并注册到了容器中，因此上面的<code>&lt;context:annotation-config/&gt;</code>也可以不要。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"org.spring21"</span>/&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Spring-AOP切面"><a href="#Spring-AOP切面" class="headerlink" title="Spring AOP切面"></a>Spring AOP切面</h1><p>涉及到的设计模式：代理模式</p><p>1、什么是Spring AOP？有哪些关键概念？</p><p>Joinpoint：需要织入代码的地方，比如方法调用，字段设置、异常处理等</p><p>Pointcut：Joinpoint表达式定义<br>常见的Pointcut</p><ul><li><p>Advice：横切逻辑，有5种</p></li><li>BeforeAdvice：通常不会中断程序执行流程，除非有必要可以通过抛异常方式中断当前流。实现MethodBeforeAdvice即可</li><li>AfterAdvice：<ul><li>After returning Advice：当前Joinpoint处执行流程正常完成之后。对应接口AfterReturningAdvice</li><li>After throwing Advice：抛异常的情况下会执行。对应接口ThrowsAdvice，覆写三个方法，可以对运行时异常、普通异常、应用异常分别处理，可以发送邮件给对应人员。</li><li>After finally Advice：无论正常终了还是抛出异常都会执行，类似finally块，使用MethodInterceptor接口实现</li></ul></li><li>Around Advice：可以在Joinpoint之前和之后指定相应逻辑，甚至于中断或忽略Joinpoint原来程序流程的执行。Spring AOP没有直接定义Around Advice，使用MethodInterceptor接口实现</li></ul><p>MethodInterceptor可以干些什么？<br>什么都能干，应用场景很多，系统安全验证检查、权限控制、性能检测、限流、日志记录等等</p><p>Aspect：对系统中横切点逻辑进行模块化封装的AOP实体。</p><p>2、什么是动态代理机制？<br>Java中的动态代理由Proxy和InvocationHandler两个类实现，</p><p>3、Cglib动态字节码技术？<br>借助Cglib动态字节码技术，在系统运行期间，为目标对象生成相应的扩展子类。</p><p>4、Spring MVC的拦截器Interceptor如何实现？</p><p>实现 org.springframework.web.servlet.HandlerInterceptor接口或继承 org.springframework.web.servlet.handler.HandlerInterceptorAdapter类，重写下面方法进行拦截处理。</p><p>一些拦截器的细节：</p><ul><li>拦截链条中，假如有A、B、C三个拦截器，假如各个拦截器的preHandle和postHandle方法都返回true，那么afterCompletion方法执行顺序是：C-&gt;B-&gt;A，并且都在postHandle执行完成后执行</li><li>假如preHandle方法返回true，但是controller的方法中抛出异常，那么当前Interceptor的afterCompletion方法也会执行，postHandle方法不执行</li><li>假如preHandle方法返回false，那么后续的controller方法和拦截器及其方法都不会执行</li><li>拦截链条中，假如当前拦截器的preHandle返回false，当前拦截器的拦截方法不会执行，但是前面拦截器的afterCompletion方法还会执行</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202309031600647.png" alt=""></p><p>使用步骤：</p><ul><li>实现HandlerInterceptor接口或者继承HandlerInterceptorAdapter，重写对应拦截方法</li><li>配置拦截器，可以用@Configuration注解或者xml配置文件进行配置，主要包括拦截请求类型、拦截的Interceptor信息，注意添加拦截器是有顺序关系的。</li></ul><p>xml配置方式</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--第一种方式配置某个拦截器，默认是拦截所有请求的--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.citi.interceptor.ZuluInterceptor"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:interceptors</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 返回false，后续的Interceptor不会继续执行，为true时会继续调用后续Interceptor的preHandle方法</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*  Controller方法调用之后执行，通常用于设置一些通用的响应信息，如响应字段等，可以对Controller 处理之后的 ModelAndView 对象进行操作</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postHandle</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 在ModelAndView对象完成渲染之后且在响应返回之前会执行该方法对结果进行后置处理。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterCompletion</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>应用场景：<br>（1）性能监控，监控请求处理的时长<br>通常来说controller请求处理前和后分别记录时间，两者时间差就是整个请求处理所耗费的时间，对于一些时间延迟比较大的，我们可以进行分析和优化。实现步骤如下：<br>利用ThreadLocal线程私有相关的变量，在实现的Interceptor中持有该变量，preHandle方法记录请求到达时间，在postHandle请求中记录请求处理完成后的时间，然后两个时间的差值就是所耗费的时间。</p><p>（2）拦截器通过判断 cookie/session 中是否有该标识，来决定继续流程还是重定向到登录页面<br><code>request.setAttribute(&quot;requestStartTime&quot;, startTime);</code>同样可以实现请求耗时的计算。</p><p>5、过滤器Filter与拦截器Interceptor有什么区别？分别在什么场景使用？<br>Filter和Interceptor都可以用来实现权限校验、日志处理、数据解压/压缩处理、加密/解密处理等问题，但是Filter是Servlet规范，主要在Tomcat等Web容器下使用，Interceptor是Spring MVC规范，主要由Spring容器进行管理。</p><p>（1）Filter主要用责任链模式进行设计，在Tomcat中使用org.apache.catalina.core.ApplicationFilterChain来实现上面提到的责任链模式</p><p>通常在web.xml配置文件中配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>MDCInsertingServletFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span></span><br><span class="line">        ch.qos.logback.classic.helpers.MDCInsertingServletFilter</span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>MDCInsertingServletFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果是在Spring中使用Filter，还可以通过注解的方式<br>在自定义过滤器上使用@WebFilter注解，并在启动类上使用@ServletComponentScan注解；结合@WebFilter注解中的urlPattern字段，Spring能够将过滤器的处理粒度进一步细化，还可以通过@Order来定义过滤器的顺序</p><p>（2）Interceptor是Spring原创的，interceptor的执行时机是要晚于filter的前置处理并且早于filter的后置处理的，同样也是采用责任链的设计模式。</p><p>详细可以查看org.springframework.web.servlet.DispatcherServlet#doDispatch源码，</p><p>Spring中的配置方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line">​</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addInterceptor(<span class="keyword">new</span> DemoInterceptor()).addPathPatterns(<span class="string">"/api/*"</span>).excludePathPatterns(<span class="string">"/api/ok"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202309031642303.png" alt=""></p><p>6、Spring有几种拦截器<br>Filter过滤器-&gt;Interceptor拦截器-&gt;@ControllerAdvice-&gt;AOP</p><p>使用<br>Filter：通常同时实现Filter, Ordered接口并重写，可以自定义顺序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">结果：</span><br><span class="line">Filter 进入</span><br><span class="line">Interceptor preHandle 进入</span><br><span class="line">ControllerAdvice init 进入</span><br><span class="line">Aop 进入</span><br><span class="line">业务：user.name: 宫三公子</span><br><span class="line">ControllerAdvice handleException 进入</span><br><span class="line">Interceptor afterCompletion 进入</span><br><span class="line">Filter 退出</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202309031658844.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202309031701159.png" alt=""></p><p>9、Spring的循环依赖如何解决？如何避免循环依赖？</p><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;未完成&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>K8s 集群搭建系列（四）：集成Kubernetes Dashboard</title>
    <link href="http://blog.tsukasa.moe/2023/08/03/K8s-cluster-series-Kubernetes-dashboard-integration/"/>
    <id>http://blog.tsukasa.moe/2023/08/03/K8s-cluster-series-Kubernetes-dashboard-integration/</id>
    <published>2023-08-02T19:09:38.000Z</published>
    <updated>2023-08-05T07:42:22.675Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><!-- toc --><p>在k8s集群的master节点部署Kubernetes dashboard，便于管理集群、扩容。</p><h1 id="生成dashboard自签名证书"><a href="#生成dashboard自签名证书" class="headerlink" title="生成dashboard自签名证书"></a>生成dashboard自签名证书</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /<span class="built_in">export</span>/servers/kubernetes/certs &amp;&amp; <span class="built_in">cd</span> /<span class="built_in">export</span>/servers/kubernetes/certs/</span><br><span class="line"><span class="comment"># 生成私钥</span></span><br><span class="line">openssl genrsa -out dashboard.key 2048</span><br><span class="line"><span class="comment"># 生成自签证书，CN=&lt;Master ip或者域名&gt;</span></span><br><span class="line">openssl req -days 3650 -new -key dashboard.key -out dashboard.csr -subj /C=CN/ST=BEIJING/L=BEIJING/O=JD/OU=JD/CN=192.168.2.100</span><br><span class="line"><span class="comment"># </span></span><br><span class="line">openssl x509 -req -days 3650 -<span class="keyword">in</span> dashboard.csr -signkey dashboard.key -out dashboard.crt</span><br></pre></td></tr></table></figure><h1 id="创建Secret"><a href="#创建Secret" class="headerlink" title="创建Secret"></a>创建Secret</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create secret tls kubernetes-dashboard-certs -n kubernetes-dashboard --key dashboard.key --cert dashboard.crt</span><br></pre></td></tr></table></figure><p>如果发现Secret有问题，可以通过下面命令删除：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete secret kubernetes-dashboard-certs -n kube-system</span><br></pre></td></tr></table></figure><h1 id="配置dashboard-yaml文件"><a href="#配置dashboard-yaml文件" class="headerlink" title="配置dashboard.yaml文件"></a>配置dashboard.yaml文件</h1><p><code>/export/servers/k8s_dashboard/kubernetes-dashboard.yml</code>配置文件可以直接从网上获取，也可以参考附录生成，应用配置文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f /<span class="built_in">export</span>/servers/k8s_dashboard/kubernetes-dashboard.yml</span><br><span class="line"><span class="comment"># 撤销应用配置文件：kubectl delete -f /export/servers/k8s_dashboard/kubernetes-dashboard.yml</span></span><br></pre></td></tr></table></figure><p>查看kubernetes-dashboard是否正常</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pods -A | grep kubernetes-dashboard</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202308031620009.png" alt=""></p><p>此时已经可以访问dashboard页面，但是我们需要创建一个有管理权限的admin用户进行登陆。</p><p>web浏览器访问地址：<a href="https://192.168.2.100:31001/#/login" target="_blank" rel="external">https://192.168.2.100:31001/#/login</a></p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202308031622927.png" alt=""></p><h1 id="制作访问token"><a href="#制作访问token" class="headerlink" title="制作访问token"></a>制作访问token</h1><p>创建Dashboard管理用户的配置文件。</p><p><code>/export/servers/k8s_dashboard/dashboard-adminuser.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">admin-user</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">admin-user</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line"><span class="attr">  apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">  kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">cluster-admin</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="attr">- kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">admin-user</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kubernetes-dashboard</span></span><br></pre></td></tr></table></figure><p>执行<code>dashboard-adminuser.yaml</code>配置文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下面的命令是创建一个叫admin-user的服务账号，放在kubernetes-dashboard命名空间下，并将cluster-admin角色绑定到admin-user账户，这样admin-user账户就有了管理员的权限。</span></span><br><span class="line">kubectl create -f /<span class="built_in">export</span>/servers/kubernetes/dashboard-adminuser.yaml</span><br><span class="line"><span class="comment"># 查看admin-user的token，复制可用于Dashboard UI登陆</span></span><br><span class="line">kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret | grep admin-user | awk <span class="string">'&#123;print $1&#125;'</span>)</span><br></pre></td></tr></table></figure><p>如果想要删除帐号，可以执行下面的命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n kubernetes-dashboard delete serviceaccount admin-user</span><br></pre></td></tr></table></figure><h1 id="登陆Dashboard"><a href="#登陆Dashboard" class="headerlink" title="登陆Dashboard"></a>登陆Dashboard</h1><p>复制上一步的Token返回Dashboard页面进行登陆，选择全部命名空间可以查看所有的负载：</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202308031635854.png" alt=""></p><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="Kubernetes-dashboard的配置文件"><a href="#Kubernetes-dashboard的配置文件" class="headerlink" title="Kubernetes dashboard的配置文件"></a>Kubernetes dashboard的配置文件</h2><p>官方推荐配置文件，注意需要修改<br><a href="https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0/aio/deploy/recommended.yaml" target="_blank" rel="external">https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0/aio/deploy/recommended.yaml</a></p><p><code>/export/servers/k8s_dashboard/kubernetes-dashboard.yml</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Copyright 2017 The Kubernetes Authors.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Licensed under the Apache License, Version 2.0 (the "License");</span></span><br><span class="line"><span class="comment"># you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"># You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"># distributed under the License is distributed on an "AS IS" BASIS,</span></span><br><span class="line"><span class="comment"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"># See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"># limitations under the License.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Namespace</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">NodePort</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">    - port:</span> <span class="number">443</span></span><br><span class="line"><span class="attr">      targetPort:</span> <span class="number">8443</span></span><br><span class="line"><span class="attr">      nodePort:</span> <span class="number">31001</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kubernetes-dashboard-certs</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">Opaque</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kubernetes-dashboard-csrf</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">Opaque</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line"><span class="attr">  csrf:</span> <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kubernetes-dashboard-key-holder</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">Opaque</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kubernetes-dashboard-settings</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="comment"># Allow Dashboard to get, update and delete Dashboard exclusive secrets.</span></span><br><span class="line"><span class="attr">  - apiGroups:</span> <span class="string">[""]</span></span><br><span class="line"><span class="attr">    resources:</span> <span class="string">["secrets"]</span></span><br><span class="line"><span class="attr">    resourceNames:</span> <span class="string">["kubernetes-dashboard-key-holder",</span> <span class="string">"kubernetes-dashboard-certs"</span><span class="string">,</span> <span class="string">"kubernetes-dashboard-csrf"</span><span class="string">]</span></span><br><span class="line"><span class="attr">    verbs:</span> <span class="string">["get",</span> <span class="string">"update"</span><span class="string">,</span> <span class="string">"delete"</span><span class="string">]</span></span><br><span class="line">    <span class="comment"># Allow Dashboard to get and update 'kubernetes-dashboard-settings' config map.</span></span><br><span class="line"><span class="attr">  - apiGroups:</span> <span class="string">[""]</span></span><br><span class="line"><span class="attr">    resources:</span> <span class="string">["configmaps"]</span></span><br><span class="line"><span class="attr">    resourceNames:</span> <span class="string">["kubernetes-dashboard-settings"]</span></span><br><span class="line"><span class="attr">    verbs:</span> <span class="string">["get",</span> <span class="string">"update"</span><span class="string">]</span></span><br><span class="line">    <span class="comment"># Allow Dashboard to get metrics.</span></span><br><span class="line"><span class="attr">  - apiGroups:</span> <span class="string">[""]</span></span><br><span class="line"><span class="attr">    resources:</span> <span class="string">["services"]</span></span><br><span class="line"><span class="attr">    resourceNames:</span> <span class="string">["heapster",</span> <span class="string">"dashboard-metrics-scraper"</span><span class="string">]</span></span><br><span class="line"><span class="attr">    verbs:</span> <span class="string">["proxy"]</span></span><br><span class="line"><span class="attr">  - apiGroups:</span> <span class="string">[""]</span></span><br><span class="line"><span class="attr">    resources:</span> <span class="string">["services/proxy"]</span></span><br><span class="line"><span class="attr">    resourceNames:</span> <span class="string">["heapster",</span> <span class="string">"http:heapster:"</span><span class="string">,</span> <span class="string">"https:heapster:"</span><span class="string">,</span> <span class="string">"dashboard-metrics-scraper"</span><span class="string">,</span> <span class="string">"http:dashboard-metrics-scraper"</span><span class="string">]</span></span><br><span class="line"><span class="attr">    verbs:</span> <span class="string">["get"]</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="comment"># Allow Metrics Scraper to get metrics from the Metrics server</span></span><br><span class="line"><span class="attr">  - apiGroups:</span> <span class="string">["metrics.k8s.io"]</span></span><br><span class="line"><span class="attr">    resources:</span> <span class="string">["pods",</span> <span class="string">"nodes"</span><span class="string">]</span></span><br><span class="line"><span class="attr">    verbs:</span> <span class="string">["get",</span> <span class="string">"list"</span><span class="string">,</span> <span class="string">"watch"</span><span class="string">]</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line"><span class="attr">  apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">  kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="attr">  - kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">    namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line"><span class="attr">  apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">  kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="attr">  - kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">    namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">  revisionHistoryLimit:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      securityContext:</span></span><br><span class="line"><span class="attr">        seccompProfile:</span></span><br><span class="line"><span class="attr">          type:</span> <span class="string">RuntimeDefault</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">          image:</span> <span class="string">kubernetesui/dashboard:v2.7.0</span></span><br><span class="line"><span class="attr">          imagePullPolicy:</span> <span class="string">Always</span></span><br><span class="line"><span class="attr">          ports:</span></span><br><span class="line"><span class="attr">            - containerPort:</span> <span class="number">8443</span></span><br><span class="line"><span class="attr">              protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">          args:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--auto-generate-certificates</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--namespace=kubernetes-dashboard</span></span><br><span class="line">            <span class="comment"># Uncomment the following line to manually specify Kubernetes API server Host</span></span><br><span class="line">            <span class="comment"># If not specified, Dashboard will attempt to auto discover the API server and connect</span></span><br><span class="line">            <span class="comment"># to it. Uncomment only if the default does not work.</span></span><br><span class="line">            <span class="comment"># - --apiserver-host=http://my-address:port</span></span><br><span class="line"><span class="attr">          volumeMounts:</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">kubernetes-dashboard-certs</span></span><br><span class="line"><span class="attr">              mountPath:</span> <span class="string">/certs</span></span><br><span class="line">              <span class="comment"># Create on-disk volume to store exec logs</span></span><br><span class="line"><span class="attr">            - mountPath:</span> <span class="string">/tmp</span></span><br><span class="line"><span class="attr">              name:</span> <span class="string">tmp-volume</span></span><br><span class="line"><span class="attr">          livenessProbe:</span></span><br><span class="line"><span class="attr">            httpGet:</span></span><br><span class="line"><span class="attr">              scheme:</span> <span class="string">HTTPS</span></span><br><span class="line"><span class="attr">              path:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">              port:</span> <span class="number">8443</span></span><br><span class="line"><span class="attr">            initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line"><span class="attr">            timeoutSeconds:</span> <span class="number">30</span></span><br><span class="line"><span class="attr">          securityContext:</span></span><br><span class="line"><span class="attr">            allowPrivilegeEscalation:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">            readOnlyRootFilesystem:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">            runAsUser:</span> <span class="number">1001</span></span><br><span class="line"><span class="attr">            runAsGroup:</span> <span class="number">2001</span></span><br><span class="line"><span class="attr">      volumes:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">kubernetes-dashboard-certs</span></span><br><span class="line"><span class="attr">          secret:</span></span><br><span class="line"><span class="attr">            secretName:</span> <span class="string">kubernetes-dashboard-certs</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">tmp-volume</span></span><br><span class="line"><span class="attr">          emptyDir:</span> <span class="string">&#123;&#125;</span></span><br><span class="line"><span class="attr">      serviceAccountName:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">      nodeSelector:</span></span><br><span class="line">        <span class="string">"kubernetes.io/os"</span><span class="string">:</span> <span class="string">linux</span></span><br><span class="line">      <span class="comment"># Comment the following tolerations if Dashboard must not be deployed on master</span></span><br><span class="line"><span class="attr">      tolerations:</span></span><br><span class="line"><span class="attr">        - key:</span> <span class="string">node-role.kubernetes.io/master</span></span><br><span class="line"><span class="attr">          effect:</span> <span class="string">NoSchedule</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">    - port:</span> <span class="number">8000</span></span><br><span class="line"><span class="attr">      targetPort:</span> <span class="number">8000</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">  revisionHistoryLimit:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      k8s-app:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        k8s-app:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      securityContext:</span></span><br><span class="line"><span class="attr">        seccompProfile:</span></span><br><span class="line"><span class="attr">          type:</span> <span class="string">RuntimeDefault</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">dashboard-metrics-scraper</span></span><br><span class="line"><span class="attr">          image:</span> <span class="string">kubernetesui/metrics-scraper:v1.0.8</span></span><br><span class="line"><span class="attr">          ports:</span></span><br><span class="line"><span class="attr">            - containerPort:</span> <span class="number">8000</span></span><br><span class="line"><span class="attr">              protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">          livenessProbe:</span></span><br><span class="line"><span class="attr">            httpGet:</span></span><br><span class="line"><span class="attr">              scheme:</span> <span class="string">HTTP</span></span><br><span class="line"><span class="attr">              path:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">              port:</span> <span class="number">8000</span></span><br><span class="line"><span class="attr">            initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line"><span class="attr">            timeoutSeconds:</span> <span class="number">30</span></span><br><span class="line"><span class="attr">          volumeMounts:</span></span><br><span class="line"><span class="attr">          - mountPath:</span> <span class="string">/tmp</span></span><br><span class="line"><span class="attr">            name:</span> <span class="string">tmp-volume</span></span><br><span class="line"><span class="attr">          securityContext:</span></span><br><span class="line"><span class="attr">            allowPrivilegeEscalation:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">            readOnlyRootFilesystem:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">            runAsUser:</span> <span class="number">1001</span></span><br><span class="line"><span class="attr">            runAsGroup:</span> <span class="number">2001</span></span><br><span class="line"><span class="attr">      serviceAccountName:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">      hostNetwork:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">      nodeSelector:</span></span><br><span class="line">        <span class="string">"kubernetes.io/os"</span><span class="string">:</span> <span class="string">linux</span></span><br><span class="line">      <span class="comment"># Comment the following tolerations if Dashboard must not be deployed on master</span></span><br><span class="line"><span class="attr">      tolerations:</span></span><br><span class="line"><span class="attr">        - key:</span> <span class="string">node-role.kubernetes.io/master</span></span><br><span class="line"><span class="attr">          effect:</span> <span class="string">NoSchedule</span></span><br><span class="line"><span class="attr">      volumes:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">tmp-volume</span></span><br><span class="line"><span class="attr">          emptyDir:</span> <span class="string">&#123;&#125;</span></span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://github.com/kubernetes/dashboard" target="_blank" rel="external">Kubernetes Dashboard Github repo</a><br><a href="https://github.com/kubernetes/dashboard/tree/06e7fac1b78727e07c0dd7b693279d13b4914b48/aio/deploy" target="_blank" rel="external">Kubernetes Dashboard的官方配置文件参考</a><br><a href="https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/" target="_blank" rel="external">Kubernetes Dashboard官方指导</a></p><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;在k8s集群的master节点部署Kubernetes dashboard，便于管理集群、扩容。&lt;/p&gt;
    
    </summary>
    
      <category term="环境配置" scheme="http://blog.tsukasa.moe/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="Kubernetes Dashboard" scheme="http://blog.tsukasa.moe/tags/Kubernetes-Dashboard/"/>
    
  </entry>
  
  <entry>
    <title>K8s 集群搭建系列（三）：Harbor + Docker搭建K8s集群</title>
    <link href="http://blog.tsukasa.moe/2023/08/02/Create-k8s-cluster-in-linux/"/>
    <id>http://blog.tsukasa.moe/2023/08/02/Create-k8s-cluster-in-linux/</id>
    <published>2023-08-02T14:57:10.000Z</published>
    <updated>2023-08-05T08:41:37.397Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><!-- toc --><p>Harbor + Docker搭建K8s集群</p><h1 id="系统资源"><a href="#系统资源" class="headerlink" title="系统资源"></a>系统资源</h1><table><thead><tr><th style="text-align:left">IP</th><th style="text-align:left">角色</th><th style="text-align:left">主机名</th><th style="text-align:left">组件</th><th style="text-align:left">配置</th></tr></thead><tbody><tr><td style="text-align:left">192.168.2.183</td><td style="text-align:left">Windows10，个人PC</td><td style="text-align:left">Tsukasa</td><td style="text-align:left">VMWare</td><td style="text-align:left">-</td></tr><tr><td style="text-align:left">192.168.2.100</td><td style="text-align:left">deploy</td><td style="text-align:left">tsukasa</td><td style="text-align:left">ansible, docker, harbor</td><td style="text-align:left">4Cx2Gx20G</td></tr><tr><td style="text-align:left">192.168.2.100</td><td style="text-align:left">kubernetes</td><td style="text-align:left">k8s-master</td><td style="text-align:left">kubectl, kubelet, kubeadm, flnanel</td><td style="text-align:left">2Cx2Gx20G</td></tr><tr><td style="text-align:left">192.168.2.101</td><td style="text-align:left">kubernetes</td><td style="text-align:left">k8s-worker01</td><td style="text-align:left">kubectl</td><td style="text-align:left">2Cx1Gx20G</td></tr><tr><td style="text-align:left">192.168.2.102</td><td style="text-align:left">kubernetes</td><td style="text-align:left">k8s-worker02</td><td style="text-align:left">kubectl</td><td style="text-align:left">2Cx1Gx20G</td></tr><tr><td style="text-align:left">192.168.2.103</td><td style="text-align:left">etcd</td><td style="text-align:left">etcd01</td><td style="text-align:left">etcd</td><td style="text-align:left">2Cx1Gx20G</td></tr><tr><td style="text-align:left">192.168.2.104</td><td style="text-align:left">etcd</td><td style="text-align:left">etcd02</td><td style="text-align:left">etcd</td><td style="text-align:left">1Cx1Gx10G</td></tr><tr><td style="text-align:left">192.168.2.105</td><td style="text-align:left">etcd</td><td style="text-align:left">etcd03(leader)</td><td style="text-align:left">etcd</td><td style="text-align:left">1Cx1Gx10G</td></tr><tr><td style="text-align:left">192.168.2.106</td><td style="text-align:left">mysql</td><td style="text-align:left">mysql01</td><td style="text-align:left">mysql</td><td style="text-align:left">2Cx1Gx15G</td></tr><tr><td style="text-align:left">192.168.2.107</td><td style="text-align:left">mysql</td><td style="text-align:left">mysql02</td><td style="text-align:left">mysql</td><td style="text-align:left">2Cx1Gx15G</td></tr></tbody></table><h1 id="一、系统基础配置"><a href="#一、系统基础配置" class="headerlink" title="一、系统基础配置"></a>一、系统基础配置</h1><h2 id="工作、日志及数据存储目录创建"><a href="#工作、日志及数据存储目录创建" class="headerlink" title="工作、日志及数据存储目录创建"></a>工作、日志及数据存储目录创建</h2><p>deploy节点执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在deploy主机也创建对应目录</span></span><br><span class="line">mkdir -p /<span class="built_in">export</span>/servers</span><br><span class="line">mkdir -p /<span class="built_in">export</span>/logs</span><br><span class="line">mkdir -p /<span class="built_in">export</span>/data</span><br><span class="line">mkdir -p /<span class="built_in">export</span>/upload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分发命令到所有节点</span></span><br><span class="line">ansible all -m <span class="built_in">command</span> -a <span class="string">"mkdir -p /export/servers"</span></span><br><span class="line">ansible all -m <span class="built_in">command</span> -a <span class="string">"mkdir -p /export/logs"</span></span><br><span class="line">ansible all -m <span class="built_in">command</span> -a <span class="string">"mkdir -p /export/data"</span></span><br><span class="line">ansible all -m <span class="built_in">command</span> -a <span class="string">"mkdir -p /export/upload"</span></span><br></pre></td></tr></table></figure><h2 id="取消SELINUX设定，关闭防火墙和关闭交换分区"><a href="#取消SELINUX设定，关闭防火墙和关闭交换分区" class="headerlink" title="取消SELINUX设定，关闭防火墙和关闭交换分区"></a>取消SELINUX设定，关闭防火墙和关闭交换分区</h2><p>deploy节点执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 取消SELINUX设定</span></span><br><span class="line">ansible k8s -m command -a "setenforce 0"</span><br><span class="line">ansible k8s -m command -a "sed --follow-symlinks -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config"</span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭防火墙</span></span><br><span class="line">ansible k8s -m command -a "firewall-cmd --set-default-zone=trusted"</span><br><span class="line">ansible k8s -m command -a "firewall-cmd --complete-reload"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 临时关闭交换分区</span></span><br><span class="line">ansible k8s -m command -a "swapoff -a"</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置系统加载时关闭交换分区</span></span><br><span class="line">ansible  k8s  -m shell -a "yes | cp /etc/fstab /etc/fstab_bak"</span><br><span class="line">ansible  k8s  -m shell -a "cat /etc/fstab_bak | grep -v swap &gt; /etc/fstab"</span><br><span class="line">ansible  k8s  -m shell -a "echo vm.swappiness = 0 &gt;&gt; /etc/sysctl.d/k8s.conf"</span><br><span class="line">ansible  k8s  -m shell -a "sysctl -p /etc/sysctl.d/k8s.conf"</span><br></pre></td></tr></table></figure><p>如果对sysctl加载顺序感兴趣，可以执行<code>sysctl --system</code>查看</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202308022353017.png" alt=""></p><h2 id="ulimit优化"><a href="#ulimit优化" class="headerlink" title="ulimit优化"></a>ulimit优化</h2><p>ulimit用来限制每个用户可以使用的资源，如CPU、内存、句柄等。</p><p><code>/etc/security/limits.conf</code>设置以下内容：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">* soft memlock unlimited</span><br><span class="line">* hard memlock unlimited</span><br><span class="line">* soft nproc 102400</span><br><span class="line">* hard nproc 102400</span><br><span class="line">* soft nofile 1048576</span><br><span class="line">* hard nofile 1048576</span><br></pre></td></tr></table></figure><p>ansible命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ansible all -m shell -a <span class="string">"cat &gt;&gt; /etc/security/limits.conf &lt;&lt; EOF</span></span><br><span class="line"><span class="string">* soft memlock unlimited</span></span><br><span class="line"><span class="string">* hard memlock unlimited</span></span><br><span class="line"><span class="string">* soft nproc 102400</span></span><br><span class="line"><span class="string">* hard nproc 102400</span></span><br><span class="line"><span class="string">* soft nofile 1048576</span></span><br><span class="line"><span class="string">* hard nofile 1048576</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">EOF"</span></span><br></pre></td></tr></table></figure><h2 id="内核及网络参数优化"><a href="#内核及网络参数优化" class="headerlink" title="内核及网络参数优化"></a>内核及网络参数优化</h2><p>所有节点的<code>/etc/sysctl.conf</code>添加下面配置信息，可以通过ansible命令批量添加。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">fs.file-max = 1048576</span><br><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line">net.ipv4.tcp_tw_reuse = 1</span><br><span class="line">net.ipv4.tcp_fin_timeout = 5</span><br><span class="line">net.ipv4.neigh.default.gc_stale_time = 120</span><br><span class="line">net.ipv4.conf.default.rp_filter = 0</span><br><span class="line">net.ipv4.conf.all.rp_filter = 0</span><br><span class="line">net.ipv4.conf.all.arp_announce = 2</span><br><span class="line">net.ipv4.conf.lo.arp_announce = 2 </span><br><span class="line">vm.max_map_count = 262144</span><br></pre></td></tr></table></figure><p>ansible命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">ansible all -m shell -a <span class="string">"cat &gt;&gt; /etc/sysctl.conf &lt;&lt; EOF</span></span><br><span class="line"><span class="string">fs.file-max = 1048576</span></span><br><span class="line"><span class="string">net.ipv4.tcp_syncookies = 1</span></span><br><span class="line"><span class="string">net.ipv4.tcp_tw_reuse = 1</span></span><br><span class="line"><span class="string">net.ipv4.tcp_fin_timeout = 5</span></span><br><span class="line"><span class="string">net.ipv4.neigh.default.gc_stale_time = 120</span></span><br><span class="line"><span class="string">net.ipv4.conf.default.rp_filter = 0</span></span><br><span class="line"><span class="string">net.ipv4.conf.all.rp_filter = 0</span></span><br><span class="line"><span class="string">net.ipv4.conf.all.arp_announce = 2</span></span><br><span class="line"><span class="string">net.ipv4.conf.lo.arp_announce = 2 </span></span><br><span class="line"><span class="string">vm.max_map_count = 262144</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">EOF"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新加载让配置生效</span></span><br><span class="line">ansible all -m <span class="built_in">command</span> -a <span class="string">"sysctl -p"</span></span><br><span class="line"><span class="comment"># 查询所有配置，根据需要执行</span></span><br><span class="line">sysctl -a</span><br></pre></td></tr></table></figure><h2 id="Kubernetes主机hosts设置"><a href="#Kubernetes主机hosts设置" class="headerlink" title="Kubernetes主机hosts设置"></a>Kubernetes主机hosts设置</h2><p><code>cd /export/upload &amp;&amp; vim hosts_set.sh</code>，输入下面内容:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">cat &gt; /etc/hosts &lt;&lt; EOF1</span><br><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line">192.168.2.99 deploy harbor</span><br><span class="line">192.168.2.100 master01</span><br><span class="line">192.168.2.101 worker01</span><br><span class="line">192.168.2.102 worker02</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>deploy主机执行：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible k8s -m copy -a <span class="string">'src=/export/upload/hosts_set.sh dest=/export/upload'</span></span><br><span class="line">ansible k8s -m <span class="built_in">command</span> -a <span class="string">'sh /export/upload/hosts_set.sh'</span></span><br></pre></td></tr></table></figure><h1 id="Deploy主机环境搭建"><a href="#Deploy主机环境搭建" class="headerlink" title="Deploy主机环境搭建"></a>Deploy主机环境搭建</h1><h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><p>deploy主机的docker主要用于harbor针对镜像的操作，包括镜像的打tag以及push，用于后期部署pod的时候直接通过harbor私有镜像库拉取。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在线安装</span></span><br><span class="line">yum -y install docker-ce-20.10.17</span><br><span class="line"><span class="comment"># 或者提前上传docker及其依赖rpm包，进行离线安装：yum -y ./*rpm</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动docker</span></span><br><span class="line">systemctl start docker</span><br><span class="line"><span class="comment"># 查看Docker状态</span></span><br><span class="line">systemctl status docker</span><br><span class="line"><span class="comment"># 查看docker版本</span></span><br><span class="line">docker version</span><br><span class="line"><span class="comment"># 设置开机自启</span></span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><h2 id="docker-compose安装"><a href="#docker-compose安装" class="headerlink" title="docker-compose安装"></a>docker-compose安装</h2><p>harbor私有镜像库的依赖docker-compose，deploy主机安装。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 可以打开下面网址，用PC下载docker-compose-linux-x86_64后，通过ftp上传到deploy服务器，目录需要有写权限</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> curl -L https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-linux-x86_64 -o docker-compose</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 移动到/usr/<span class="built_in">local</span>/bin/并添加执行权限</span></span><br><span class="line">mv docker-compose /usr/local/bin/</span><br><span class="line">chmod +x /usr/local/bin/docker-compose</span><br><span class="line">docker-compose version</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看docker-compose的版本</span></span><br><span class="line">docker-compose version</span><br></pre></td></tr></table></figure><h2 id="Harbor安装"><a href="#Harbor安装" class="headerlink" title="Harbor安装"></a>Harbor安装</h2><p>私有镜像仓库，deploy主机安装。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载</span></span><br><span class="line">wget https://github.com/goharbor/harbor/releases/download/v2.4.3/harbor-offline-installer-v2.4.3.tgz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压并进行配置</span></span><br><span class="line">tar -xzvf harbor-offline-installer-v2.4.3.tgz -C /<span class="built_in">export</span>/servers/</span><br><span class="line"><span class="built_in">cd</span> /<span class="built_in">export</span>/servers/harbor</span><br><span class="line">mv harbor.yml.tmpl harbor.yml</span><br></pre></td></tr></table></figure><h3 id="修改配置文件harbor-yml"><a href="#修改配置文件harbor-yml" class="headerlink" title="修改配置文件harbor.yml"></a>修改配置文件harbor.yml</h3><p>执行配置文件修改<code>vim harbor.yml</code>：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.修改对应配置如下，注意配置文件为yml，修改需要符合yml语法</span></span><br><span class="line"><span class="attr">hostname:</span> <span class="number">192.168</span><span class="number">.2</span><span class="number">.99</span></span><br><span class="line"><span class="attr">http:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8090</span></span><br><span class="line"></span><br><span class="line"><span class="attr">data_volume:</span> <span class="string">/export/data/harbor</span></span><br><span class="line"></span><br><span class="line"><span class="attr">log:</span></span><br><span class="line"><span class="attr">  location:</span> <span class="string">/export/logs/harbor</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.注释下面内容</span></span><br><span class="line"><span class="comment"># https related config</span></span><br><span class="line"><span class="comment">#https:</span></span><br><span class="line">  <span class="comment"># https port for harbor, default is 443</span></span><br><span class="line">  <span class="comment">#port: 443</span></span><br><span class="line">  <span class="comment"># The path of cert and key files for nginx</span></span><br><span class="line">  <span class="comment">#certificate: /your/certificate/path</span></span><br><span class="line">  <span class="comment">#private_key: /your/private/key/path</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.配置管理员密码</span></span><br><span class="line"><span class="attr">harbor_admin_password:</span> <span class="string">harbor950101</span></span><br><span class="line"><span class="attr">database:</span></span><br><span class="line">  <span class="comment"># The password for the root user of Harbor DB. Change this before any production use.</span></span><br><span class="line"><span class="attr">  password:</span> <span class="string">admin</span></span><br></pre></td></tr></table></figure><p>执行命令使配置文件修改生效</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./prepare  <span class="comment"># 如果有二次修改harbor.yml文件，需执行该命令让配置文件生效</span></span><br><span class="line">./install.sh --<span class="built_in">help</span> <span class="comment"># 查看启动参数</span></span><br></pre></td></tr></table></figure><h3 id="导入Harbor镜像"><a href="#导入Harbor镜像" class="headerlink" title="导入Harbor镜像"></a>导入Harbor镜像</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /<span class="built_in">export</span>/servers/harbor</span><br><span class="line"><span class="comment"># harbor-offline-installer-v2.4.3.tgz解压后可以看到harbor.v2.4.3.tar.gz，用docker导入</span></span><br><span class="line">docker load -i harbor.v2.4.3.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看镜像</span></span><br><span class="line">docker images</span><br><span class="line"></span><br><span class="line">REPOSITORY                      TAG       IMAGE ID       CREATED       SIZE</span><br><span class="line">goharbor/harbor-exporter        v2.4.3    776ac6ee91f4   4 weeks ago   81.5MB</span><br><span class="line">goharbor/chartmuseum-photon     v2.4.3    f39a9694988d   4 weeks ago   172MB</span><br><span class="line">goharbor/redis-photon           v2.4.3    b168e9750dc8   4 weeks ago   154MB</span><br><span class="line">goharbor/trivy-adapter-photon   v2.4.3    a406a715461c   4 weeks ago   251MB</span><br><span class="line">goharbor/notary-server-photon   v2.4.3    da89404c7cf9   4 weeks ago   109MB</span><br><span class="line">goharbor/notary-signer-photon   v2.4.3    38468ac13836   4 weeks ago   107MB</span><br><span class="line">goharbor/harbor-registryctl     v2.4.3    61243a84642b   4 weeks ago   135MB</span><br><span class="line">goharbor/registry-photon        v2.4.3    9855479dd6fa   4 weeks ago   77.9MB</span><br><span class="line">goharbor/nginx-photon           v2.4.3    0165c71ef734   4 weeks ago   44.4MB</span><br><span class="line">goharbor/harbor-log             v2.4.3    57ceb170dac4   4 weeks ago   161MB</span><br><span class="line">goharbor/harbor-jobservice      v2.4.3    7fea87c4b884   4 weeks ago   219MB</span><br><span class="line">goharbor/harbor-core            v2.4.3    d864774a3b8f   4 weeks ago   197MB</span><br><span class="line">goharbor/harbor-portal          v2.4.3    85f00db66862   4 weeks ago   53.4MB</span><br><span class="line">goharbor/harbor-db              v2.4.3    7693d44a2ad6   4 weeks ago   225MB</span><br><span class="line">goharbor/prepare                v2.4.3    c882d74725ee   4 weeks ago   268MB</span><br></pre></td></tr></table></figure><p>如果没有按照<code>编辑harbor.yml</code>章节注释，会遇到下面报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">prepare base dir is set to /export/servers/harbor</span><br><span class="line">Error happened in config validation...</span><br><span class="line">ERROR:root:Error: The protocol is https but attribute ssl_cert is not set</span><br></pre></td></tr></table></figure><h3 id="启动Harbor"><a href="#启动Harbor" class="headerlink" title="启动Harbor"></a>启动Harbor</h3><p>如果配置文件harbor.yml有改动，需要执行<code>./prepare</code>使配置修改生效后再启动。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./install.sh --with-chartmuseum</span><br></pre></td></tr></table></figure><p>启动成功后，浏览器可以直接访问Harbor：<code>http://192.168.2.99:8090/</code>，根据harbor.yml配置的管理员帐号和密码登陆</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202308030121841.png" alt=""></p><p><strong>配置对Harbor的HTTPS访问请参考：</strong><br><a href="https://blog.csdn.net/RtxTitanV/article/details/107140001" target="_blank" rel="external">https://blog.csdn.net/RtxTitanV/article/details/107140001</a></p><h1 id="Kubernetes集群配置"><a href="#Kubernetes集群配置" class="headerlink" title="Kubernetes集群配置"></a>Kubernetes集群配置</h1><h2 id="Docker安装-1"><a href="#Docker安装-1" class="headerlink" title="Docker安装"></a>Docker安装</h2><p>docker离线下载地址：<a href="https://download.docker.com/linux/static/stable/x86_64/" target="_blank" rel="external">https://download.docker.com/linux/static/stable/x86_64/</a></p><p>配置docker-ce.repo的镜像仓库</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo</span><br><span class="line"><span class="comment"># 或者通过下面方式添加下面方式添加镜像仓库</span></span><br><span class="line"><span class="comment"># yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span><br></pre></td></tr></table></figure><p>我们要在所有K8s节点安装Docker，因此下载回来后离线安装更快捷。</p><p>yum命令只下载不安装命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install --downloadonly -downloaddir /<span class="built_in">export</span>/upload docker-ce-20.10.17</span><br></pre></td></tr></table></figure><p>deploy主机执行下面的ansible命令，将打包好的压缩包分发给k8s集群机器，并执行解压、安装，启动docker等操作。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分发安装包</span></span><br><span class="line">ansible k8s -m copy -a <span class="string">"src=/export/upload/docker-rpm.tar.gz dest=/export/upload/"</span></span><br><span class="line"><span class="comment"># 解压并安装</span></span><br><span class="line">ansible k8s -m shell -a <span class="string">"tar -xzvf /export/upload/docker-rpm.tar.gz -C /export/upload/ &amp;&amp; yum -y install /export/upload/docker-rpm/*"</span></span><br><span class="line"><span class="comment"># 设置Docker开机自启，以及启动Docker</span></span><br><span class="line">ansible k8s -m shell -a <span class="string">"systemctl enable docker &amp;&amp; systemctl start docker"</span></span><br><span class="line"><span class="comment"># 查看Docker启动状态</span></span><br><span class="line">ansible k8s -m shell -a <span class="string">"docker version"</span></span><br></pre></td></tr></table></figure><p>所有k8s节点返回下面消息证明完成安装</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202308030133314.png" alt=""></p><p><strong>附：常用压缩打包、解压缩命令</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打包</span></span><br><span class="line">tar –cvf xxx.tar &lt;file or dir&gt;</span><br><span class="line"><span class="comment"># 打包并且压缩</span></span><br><span class="line">tar –zcvf docker-rpm.tar.gz &lt;file or dir&gt;</span><br><span class="line"><span class="comment"># 解压缩到指定位置</span></span><br><span class="line">tar -xzvf docker-rpm.tar.gz  -C &lt;位置&gt;</span><br></pre></td></tr></table></figure><h2 id="Kubernetes安装"><a href="#Kubernetes安装" class="headerlink" title="Kubernetes安装"></a>Kubernetes安装</h2><p>deploy节点执行，所有k8s节点需要安装。</p><p>1、添加阿里云YUM的kubernetes软件源：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/yum.repos.d/kubernetes.repo &lt;&lt; EOF</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">repo_gpgcheck=0</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>2、下载kubelet、kubeadm、kubectl组件但不安装：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y kubelet-1.22.4 kubeadm-1.22.4 kubectl-1.22.4 --downloadonly --downloaddir /<span class="built_in">export</span>/download/kubeadm-rpm</span><br></pre></td></tr></table></figure><p>3、执行解压</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /export/download</span><br><span class="line">tar -zcvf kubeadm-rpm.tgz kubeadm-rpm</span><br></pre></td></tr></table></figure><p>4、分发到k8s集群所有节点并解压安装</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible k8s -m copy -a <span class="string">"src=/export/upload/kubeadm-rpm.tgz dest=/export/upload/"</span></span><br><span class="line">ansible k8s -m shell -a <span class="string">"tar xzvf /export/upload/kubeadm-rpm.tgz -C /export/upload/ &amp;&amp; yum -y install /export/upload/kubeadm-rpm/*"</span></span><br></pre></td></tr></table></figure><p>5、启动kubelet并设置开机自启</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible k8s -m shell -a <span class="string">"systemctl enable kubelet &amp;&amp; systemctl start kubelet"</span></span><br></pre></td></tr></table></figure><p>注：此时kubelet启动失败，会进入不断重启，这个是正常现象，执行init或join后问题会自动解决，对此官网有如下描述，也就是此时不用理会kubelet.service，可执行发下命令查看kubelet状态。</p><p><code>journalctl -xefu kubelet</code>可以查看日志：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Jul 29 08:34:33 k8s-worker02 systemd[1]: Starting kubelet: The Kubernetes Node Agent...</span><br><span class="line">-- Subject: Unit kubelet.service has begun start-up</span><br><span class="line">-- Defined-By: systemd</span><br><span class="line">-- Support: http://lists.freedesktop.org/mailman/listinfo/systemd-devel</span><br><span class="line">--</span><br><span class="line">-- Unit kubelet.service has begun starting up.</span><br><span class="line">Jul 29 08:34:33 k8s-worker02 kubelet[9377]: E0729 08:34:33.685622    9377 server.go:206] &quot;Failed to load kubelet config file&quot; err=&quot;failed to load Kubelet config file /var/lib/kubelet/config.yaml, error failed to read kubelet config file \&quot;/var/lib/kubelet/config.yaml\&quot;, error: open /var/lib/kubelet/config.yaml: no such file or directory&quot; path=&quot;/var/lib/kubelet/config.yaml&quot;</span><br><span class="line">Jul 29 08:34:33 k8s-worker02 systemd[1]: kubelet.service: main process exited, code=exited, status=1/FAILURE</span><br><span class="line">Jul 29 08:34:33 k8s-worker02 systemd[1]: Unit kubelet.service entered failed state.</span><br><span class="line">Jul 29 08:34:33 k8s-worker02 systemd[1]: kubelet.service failed.</span><br><span class="line">Jul 29 08:34:43 k8s-worker02 systemd[1]: kubelet.service holdoff time over, scheduling restart.</span><br><span class="line">Jul 29 08:34:43 k8s-worker02 systemd[1]: Started kubelet: The Kubernetes Node Agent.</span><br></pre></td></tr></table></figure><h3 id="Deploy主机下载镜像"><a href="#Deploy主机下载镜像" class="headerlink" title="Deploy主机下载镜像"></a>Deploy主机下载镜像</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker拉取镜像</span></span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/coredns:v1.8.4</span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/etcd:3.5.0-0</span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-apiserver:v1.22.4</span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-controller-manager:v1.22.4</span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy:v1.22.4</span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-scheduler:v1.22.4</span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.5</span><br><span class="line">docker pull rancher/mirrored-flannelcni-flannel-cni-plugin:v1.1.0</span><br><span class="line">docker pull rancher/mirrored-flannelcni-flannel:v0.19.1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出镜像到/export/upload/docker-images/位置</span></span><br><span class="line">mkdir -p /<span class="built_in">export</span>/upload/docker-images/</span><br><span class="line">docker save -o /<span class="built_in">export</span>/upload/docker-images/rancher-mirrored-flannelcni-flannel-v0.19.1.tar rancher/mirrored-flannelcni-flannel </span><br><span class="line">docker save -o /<span class="built_in">export</span>/upload/docker-images/rancher-mirrored-flannelcni-flannel-cni-plugin-v1.1.0.tar rancher/mirrored-flannelcni-flannel-cni-plugin </span><br><span class="line">docker save -o /<span class="built_in">export</span>/upload/docker-images/google_containers-kube-apiserver-v1.22.4.tar registry.cn-hangzhou.aliyuncs.com/google_containers/kube-apiserver </span><br><span class="line">docker save -o /<span class="built_in">export</span>/upload/docker-images/google_containers-kube-controller-manager-v1.22.4.tar registry.cn-hangzhou.aliyuncs.com/google_containers/kube-controller-manager </span><br><span class="line">docker save -o /<span class="built_in">export</span>/upload/docker-images/google_containers-kube-scheduler-v1.22.4.tar registry.cn-hangzhou.aliyuncs.com/google_containers/kube-scheduler </span><br><span class="line">docker save -o /<span class="built_in">export</span>/upload/docker-images/google_containers-kube-proxy-v1.22.4.tar registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy </span><br><span class="line">docker save -o /<span class="built_in">export</span>/upload/docker-images/google_containers-etcd-3.5.0-0.tar registry.cn-hangzhou.aliyuncs.com/google_containers/etcd </span><br><span class="line">docker save -o /<span class="built_in">export</span>/upload/docker-images/google_containers-coredns-v1.8.4.tar registry.cn-hangzhou.aliyuncs.com/google_containers/coredns </span><br><span class="line">docker save -o /<span class="built_in">export</span>/upload/docker-images/google_containers-pause-3.5.tar registry.cn-hangzhou.aliyuncs.com/google_containers/pause </span><br><span class="line"></span><br><span class="line"><span class="comment"># Docker导入镜像</span></span><br><span class="line"><span class="built_in">cd</span> /<span class="built_in">export</span>/upload/docker-images/</span><br><span class="line">docker load -i rancher-mirrored-flannelcni-flannel-v0.19.1.tar</span><br><span class="line">docker load -i rancher-mirrored-flannelcni-flannel-cni-plugin-v1.1.0.tar</span><br><span class="line">docker load -i google_containers-kube-apiserver-v1.22.4.tar</span><br><span class="line">docker load -i google_containers-kube-controller-manager-v1.22.4.tar</span><br><span class="line">docker load -i google_containers-kube-scheduler-v1.22.4.tar</span><br><span class="line">docker load -i google_containers-kube-proxy-v1.22.4.tar</span><br><span class="line">docker load -i google_containers-etcd-3.5.0-0.tar</span><br><span class="line">docker load -i google_containers-coredns-v1.8.4.tar</span><br><span class="line">docker load -i google_containers-pause-3.5.tar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 镜像打harbor镜像库tag</span></span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/coredns:v1.8.4 192.168.2.99:8090/community/coredns:v1.8.4</span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/etcd:3.5.0-0 192.168.2.99:8090/community/etcd:3.5.0-0</span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/kube-apiserver:v1.22.4 192.168.2.99:8090/community/kube-apiserver:v1.22.4</span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/kube-controller-manager:v1.22.4 192.168.2.99:8090/community/kube-controller-manager:v1.22.4</span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy:v1.22.4 192.168.2.99:8090/community/kube-proxy:v1.22.4</span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/kube-scheduler:v1.22.4 192.168.2.99:8090/community/kube-scheduler:v1.22.4</span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.5 192.168.2.99:8090/community/pause:3.5</span><br><span class="line">docker tag rancher/mirrored-flannelcni-flannel-cni-plugin:v1.1.0 192.168.2.99:8090/community/mirrored-flannelcni-flannel-cni-plugin:v1.1.0</span><br><span class="line">docker tag rancher/mirrored-flannelcni-flannel:v0.19.1 192.168.2.99:8090/community/mirrored-flannelcni-flannel:v0.19.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 推送至harbor镜像库，后续可以通过docker pull从harbor中直接拉取</span></span><br><span class="line">docker push 192.168.2.99:8090/community/coredns:v1.8.4</span><br><span class="line">docker push 192.168.2.99:8090/community/etcd:3.5.0-0</span><br><span class="line">docker push 192.168.2.99:8090/community/kube-apiserver:v1.22.4</span><br><span class="line">docker push 192.168.2.99:8090/community/kube-controller-manager:v1.22.4</span><br><span class="line">docker push 192.168.2.99:8090/community/kube-proxy:v1.22.4</span><br><span class="line">docker push 192.168.2.99:8090/community/kube-scheduler:v1.22.4</span><br><span class="line">docker push 192.168.2.99:8090/community/pause:3.5</span><br><span class="line">docker push 192.168.2.99:8090/community/mirrored-flannelcni-flannel-cni-plugin:v1.1.0</span><br><span class="line">docker push 192.168.2.99:8090/community/mirrored-flannelcni-flannel:v0.19.1</span><br></pre></td></tr></table></figure><h4 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h4><p><strong>1、docker push推送过程中可能会报错，提示docker推送要求为https，而harbor服务端通信协议为http。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@tsukasa docker-images]# docker push 192.168.2.99:8090/community/mirrored-flannelcni-flannel:v0.19.1</span><br><span class="line">The push refers to repository [192.168.2.99:8090/community/mirrored-flannelcni-flannel]</span><br><span class="line">Get &quot;https://192.168.2.99:8090/v2/&quot;: http: server gave HTTP response to HTTPS client</span><br></pre></td></tr></table></figure><p>修改docker的配置文件/etc/docker/daemon.json（文件不存在则新增），添加下面内容，下面IP端口为harbor的http配置：</p><p><code>vim /etc/docker/daemon.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"insecure-registries"</span>:[<span class="string">"192.168.2.99:8090"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启docker服务、重新加载harbor镜像</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker.service</span><br><span class="line"><span class="comment"># 重新加载harbor</span></span><br><span class="line">docker load -i harbor.v2.4.3.tar.gz</span><br><span class="line"><span class="comment"># 启动Harbor</span></span><br><span class="line"><span class="built_in">cd</span> /<span class="built_in">export</span>/servers/harbor</span><br><span class="line">./install.sh --with-chartmuseum</span><br></pre></td></tr></table></figure><p><strong>2、docker push推送过程中提示project community not found: project community not found</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@tsukasa harbor]<span class="comment"># docker push 192.168.2.99:8090/community/coredns:v1.8.4</span></span><br><span class="line">The push refers to repository [192.168.2.99:8090/community/coredns]</span><br><span class="line">f72781b18181: Preparing</span><br><span class="line">225df95e717c: Preparing</span><br><span class="line">unauthorized: project community not found: project community not found</span><br></pre></td></tr></table></figure><p>解决办法是在harbor管理台创建项目</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307300117189.png" alt=""></p><p><strong>3、docker push进行推送时出现unauthorized: unauthorized to access repository</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@tsukasa harbor]# docker push 192.168.2.99:8090/community/coredns:v1.8.4</span><br><span class="line">The push refers to repository [192.168.2.99:8090/community/coredns]</span><br><span class="line">f72781b18181: Preparing</span><br><span class="line">225df95e717c: Preparing</span><br><span class="line">unauthorized: unauthorized to access repository: community/coredns, action: push: unauthorized to access repository: community/coredns, action: push</span><br></pre></td></tr></table></figure><p>解决办法是在需要推送镜像的主机上（这里是deploy）登陆harbor：<code>docker login 192.168.2.99:8090</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@tsukasa harbor]<span class="comment"># docker login 192.168.2.99:8090</span></span><br><span class="line">Username: admin</span><br><span class="line">Password:</span><br><span class="line">WARNING! Your password will be stored unencrypted <span class="keyword">in</span> /root/.docker/config.json.</span><br><span class="line">Configure a credential helper to remove this warning. See</span><br><span class="line">https://docs.docker.com/engine/reference/commandline/login/<span class="comment">#credentials-store</span></span><br></pre></td></tr></table></figure><h3 id="Master节点"><a href="#Master节点" class="headerlink" title="Master节点"></a>Master节点</h3><p>通常地，k8s集群Master节点有多个，本地因资源问题，只创建了一台master。</p><h4 id="部署首个Master"><a href="#部署首个Master" class="headerlink" title="部署首个Master"></a>部署首个Master</h4><p>1、在docker配置文件/etc/docker/daemon.json中添加下面内容，重启docker</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"exec-opts"</span>: [<span class="string">"native.cgroupdriver=systemd"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启docker</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><p>3、在k8s-master(ip:192.168.2.100)执行初始化：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果初始化失败，先强制重置kubeadm再初始化：kubeadm reset -f</span></span><br><span class="line"><span class="comment"># 初始化</span></span><br><span class="line">kubeadm init \</span><br><span class="line">--control-plane-endpoint <span class="string">"192.168.2.100:6443"</span> \</span><br><span class="line">--image-repository 192.168.2.99:8090/community \</span><br><span class="line">--kubernetes-version v1.22.4 \</span><br><span class="line">--service-cidr=172.16.0.0/16 \</span><br><span class="line">--pod-network-cidr=10.244.0.0/16 \</span><br><span class="line">--token <span class="string">"abcdef.0123456789abcdef"</span> \</span><br><span class="line">--token-ttl <span class="string">"0"</span> \</span><br><span class="line">--upload-certs</span><br></pre></td></tr></table></figure><p><code>--image-repository</code>参数是镜像仓库，目前设置为搭建的harbor，也可以使用阿里云<code>registry.aliyuncs.com/google_containers</code></p><p>执行后的控台输出如下，进行其他Master和Worker节点初始化需要用到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]# kubeadm init \</span><br><span class="line">&gt; --control-plane-endpoint &quot;192.168.2.100:6443&quot; \</span><br><span class="line">&gt; --image-repository 192.168.2.99:8090/community \</span><br><span class="line">&gt; --kubernetes-version v1.22.4 \</span><br><span class="line">&gt; --service-cidr=172.16.0.0/16 \</span><br><span class="line">&gt; --pod-network-cidr=10.244.0.0/16 \</span><br><span class="line">&gt; --token &quot;abcdef.0123456789abcdef&quot; \</span><br><span class="line">&gt; --token-ttl &quot;0&quot; \</span><br><span class="line">&gt; --upload-certs</span><br><span class="line">[init] Using Kubernetes version: v1.22.4</span><br><span class="line">[preflight] Running pre-flight checks</span><br><span class="line">        [WARNING Firewalld]: firewalld is active, please ensure ports [6443 10250] are open or your cluster may not function correctly</span><br><span class="line">        [WARNING Hostname]: hostname &quot;k8s-master&quot; could not be reached</span><br><span class="line">        [WARNING Hostname]: hostname &quot;k8s-master&quot;: lookup k8s-master on 223.5.5.5:53: no such host</span><br><span class="line">[preflight] Pulling images required for setting up a Kubernetes cluster</span><br><span class="line">[preflight] This might take a minute or two, depending on the speed of your internet connection</span><br><span class="line">[preflight] You can also perform this action in beforehand using &apos;kubeadm config images pull&apos;</span><br><span class="line">[certs] Using certificateDir folder &quot;/etc/kubernetes/pki&quot;</span><br><span class="line">[certs] Generating &quot;ca&quot; certificate and key</span><br><span class="line">[certs] Generating &quot;apiserver&quot; certificate and key</span><br><span class="line">[certs] apiserver serving cert is signed for DNS names [k8s-master kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [172.16.0.1 192.168.2.100]</span><br><span class="line">[certs] Generating &quot;apiserver-kubelet-client&quot; certificate and key</span><br><span class="line">[certs] Generating &quot;front-proxy-ca&quot; certificate and key</span><br><span class="line">[certs] Generating &quot;front-proxy-client&quot; certificate and key</span><br><span class="line">[certs] Generating &quot;etcd/ca&quot; certificate and key</span><br><span class="line">[certs] Generating &quot;etcd/server&quot; certificate and key</span><br><span class="line">[certs] etcd/server serving cert is signed for DNS names [k8s-master localhost] and IPs [192.168.2.100 127.0.0.1 ::1]</span><br><span class="line">[certs] Generating &quot;etcd/peer&quot; certificate and key</span><br><span class="line">[certs] etcd/peer serving cert is signed for DNS names [k8s-master localhost] and IPs [192.168.2.100 127.0.0.1 ::1]</span><br><span class="line">[certs] Generating &quot;etcd/healthcheck-client&quot; certificate and key</span><br><span class="line">[certs] Generating &quot;apiserver-etcd-client&quot; certificate and key</span><br><span class="line">[certs] Generating &quot;sa&quot; key and public key</span><br><span class="line">[kubeconfig] Using kubeconfig folder &quot;/etc/kubernetes&quot;</span><br><span class="line">[kubeconfig] Writing &quot;admin.conf&quot; kubeconfig file</span><br><span class="line">[kubeconfig] Writing &quot;kubelet.conf&quot; kubeconfig file</span><br><span class="line">[kubeconfig] Writing &quot;controller-manager.conf&quot; kubeconfig file</span><br><span class="line">[kubeconfig] Writing &quot;scheduler.conf&quot; kubeconfig file</span><br><span class="line">[kubelet-start] Writing kubelet environment file with flags to file &quot;/var/lib/kubelet/kubeadm-flags.env&quot;</span><br><span class="line">[kubelet-start] Writing kubelet configuration to file &quot;/var/lib/kubelet/config.yaml&quot;</span><br><span class="line">[kubelet-start] Starting the kubelet</span><br><span class="line">[control-plane] Using manifest folder &quot;/etc/kubernetes/manifests&quot;</span><br><span class="line">[control-plane] Creating static Pod manifest for &quot;kube-apiserver&quot;</span><br><span class="line">[control-plane] Creating static Pod manifest for &quot;kube-controller-manager&quot;</span><br><span class="line">[control-plane] Creating static Pod manifest for &quot;kube-scheduler&quot;</span><br><span class="line">[etcd] Creating static Pod manifest for local etcd in &quot;/etc/kubernetes/manifests&quot;</span><br><span class="line">[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory &quot;/etc/kubernetes/manifests&quot;. This can take up to 4m0s</span><br><span class="line">[apiclient] All control plane components are healthy after 7.005575 seconds</span><br><span class="line">[upload-config] Storing the configuration used in ConfigMap &quot;kubeadm-config&quot; in the &quot;kube-system&quot; Namespace</span><br><span class="line">[kubelet] Creating a ConfigMap &quot;kubelet-config-1.22&quot; in namespace kube-system with the configuration for the kubelets in the cluster</span><br><span class="line">[upload-certs] Storing the certificates in Secret &quot;kubeadm-certs&quot; in the &quot;kube-system&quot; Namespace</span><br><span class="line">[upload-certs] Using certificate key:</span><br><span class="line">7ed3ef5d6b04a668e7bed67e419fd9f69ce482047350e5b391357005064db994</span><br><span class="line">[mark-control-plane] Marking the node k8s-master as control-plane by adding the labels: [node-role.kubernetes.io/master(deprecated) node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]</span><br><span class="line">[mark-control-plane] Marking the node k8s-master as control-plane by adding the taints [node-role.kubernetes.io/master:NoSchedule]</span><br><span class="line">[bootstrap-token] Using token: abcdef.0123456789abcdef</span><br><span class="line">[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles</span><br><span class="line">[bootstrap-token] configured RBAC rules to allow Node Bootstrap tokens to get nodes</span><br><span class="line">[bootstrap-token] configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials</span><br><span class="line">[bootstrap-token] configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token</span><br><span class="line">[bootstrap-token] configured RBAC rules to allow certificate rotation for all node client certificates in the cluster</span><br><span class="line">[bootstrap-token] Creating the &quot;cluster-info&quot; ConfigMap in the &quot;kube-public&quot; namespace</span><br><span class="line">[kubelet-finalize] Updating &quot;/etc/kubernetes/kubelet.conf&quot; to point to a rotatable kubelet client certificate and key</span><br><span class="line">[addons] Applied essential addon: CoreDNS</span><br><span class="line">[addons] Applied essential addon: kube-proxy</span><br><span class="line"></span><br><span class="line">Your Kubernetes control-plane has initialized successfully!</span><br><span class="line"></span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line"></span><br><span class="line">  mkdir -p $HOME/.kube</span><br><span class="line">  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">  sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br><span class="line"></span><br><span class="line">Alternatively, if you are the root user, you can run:</span><br><span class="line"></span><br><span class="line">  export KUBECONFIG=/etc/kubernetes/admin.conf</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run &quot;kubectl apply -f [podnetwork].yaml&quot; with one of the options listed at:</span><br><span class="line">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class="line"></span><br><span class="line">You can now join any number of the control-plane node running the following command on each as root:</span><br><span class="line"></span><br><span class="line">  kubeadm join 192.168.2.100:6443 --token abcdef.0123456789abcdef \</span><br><span class="line">        --discovery-token-ca-cert-hash sha256:fdfca7204c17842d264752cc0cf9efcf4da515837f5deb7f69cc3ec3f3fe00c6 \</span><br><span class="line">        --control-plane --certificate-key 7ed3ef5d6b04a668e7bed67e419fd9f69ce482047350e5b391357005064db994</span><br><span class="line"></span><br><span class="line">Please note that the certificate-key gives access to cluster sensitive data, keep it secret!</span><br><span class="line">As a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use</span><br><span class="line">&quot;kubeadm init phase upload-certs --upload-certs&quot; to reload certs afterward.</span><br><span class="line"></span><br><span class="line">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class="line"></span><br><span class="line">kubeadm join 192.168.2.100:6443 --token abcdef.0123456789abcdef \</span><br><span class="line">        --discovery-token-ca-cert-hash sha256:fdfca7204c17842d264752cc0cf9efcf4da515837f5deb7f69cc3ec3f3fe00c6</span><br></pre></td></tr></table></figure><p>如果控制台信息被清理，可以在通过下面的命令查看token</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看token列表</span></span><br><span class="line">kubeadm token list</span><br></pre></td></tr></table></figure><p>如果token过期，可以重新创建再查看token</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubeadm token create --<span class="built_in">print</span>-join-command</span><br><span class="line">kubeadm token list</span><br></pre></td></tr></table></figure><p>4、生成kubelet环境配置文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">sudo cp -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">sudo chown $(id -u):$(id -g) <span class="variable">$HOME</span>/.kube/config</span><br></pre></td></tr></table></figure><h4 id="配置网络插件flannel"><a href="#配置网络插件flannel" class="headerlink" title="配置网络插件flannel"></a>配置网络插件flannel</h4><p>Kubernetes跨主机容器之间的通信组件，目前主流的是flannel和calico，这里选择flannel。<br>如果使用<code>kubectl get nodes</code>查看节点状态，Worker节点显示<code>NotReady</code>，是因为缺少网络插件导致的。</p><p>（1）创建/export/servers/kubernetes/flannel.yml配置文件，内容参考附录。</p><p>在执行下面的命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 应用flannel配置文件</span></span><br><span class="line">kubectl apply -f /<span class="built_in">export</span>/servers/kubernetes/flannel.yml</span><br></pre></td></tr></table></figure><p>如果配置文件有改动需要重新加载，可以执行下面命令进行撤销</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete -f /<span class="built_in">export</span>/servers/kubernetes/flannel.yml</span><br></pre></td></tr></table></figure><h4 id="其他Master"><a href="#其他Master" class="headerlink" title="其他Master"></a>其他Master</h4><p>复制首个Master节点kubeadm初始化后的master节点加入命令，到其他Master节点执行即可。也可以用deploy主机使用ansible命令批量执行。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubeadm join 192.168.2.100:6443 --token abcdef.0123456789abcdef \</span><br><span class="line">      --discovery-token-ca-cert-hash sha256:fdfca7204c17842d264752cc0cf9efcf4da515837f5deb7f69cc3ec3f3fe00c6 \</span><br><span class="line">      --control-plane --certificate-key 7ed3ef5d6b04a668e7bed67e419fd9f69ce482047350e5b391357005064db994</span><br></pre></td></tr></table></figure><h3 id="Worker节点"><a href="#Worker节点" class="headerlink" title="Worker节点"></a>Worker节点</h3><p>复制首个Master节点kubeadm初始化后的Worker节点加入命令，到所有Worker节点分别执行。也可以用deploy主机使用ansible命令批量执行。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubeadm join 192.168.2.100:6443 --token abcdef.0123456789abcdef \</span><br><span class="line">        --discovery-token-ca-cert-hash sha256:fdfca7204c17842d264752cc0cf9efcf4da515837f5deb7f69cc3ec3f3fe00c6</span><br></pre></td></tr></table></figure><p>ansible命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible worker -m shell -a <span class="string">"kubeadm join 192.168.2.100:6443 --token abcdef.0123456789abcdef \</span></span><br><span class="line"><span class="string">        --discovery-token-ca-cert-hash sha256:fdfca7204c17842d264752cc0cf9efcf4da515837f5deb7f69cc3ec3f3fe00c6"</span></span><br></pre></td></tr></table></figure><p>查看所有pod状态</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pods -A</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202308030235232.png" alt=""></p><p>至此，Kubernetes集群已经建立！</p><h3 id="可能遇到的问题-1"><a href="#可能遇到的问题-1" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h3><h4 id="1-Pod状态显示ImagePullBackoff"><a href="#1-Pod状态显示ImagePullBackoff" class="headerlink" title="1.Pod状态显示ImagePullBackoff"></a>1.Pod状态显示ImagePullBackoff</h4><p>需要手动拉取镜像，等待k8s重试成功后即可解决</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull rancher/mirrored-flannelcni-flannel:v0.19.1</span><br></pre></td></tr></table></figure><h4 id="常用的定位命令"><a href="#常用的定位命令" class="headerlink" title="常用的定位命令"></a>常用的定位命令</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看命名空间kube-system详细的pod状态</span></span><br><span class="line">kubectl get pod -n kube-system -o wide</span><br><span class="line"><span class="comment"># 查看pod的日志</span></span><br><span class="line">kubectl describe pod &lt;Pod名称&gt; -n &lt;命名空间&gt;</span><br><span class="line"><span class="comment"># 查看pod的详细日志，可以查看到代码报错的堆栈</span></span><br><span class="line">kubectl logs -f kubernetes-dashboard-658b66597c-jcw4s -n kubernetes-dashboard</span><br></pre></td></tr></table></figure><h3 id="Kubernetes常用命令"><a href="#Kubernetes常用命令" class="headerlink" title="Kubernetes常用命令"></a>Kubernetes常用命令</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">kubectl get all <span class="comment">#查看所有启动的配置，包括容器，服务，监视等等等等 --all-namespaces 参数 可以看到所有命名空间的 -o wide 可以看到更多的信息，如容器启动在哪台机器上</span></span><br><span class="line">kubectl get pods -o wide <span class="comment">#查看pod</span></span><br><span class="line">kubectl get pod name --output json <span class="comment">#以JSON格式输出POD信息:</span></span><br><span class="line">kubectl get pod name --output yaml <span class="comment">#以yaml格式输出POD信息</span></span><br><span class="line">kubectl get svc  <span class="comment">#查询所有实例的对外端口</span></span><br><span class="line">kubectl describe pod xxx-mariadb-0   <span class="comment">#查看pod的详情</span></span><br><span class="line">kubectl get nodes <span class="comment">#查看node节点</span></span><br><span class="line">kubectl get rc,namespace <span class="comment">#查看rc ,namespace</span></span><br><span class="line">kubectl <span class="built_in">exec</span> -ti xxx-jw64d sh    <span class="comment">#登陆到某个模块实例查日志或配置</span></span><br><span class="line">kubectl cluster-info     <span class="comment">#查看集群状态</span></span><br><span class="line">kubectl get deployments <span class="comment">#查询Deployment当前状态</span></span><br><span class="line">NAME               DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">nginx-deployment   3         3         3            3           2h</span><br><span class="line">其中DESIRED为期望的Pod数量，CURRENT为当前的数量，UP-TO-DATE为已更新的数量，AVAILABLE为已运行的数量</span><br><span class="line">kubectl get rs <span class="comment">#Replica Set（RS）是k8s新一代的Pod controller</span></span><br><span class="line">kubectl get cs <span class="comment">#检查组件状态是否都正常 component status （CS）</span></span><br><span class="line">kubectl get pods --show-labels</span><br><span class="line">kubectl describe deployments</span><br><span class="line">kubectl get pvc <span class="comment">#获取 StatefulSet 的 PersistentVolumeClaims</span></span><br><span class="line">kubectl <span class="built_in">exec</span> nginx -- printenv | grep SERVICE <span class="comment">#检查正在运行的 Nginx Pod 的环境变量</span></span><br><span class="line">kubectl get services kube-dns --namespace=kube-system <span class="comment">#检查 DNS 插件 Service</span></span><br><span class="line">kubectl get pods -o yaml | grep -i podip</span><br><span class="line">kubectl <span class="built_in">exec</span> xxx-2xd57 date      <span class="comment">#对pod中的容器执行命令</span></span><br><span class="line"> </span><br><span class="line">kubectl delete pod name <span class="comment">#删除某个POD</span></span><br><span class="line">kubectl delete deployment kubernetes-dashboard --namespace=kubernetes-dashboard <span class="comment">#删除</span></span><br><span class="line">kubectl delete secrets xxx-secrets   <span class="comment">#或者在页面删除</span></span><br></pre></td></tr></table></figure><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="网络插件flannel的配置文件"><a href="#网络插件flannel的配置文件" class="headerlink" title="网络插件flannel的配置文件"></a>网络插件flannel的配置文件</h2><p><code>/export/servers/kubernetes/flannel.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Namespace</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kube-flannel</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">pod-security.kubernetes.io/enforce:</span> <span class="string">privileged</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="attr">- apiGroups:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">""</span></span><br><span class="line"><span class="attr">  resources:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">pods</span></span><br><span class="line"><span class="attr">  verbs:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">get</span></span><br><span class="line"><span class="attr">- apiGroups:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">""</span></span><br><span class="line"><span class="attr">  resources:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">nodes</span></span><br><span class="line"><span class="attr">  verbs:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">list</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">watch</span></span><br><span class="line"><span class="attr">- apiGroups:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">""</span></span><br><span class="line"><span class="attr">  resources:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">nodes/status</span></span><br><span class="line"><span class="attr">  verbs:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">patch</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line"><span class="attr">  apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">  kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="attr">- kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-flannel</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-flannel</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kube-flannel-cfg</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-flannel</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    tier:</span> <span class="string">node</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="string">cni-conf.json:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">      "name": "cbr0",</span></span><br><span class="line"><span class="string">      "cniVersion": "0.3.1",</span></span><br><span class="line"><span class="string">      "plugins": [</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">          "type": "flannel",</span></span><br><span class="line"><span class="string">          "delegate": &#123;</span></span><br><span class="line"><span class="string">            "hairpinMode": true,</span></span><br><span class="line"><span class="string">            "isDefaultGateway": true</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">          "type": "portmap",</span></span><br><span class="line"><span class="string">          "capabilities": &#123;</span></span><br><span class="line"><span class="string">            "portMappings": true</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      ]</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  net-conf.json: |</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">      "Network": "10.244.0.0/16",</span></span><br><span class="line"><span class="string">      "Backend": &#123;</span></span><br><span class="line"><span class="string">        "Type": "vxlan"</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string"></span><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kube-flannel-ds</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-flannel</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    tier:</span> <span class="string">node</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        tier:</span> <span class="string">node</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      affinity:</span></span><br><span class="line"><span class="attr">        nodeAffinity:</span></span><br><span class="line"><span class="attr">          requiredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line"><span class="attr">            nodeSelectorTerms:</span></span><br><span class="line"><span class="attr">            - matchExpressions:</span></span><br><span class="line"><span class="attr">              - key:</span> <span class="string">kubernetes.io/os</span></span><br><span class="line"><span class="attr">                operator:</span> <span class="string">In</span></span><br><span class="line"><span class="attr">                values:</span></span><br><span class="line"><span class="bullet">                -</span> <span class="string">linux</span></span><br><span class="line"><span class="attr">      hostNetwork:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">      priorityClassName:</span> <span class="string">system-node-critical</span></span><br><span class="line"><span class="attr">      tolerations:</span></span><br><span class="line"><span class="attr">      - operator:</span> <span class="string">Exists</span></span><br><span class="line"><span class="attr">        effect:</span> <span class="string">NoSchedule</span></span><br><span class="line"><span class="attr">      serviceAccountName:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">      initContainers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">install-cni-plugin</span></span><br><span class="line"><span class="attr">        image:</span> <span class="string">docker.io/rancher/mirrored-flannelcni-flannel-cni-plugin:v1.1.0</span></span><br><span class="line"><span class="attr">        command:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">cp</span></span><br><span class="line"><span class="attr">        args:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="bullet">-f</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">/flannel</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">/opt/cni/bin/flannel</span></span><br><span class="line"><span class="attr">        volumeMounts:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">cni-plugin</span></span><br><span class="line"><span class="attr">          mountPath:</span> <span class="string">/opt/cni/bin</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">install-cni</span></span><br><span class="line"><span class="attr">        image:</span> <span class="string">docker.io/rancher/mirrored-flannelcni-flannel:v0.19.1</span></span><br><span class="line"><span class="attr">        command:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">cp</span></span><br><span class="line"><span class="attr">        args:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="bullet">-f</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">/etc/kube-flannel/cni-conf.json</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">/etc/cni/net.d/10-flannel.conflist</span></span><br><span class="line"><span class="attr">        volumeMounts:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">cni</span></span><br><span class="line"><span class="attr">          mountPath:</span> <span class="string">/etc/cni/net.d</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">flannel-cfg</span></span><br><span class="line"><span class="attr">          mountPath:</span> <span class="string">/etc/kube-flannel/</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">kube-flannel</span></span><br><span class="line"><span class="attr">        image:</span> <span class="string">docker.io/rancher/mirrored-flannelcni-flannel:v0.19.1</span></span><br><span class="line"><span class="attr">        command:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">/opt/bin/flanneld</span></span><br><span class="line"><span class="attr">        args:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="bullet">--ip-masq</span></span><br><span class="line"><span class="bullet">        -</span> <span class="bullet">--kube-subnet-mgr</span></span><br><span class="line"><span class="attr">        resources:</span></span><br><span class="line"><span class="attr">          requests:</span></span><br><span class="line"><span class="attr">            cpu:</span> <span class="string">"100m"</span></span><br><span class="line"><span class="attr">            memory:</span> <span class="string">"50Mi"</span></span><br><span class="line"><span class="attr">          limits:</span></span><br><span class="line"><span class="attr">            cpu:</span> <span class="string">"100m"</span></span><br><span class="line"><span class="attr">            memory:</span> <span class="string">"50Mi"</span></span><br><span class="line"><span class="attr">        securityContext:</span></span><br><span class="line"><span class="attr">          privileged:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">          capabilities:</span></span><br><span class="line"><span class="attr">            add:</span> <span class="string">["NET_ADMIN",</span> <span class="string">"NET_RAW"</span><span class="string">]</span></span><br><span class="line"><span class="attr">        env:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">POD_NAME</span></span><br><span class="line"><span class="attr">          valueFrom:</span></span><br><span class="line"><span class="attr">            fieldRef:</span></span><br><span class="line"><span class="attr">              fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line"><span class="attr">          valueFrom:</span></span><br><span class="line"><span class="attr">            fieldRef:</span></span><br><span class="line"><span class="attr">              fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">EVENT_QUEUE_DEPTH</span></span><br><span class="line"><span class="attr">          value:</span> <span class="string">"5000"</span></span><br><span class="line"><span class="attr">        volumeMounts:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">run</span></span><br><span class="line"><span class="attr">          mountPath:</span> <span class="string">/run/flannel</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">flannel-cfg</span></span><br><span class="line"><span class="attr">          mountPath:</span> <span class="string">/etc/kube-flannel/</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">xtables-lock</span></span><br><span class="line"><span class="attr">          mountPath:</span> <span class="string">/run/xtables.lock</span></span><br><span class="line"><span class="attr">      volumes:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">run</span></span><br><span class="line"><span class="attr">        hostPath:</span></span><br><span class="line"><span class="attr">          path:</span> <span class="string">/run/flannel</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">cni-plugin</span></span><br><span class="line"><span class="attr">        hostPath:</span></span><br><span class="line"><span class="attr">          path:</span> <span class="string">/opt/cni/bin</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">cni</span></span><br><span class="line"><span class="attr">        hostPath:</span></span><br><span class="line"><span class="attr">          path:</span> <span class="string">/etc/cni/net.d</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">flannel-cfg</span></span><br><span class="line"><span class="attr">        configMap:</span></span><br><span class="line"><span class="attr">          name:</span> <span class="string">kube-flannel-cfg</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">xtables-lock</span></span><br><span class="line"><span class="attr">        hostPath:</span></span><br><span class="line"><span class="attr">          path:</span> <span class="string">/run/xtables.lock</span></span><br><span class="line"><span class="attr">          type:</span> <span class="string">FileOrCreate</span></span><br></pre></td></tr></table></figure><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://juejin.cn/post/7161621568747995166" target="_blank" rel="external">IoT运维 - 如何部署一套高可用K8S集群</a><br><a href="https://juejin.cn/post/7179072854397288509" target="_blank" rel="external">手把手教你一套完善且高效的k8s离线部署方案</a><br><a href="https://github.com/flannel-io/flannel" target="_blank" rel="external">Flannel-io Github repo</a><br><a href="https://github.com/easzlab/kubeasz" target="_blank" rel="external">快速部署高可用k8s集群的工具kubeasz</a></p><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;Harbor + Docker搭建K8s集群&lt;/p&gt;
    
    </summary>
    
      <category term="环境配置" scheme="http://blog.tsukasa.moe/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="Kubernetes" scheme="http://blog.tsukasa.moe/tags/Kubernetes/"/>
    
      <category term="Harbor" scheme="http://blog.tsukasa.moe/tags/Harbor/"/>
    
      <category term="Docker" scheme="http://blog.tsukasa.moe/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>K8s集群搭建系列（二）：搭建ETCD多节点单实例集群</title>
    <link href="http://blog.tsukasa.moe/2023/08/02/Create-etcd-cluster-in-linux-system/"/>
    <id>http://blog.tsukasa.moe/2023/08/02/Create-etcd-cluster-in-linux-system/</id>
    <published>2023-08-02T06:26:45.000Z</published>
    <updated>2023-08-05T06:49:37.477Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><!-- toc --><p>ETCD是一个分布式键值存储组件，可以用于服务注册与发现。这篇文章主要记录下ETCD多节点单实例集群的搭建。etcd是服务端，etcdctl是客户端命令行。</p><h1 id="系统资源"><a href="#系统资源" class="headerlink" title="系统资源"></a>系统资源</h1><table><thead><tr><th style="text-align:left">IP</th><th style="text-align:left">角色</th><th style="text-align:left">主机名</th><th style="text-align:left">组件</th><th style="text-align:left">配置</th></tr></thead><tbody><tr><td style="text-align:left">192.168.2.183</td><td style="text-align:left">Windows10，个人PC</td><td style="text-align:left">Tsukasa</td><td style="text-align:left">VMWare</td><td style="text-align:left">-</td></tr><tr><td style="text-align:left">192.168.2.100</td><td style="text-align:left">deploy</td><td style="text-align:left">tsukasa</td><td style="text-align:left">ansible, docker, harbor</td><td style="text-align:left">4Cx2Gx20G</td></tr><tr><td style="text-align:left">192.168.2.100</td><td style="text-align:left">kubernetes</td><td style="text-align:left">k8s-master</td><td style="text-align:left">kubectl, kubelet, kubeadm, flnanel</td><td style="text-align:left">2Cx2Gx20G</td></tr><tr><td style="text-align:left">192.168.2.101</td><td style="text-align:left">kubernetes</td><td style="text-align:left">k8s-worker01</td><td style="text-align:left">kubectl</td><td style="text-align:left">2Cx1Gx20G</td></tr><tr><td style="text-align:left">192.168.2.102</td><td style="text-align:left">kubernetes</td><td style="text-align:left">k8s-worker02</td><td style="text-align:left">kubectl</td><td style="text-align:left">2Cx1Gx20G</td></tr><tr><td style="text-align:left">192.168.2.103</td><td style="text-align:left">etcd</td><td style="text-align:left">etcd01</td><td style="text-align:left">etcd</td><td style="text-align:left">2Cx1Gx20G</td></tr><tr><td style="text-align:left">192.168.2.104</td><td style="text-align:left">etcd</td><td style="text-align:left">etcd02</td><td style="text-align:left">etcd</td><td style="text-align:left">1Cx1Gx10G</td></tr><tr><td style="text-align:left">192.168.2.105</td><td style="text-align:left">etcd</td><td style="text-align:left">etcd03(leader)</td><td style="text-align:left">etcd</td><td style="text-align:left">1Cx1Gx10G</td></tr><tr><td style="text-align:left">192.168.2.106</td><td style="text-align:left">mysql</td><td style="text-align:left">mysql01</td><td style="text-align:left">mysql</td><td style="text-align:left">2Cx1Gx15G</td></tr><tr><td style="text-align:left">192.168.2.107</td><td style="text-align:left">mysql</td><td style="text-align:left">mysql02</td><td style="text-align:left">mysql</td><td style="text-align:left">2Cx1Gx15G</td></tr></tbody></table><h1 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h1><p>默认已经完成SSH免密登陆、时间同步等基础配置，如果未完成需要参考同系列之前的文章配置。</p><h2 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h2><p>deploy主机执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible etcd -m shell -a <span class="string">"systemctl stop firewalld &amp;&amp; systemctl disable firewalld"</span></span><br><span class="line">ansible etcd -m shell -a <span class="string">"sed -i 's/^SELINUX=.*/SELINUX=disabled/g' /etc/selinux/config"</span></span><br></pre></td></tr></table></figure><h1 id="生成证书信息"><a href="#生成证书信息" class="headerlink" title="生成证书信息"></a>生成证书信息</h1><p>deploy主机执行，后续通过ansible命令将生成好的证书信息发送到etcd节点。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 -O /usr/bin/cfssl</span><br><span class="line">wget https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64 -O /usr/bin/cfssljson</span><br><span class="line">wget https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64 -O /usr/bin/cfssl-certinfo </span><br><span class="line">chmod +x /usr/bin/cfssl*</span><br></pre></td></tr></table></figure><h2 id="创建CA配置文件"><a href="#创建CA配置文件" class="headerlink" title="创建CA配置文件"></a>创建CA配置文件</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /root/ssl</span><br><span class="line"><span class="built_in">cd</span> /root/ssl</span><br><span class="line">cat &gt;ca-config.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"signing"</span>: &#123;</span><br><span class="line">    <span class="string">"default"</span>: &#123;</span><br><span class="line">      <span class="string">"expiry"</span>: <span class="string">"876000h"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"profiles"</span>: &#123;</span><br><span class="line">      <span class="string">"etcd"</span>: &#123;</span><br><span class="line">        <span class="string">"usages"</span>: [</span><br><span class="line">            <span class="string">"signing"</span>,</span><br><span class="line">            <span class="string">"key encipherment"</span>,</span><br><span class="line">            <span class="string">"server auth"</span>,</span><br><span class="line">            <span class="string">"client auth"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">"expiry"</span>: <span class="string">"876000h"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="创建CA证书签名请求"><a href="#创建CA证书签名请求" class="headerlink" title="创建CA证书签名请求"></a>创建CA证书签名请求</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">cat &gt;ca-csr.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"CN"</span>: <span class="string">"etcd"</span>,</span><br><span class="line">  <span class="string">"key"</span>: &#123;</span><br><span class="line">    <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line">    <span class="string">"size"</span>: 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"names"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line">      <span class="string">"ST"</span>: <span class="string">"beijing"</span>,</span><br><span class="line">      <span class="string">"L"</span>: <span class="string">"beijing"</span>,</span><br><span class="line">      <span class="string">"O"</span>: <span class="string">"jdt"</span>,</span><br><span class="line">      <span class="string">"OU"</span>: <span class="string">"iot"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="生成CA证书和私钥"><a href="#生成CA证书和私钥" class="headerlink" title="生成CA证书和私钥"></a>生成CA证书和私钥</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cfssl gencert -initca ca-csr.json | cfssljson -bare ca</span><br></pre></td></tr></table></figure><h2 id="创建etcd的TLS认证证书"><a href="#创建etcd的TLS认证证书" class="headerlink" title="创建etcd的TLS认证证书"></a>创建etcd的TLS认证证书</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">cfssl gencert -initca ca-csr.json | cfssljson -bare ca</span><br><span class="line"></span><br><span class="line">cat &gt; etcd-csr.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"CN"</span>: <span class="string">"etcd"</span>,</span><br><span class="line">  <span class="string">"hosts"</span>: [</span><br><span class="line">    <span class="string">"192.168.2.103"</span>, </span><br><span class="line">    <span class="string">"192.168.2.104"</span>, </span><br><span class="line">    <span class="string">"192.168.2.105"</span>,</span><br><span class="line">    <span class="string">"192.168.2.100"</span>,</span><br><span class="line">    <span class="string">"etcd01"</span>,</span><br><span class="line">    <span class="string">"etcd02"</span>,</span><br><span class="line">    <span class="string">"etcd03"</span>,</span><br><span class="line">    <span class="string">"master"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"key"</span>: &#123;</span><br><span class="line">    <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line">    <span class="string">"size"</span>: 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"names"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line">      <span class="string">"ST"</span>: <span class="string">"beijing"</span>,</span><br><span class="line">      <span class="string">"L"</span>: <span class="string">"beijing"</span>,</span><br><span class="line">      <span class="string">"O"</span>: <span class="string">"jdt"</span>,</span><br><span class="line">      <span class="string">"OU"</span>: <span class="string">"iot"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="生成并分发etcd证书和私钥"><a href="#生成并分发etcd证书和私钥" class="headerlink" title="生成并分发etcd证书和私钥"></a>生成并分发etcd证书和私钥</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=etcd etcd-csr.json | cfssljson -bare etcd</span><br><span class="line">ansible  etcd -m copy -a <span class="string">"src=/root/ssl/ dest=/export/Data/certs/"</span></span><br></pre></td></tr></table></figure><h1 id="ETCD安装和配置"><a href="#ETCD安装和配置" class="headerlink" title="ETCD安装和配置"></a>ETCD安装和配置</h1><p>上面已经把etcd的证书和私钥分发到了各个etcd节点，下面进行etcd的安装和配置。</p><h2 id="下载并分发etcd"><a href="#下载并分发etcd" class="headerlink" title="下载并分发etcd"></a>下载并分发etcd</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建etcd数据目录</span></span><br><span class="line">ansible etcd -m shell -a <span class="string">"mkdir -p /export/Data/etcd_data"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果下载速度很慢，可以通过用windows主机下载再上传至deploy主机</span></span><br><span class="line">wget https://github.com/etcd-io/etcd/releases/download/v3.5.1/etcd-v3.5.1-linux-amd64.tar.gz</span><br><span class="line">tar xf etcd-v3.5.1-linux-amd64.tar.gz  &amp;&amp; <span class="built_in">cd</span> etcd-v3.5.1-linux-amd64</span><br><span class="line">ansible etcd -m copy -a <span class="string">"src=etcd  dest=/usr/bin/"</span></span><br><span class="line">ansible etcd -m copy -a <span class="string">"src=etcdutl  dest=/usr/bin/"</span></span><br><span class="line">ansible etcd -m copy -a <span class="string">"src=etcdctl  dest=/usr/bin/"</span></span><br><span class="line">ansible etcd -m shell -a <span class="string">"chmod +x /usr/bin/etcd*"</span></span><br></pre></td></tr></table></figure><h2 id="配置etcd"><a href="#配置etcd" class="headerlink" title="配置etcd"></a>配置etcd</h2><p>创建etcd配置文件：<code>/export/upload/etcd_config.sh</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#PEER_NAME指定本节点的主机名称/域名，</span></span><br><span class="line"><span class="comment">#PRIVATE_IP指定本节点的IP(用于后面配置文件的生成)</span></span><br><span class="line"><span class="comment">#ETCD_CLUSTER群集列表，是所有节点信息（内容格式: 各节点名称=https://ip:端口  名称任意但要有标识性）</span></span><br><span class="line"><span class="comment">#ETCD_INITIAL_CLUSTER_TOKEN为该etcd集群Token,同一集群token一致</span></span><br><span class="line">interface_name=`cat /proc/net/dev | sed -n <span class="string">'3,$p'</span> | awk -F <span class="string">':'</span> &#123;<span class="string">'print $1'</span>&#125; | grep  -E <span class="string">"^ "</span> | grep -v lo | head -n1`</span><br><span class="line">ipaddr=`ip a | grep <span class="variable">$interface_name</span>  | awk <span class="string">'&#123;print $2&#125;'</span> | awk -F<span class="string">"/"</span>  <span class="string">'&#123;print $1&#125;'</span> | awk -F<span class="string">':'</span> <span class="string">'&#123;print $NF&#125;'</span>`</span><br><span class="line"><span class="built_in">export</span> PEER_NAME=`hostname`</span><br><span class="line"><span class="built_in">export</span> PRIVATE_IP=`<span class="built_in">echo</span> <span class="variable">$ipaddr</span> | tr -d <span class="string">'\r'</span>`</span><br><span class="line"><span class="built_in">export</span> ETCD_CLUSTER=<span class="string">"etcd01=https://192.168.2.103:2380,etcd02=https://192.168.2.104:2380,etcd03=https://192.168.2.105:2380"</span></span><br><span class="line"><span class="built_in">export</span> ETCD_INITIAL_CLUSTER_TOKEN=<span class="string">"etcd-cluster-1"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cat &gt; /etc/systemd/system/etcd.service  &lt;&lt;EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=etcd</span><br><span class="line">Documentation=https://github.com/coreos/etcd</span><br><span class="line">Conflicts=etcd.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=5s</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line">TimeoutStartSec=0</span><br><span class="line"></span><br><span class="line">ExecStart=/usr/bin/etcd --name <span class="variable">$&#123;PEER_NAME&#125;</span> \</span><br><span class="line">    --data-dir /<span class="built_in">export</span>/Data/etcd_data\</span><br><span class="line">    --listen-client-urls https://<span class="variable">$&#123;PRIVATE_IP&#125;</span>:2379 \</span><br><span class="line">    --advertise-client-urls https://<span class="variable">$&#123;PRIVATE_IP&#125;</span>:2379 \</span><br><span class="line">    --listen-peer-urls https://<span class="variable">$&#123;PRIVATE_IP&#125;</span>:2380 \</span><br><span class="line">    --initial-advertise-peer-urls https://<span class="variable">$&#123;PRIVATE_IP&#125;</span>:2380 \</span><br><span class="line">    --cert-file=/<span class="built_in">export</span>/Data/certs/etcd.pem \</span><br><span class="line">    --key-file=/<span class="built_in">export</span>/Data/certs/etcd-key.pem \</span><br><span class="line">    --client-cert-auth \</span><br><span class="line">    --trusted-ca-file=/<span class="built_in">export</span>/Data/certs/ca.pem \</span><br><span class="line">    --peer-cert-file=/<span class="built_in">export</span>/Data/certs/etcd.pem \</span><br><span class="line">    --peer-key-file=/<span class="built_in">export</span>/Data/certs/etcd-key.pem \</span><br><span class="line">    --peer-client-cert-auth \</span><br><span class="line">    --peer-trusted-ca-file=/<span class="built_in">export</span>/Data/certs/ca.pem \</span><br><span class="line">    --initial-cluster <span class="variable">$&#123;ETCD_CLUSTER&#125;</span> \</span><br><span class="line">    --initial-cluster-token etcd-cluster-1 \</span><br><span class="line">    --initial-cluster-state new</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>分发etcd配置文件到各个etcd节点。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分发etcd_config.sh配置脚本到etcd节点</span></span><br><span class="line">ansible etcd -m copy -a <span class="string">"src=/export/upload/etcd_config.sh dest=/root/etcd_config.sh"</span></span><br><span class="line">ansible etcd -m shell -a <span class="string">"chmod u+x,g+x /root/etcd_config.sh"</span></span><br><span class="line">ansible etcd -m shell -a <span class="string">"sh /root/etcd_config.sh"</span></span><br><span class="line"><span class="comment"># 重启etcd服务</span></span><br><span class="line">ansible etcd -m shell -a <span class="string">"systemctl daemon-reload"</span></span><br><span class="line">ansible etcd -m service -a <span class="string">'name=etcd  state=started'</span></span><br><span class="line">ansible etcd -m shell -a <span class="string">"systemctl enable etcd"</span></span><br></pre></td></tr></table></figure><h2 id="etcd健康检查"><a href="#etcd健康检查" class="headerlink" title="etcd健康检查"></a>etcd健康检查</h2><p>创建etcd的健康检查脚本：<code>/export/upload/check_etcd.sh</code>，用于在各个etcd节点快速检查etcd集群健康状态。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">HOST1=192.168.2.103</span><br><span class="line">HOST2=192.168.2.104</span><br><span class="line">HOST3=192.168.2.105</span><br><span class="line">ENDPOINTS=<span class="variable">$HOST1</span>:2379,<span class="variable">$HOST2</span>:2379,<span class="variable">$HOST3</span>:2379</span><br><span class="line"><span class="comment">#因为开启了证书验证，因此执行命令需加上证书</span></span><br><span class="line">KEY=<span class="string">"--cacert=/export/Data/certs/ca.pem \</span></span><br><span class="line"><span class="string">--cert=/export/Data/certs/etcd.pem \</span></span><br><span class="line"><span class="string">--key=/export/Data/certs/etcd-key.pem"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#etcd集群健康信息</span></span><br><span class="line">etcdctl --endpoints=<span class="variable">$ENDPOINTS</span> <span class="variable">$KEY</span> endpoint health</span><br><span class="line"></span><br><span class="line"><span class="comment">#etcd集群状态信息</span></span><br><span class="line">etcdctl --endpoints=<span class="variable">$ENDPOINTS</span> <span class="variable">$KEY</span> --write-out=table endpoint status</span><br><span class="line"></span><br><span class="line"><span class="comment">#etcd集群成员信息</span></span><br><span class="line">etcdctl --endpoints=<span class="variable">$ENDPOINTS</span> <span class="variable">$KEY</span> member list -w table</span><br><span class="line"></span><br><span class="line">etcdctl --endpoints 192.168.2.103:2379,192.168.2.104:2379,192.168.2.105:2379 --cacert=/<span class="built_in">export</span>/Data/certs/ca.pem --cert=/<span class="built_in">export</span>/Data/certs/etcd.pem --key=/<span class="built_in">export</span>/Data/certs/etcd-key.pem endpoint health</span><br></pre></td></tr></table></figure><p>分发到各个etcd节点：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">chmod u+x,g+x check_etcd.sh</span><br><span class="line"></span><br><span class="line">ansible etcd -m copy -a <span class="string">"src=/export/upload/check_etcd.sh dest=/root/check_etcd.sh"</span></span><br><span class="line">ansible etcd -m shell -a <span class="string">"chmod u+x,g+x /root/check_etcd.sh"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ETCDCTL_API=3 etcdctl --cacert=/<span class="built_in">export</span>/Data/certs/ca.pem --cert=/<span class="built_in">export</span>/Data/certs/etcd.pem --key=/<span class="built_in">export</span>/Data/certs/etcd-key.pem --endpoints=<span class="string">"https://192.168.2.103:2379,https://192.168.2.104:2379,https://192.168.2.105:2379"</span> endpoint health --write-out=table</span><br><span class="line"></span><br><span class="line">etcdctl --cacert=/<span class="built_in">export</span>/Data/certs/ca.pem --cert=/<span class="built_in">export</span>/Data/certs/etcd.pem --key=/<span class="built_in">export</span>/Data/certs/etcd-key.pem --endpoints=<span class="string">"https://192.168.2.103:2379,https://192.168.2.104:2379,https://192.168.2.105:2379"</span> endpoint health --write-out=table</span><br></pre></td></tr></table></figure><p>执行etcd健康检查脚本，即可查询到etcd集群状态。下图显示etcd集群健康检查正常。</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307310147910.png" alt=""></p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://github.com/etcd-io/etcd" target="_blank" rel="external">etcd github repo</a></p><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;ETCD是一个分布式键值存储组件，可以用于服务注册与发现。这篇文章主要记录下ETCD多节点单实例集群的搭建。&lt;/p&gt;
    
    </summary>
    
      <category term="环境配置" scheme="http://blog.tsukasa.moe/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="etcd" scheme="http://blog.tsukasa.moe/tags/etcd/"/>
    
      <category term="分布式" scheme="http://blog.tsukasa.moe/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>K8s集群搭建系列（一）：Windows下使用VMWare搭建linux集群和基础配置</title>
    <link href="http://blog.tsukasa.moe/2023/07/27/Create-Virtual-Machine-for-linux-cluster/"/>
    <id>http://blog.tsukasa.moe/2023/07/27/Create-Virtual-Machine-for-linux-cluster/</id>
    <published>2023-07-27T14:55:34.000Z</published>
    <updated>2023-08-02T18:53:19.805Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><!-- toc --><p>Windows可以使用VMWare搭建linux集群，用于日常学习、工作开发测试。自身电脑配置较好的情况下，可以节省购买云服务器的开销。</p><h1 id="系统资源"><a href="#系统资源" class="headerlink" title="系统资源"></a>系统资源</h1><p>下面是我根据集群最少节点要求，自身电脑配置来规划的集群信息。</p><p>kubernetes集群：最少3台，1 master，2 worker<br>etcd集群：最少3台，1 master, 2 node<br>mysql主从同步集群：最少2台，1 master，1 slave</p><table><thead><tr><th style="text-align:left">IP</th><th style="text-align:left">角色</th><th style="text-align:left">主机名</th><th style="text-align:left">组件</th><th style="text-align:left">配置</th></tr></thead><tbody><tr><td style="text-align:left">192.168.2.183</td><td style="text-align:left">Windows10，个人PC</td><td style="text-align:left">Tsukasa</td><td style="text-align:left">VMWare</td><td style="text-align:left">-</td></tr><tr><td style="text-align:left">192.168.2.100</td><td style="text-align:left">deploy</td><td style="text-align:left">tsukasa</td><td style="text-align:left">ansible, docker, harbor</td><td style="text-align:left">4Cx2Gx20G</td></tr><tr><td style="text-align:left">192.168.2.100</td><td style="text-align:left">kubernetes</td><td style="text-align:left">k8s-master</td><td style="text-align:left">kubectl, kubelet, kubeadm, flnanel</td><td style="text-align:left">2Cx2Gx20G</td></tr><tr><td style="text-align:left">192.168.2.101</td><td style="text-align:left">kubernetes</td><td style="text-align:left">k8s-worker01</td><td style="text-align:left">kubectl</td><td style="text-align:left">2Cx1Gx20G</td></tr><tr><td style="text-align:left">192.168.2.102</td><td style="text-align:left">kubernetes</td><td style="text-align:left">k8s-worker02</td><td style="text-align:left">kubectl</td><td style="text-align:left">2Cx1Gx20G</td></tr><tr><td style="text-align:left">192.168.2.103</td><td style="text-align:left">etcd</td><td style="text-align:left">etcd01</td><td style="text-align:left">etcd</td><td style="text-align:left">2Cx1Gx20G</td></tr><tr><td style="text-align:left">192.168.2.104</td><td style="text-align:left">etcd</td><td style="text-align:left">etcd02</td><td style="text-align:left">etcd</td><td style="text-align:left">1Cx1Gx10G</td></tr><tr><td style="text-align:left">192.168.2.105</td><td style="text-align:left">etcd</td><td style="text-align:left">etcd03(leader)</td><td style="text-align:left">etcd</td><td style="text-align:left">1Cx1Gx10G</td></tr><tr><td style="text-align:left">192.168.2.106</td><td style="text-align:left">mysql</td><td style="text-align:left">mysql01</td><td style="text-align:left">mysql</td><td style="text-align:left">2Cx1Gx15G</td></tr><tr><td style="text-align:left">192.168.2.107</td><td style="text-align:left">mysql</td><td style="text-align:left">mysql02</td><td style="text-align:left">mysql</td><td style="text-align:left">2Cx1Gx15G</td></tr></tbody></table><p>System：Centos 7，64位<br>User：root/tsukasa</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[tsukasa@tsukasa ~]$ cat /proc/version</span><br><span class="line">Linux version 3.10.0-693.el7.x86_64 (builder@kbuilder.dev.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-16) (GCC) ) #1 SMP Tue Aug 22 21:09:27 UTC 2017</span><br></pre></td></tr></table></figure><h1 id="创建虚拟主机"><a href="#创建虚拟主机" class="headerlink" title="创建虚拟主机"></a>创建虚拟主机</h1><p>网络上创建虚拟主机的教程很多，为了方便，网络设置通过桥接模式上网，下面上面一章节的系统资源创建主机。</p><p>k8s-master主机配置示例：</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307272252370.png" alt=""></p><p>安装过程中，可以在下面图形化界面进行网络配置，也可以参照下一章节进行网络配置。</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307291540000.png" alt=""></p><h1 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h1><p>通过桥接模式上网，下面配置在所有节点执行。</p><h2 id="1、修改hostname"><a href="#1、修改hostname" class="headerlink" title="1、修改hostname"></a>1、修改hostname</h2><p>如果前期设置hostname不符合预期，可以执行下面命令，或者修改<code>/etc/hostname</code>文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname &lt;hostname&gt;</span><br></pre></td></tr></table></figure><h2 id="2、修改虚拟网卡置"><a href="#2、修改虚拟网卡置" class="headerlink" title="2、修改虚拟网卡置"></a>2、修改虚拟网卡置</h2><p>（1）执行命令<code>ifconfig</code>，查看虚拟网卡位<code>ens33</code>，修改网卡配置命令：<code>vim /etc/sysconfig/network-scripts/ifcfg-ens33</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=ens33</span><br><span class="line">UUID=a4214b82-9e0e-4c27-b499-9890e5068306</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPV6_PRIVACY=no</span><br><span class="line">IPADDR=192.168.2.100</span><br><span class="line">PREFIX=24</span><br><span class="line">GATEWAY=192.168.2.1</span><br><span class="line">DNS1=223.5.5.5</span><br></pre></td></tr></table></figure><p>重要参数</p><ul><li><strong>BOOTPROTO</strong>：默认是dhcp，动态分配ip地址，这里指定为static，后续ip则不会改变</li><li><strong>NAME, DEVICE</strong>: 与<code>ifconfig</code>命令中看到的网卡名称保持一致</li><li><strong>ONBOOT</strong>：yes表示开机自启</li><li><strong>IPADDR, NETMASK, GATEWAY, DNS1</strong>：根据自己的网络配置进行配置即可宿主机器（Windows）查询<code>ipconfig</code>，查到网关为192.168.2.1，子网掩码为255.255.255.0，个人PC地址为192.168.2.183。这里我们手动给k8s-master主机分配IP为192.168.2.100，不与当前局域网下其他ip冲突即可。DNS服务器选择阿里云的公共免费DNS -&gt; 223.5.5.5或者223.6.6.6</li></ul><p>（2）修改完成后，重启网络服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart network.service</span><br></pre></td></tr></table></figure><p>如果配置成功</p><ul><li>执行<code>ping baidu.com</code>可以正常联网。</li><li>局域网主机之间可以互相ping通，个人PC可以通过<code>ping 192.168.2.100</code></li></ul><h1 id="SSH免密登录"><a href="#SSH免密登录" class="headerlink" title="SSH免密登录"></a>SSH免密登录</h1><p>按照系统资源创建好所有主机并完成网络配置后，可以配置下deploy跳板机SSH免密登陆集群中的其他机器，方便后续通过ansible进行批量操作。</p><h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>SSH通过RSA非对称密钥算法实现身份验证，客户端A把公钥发给服务端B，服务端用客户端的公钥加密一段随机字符串返回给客户端，客户端用私钥解密再次发给服务端，服务端验证通过，在<code>~/.ssh/authorized_keys</code>中追加客户端公钥后，后续可以免密登陆。</p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><h3 id="服务端配置允许公钥授权登陆"><a href="#服务端配置允许公钥授权登陆" class="headerlink" title="服务端配置允许公钥授权登陆"></a>服务端配置允许公钥授权登陆</h3><p>所有主机需要修改下面配置，允许公钥授权登陆。</p><p><code>vi /etc/ssh/sshd_config</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">RSAAuthentication yes</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line">AuthorizedKeysFile  .ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>重启sshd服务</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure><h3 id="客户端生成RSA公私钥对"><a href="#客户端生成RSA公私钥对" class="headerlink" title="客户端生成RSA公私钥对"></a>客户端生成RSA公私钥对</h3><p>客户端切换到需要免密登陆的用户，执行下面命令生成RSA公私钥对，系统自动生成~/.ssh目录和公私钥。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在deploy主机下执行</span></span><br><span class="line">ssh-keygen -t rsa</span><br><span class="line"></span><br><span class="line">[root@tsukasa ~]<span class="comment"># ll ~/.ssh</span></span><br><span class="line">total 12</span><br><span class="line">-rw-------. 1 root root 1675 Jul 29 01:26 id_rsa</span><br><span class="line">-rw-r--r--. 1 root root  394 Jul 29 01:26 id_rsa.pub</span><br><span class="line">-rw-r--r--. 1 root root 1400 Jul 29 01:30 known_hosts</span><br></pre></td></tr></table></figure><h3 id="SSH免密配置"><a href="#SSH免密配置" class="headerlink" title="SSH免密配置"></a>SSH免密配置</h3><p><strong>方法一：ssh-copy-id（推荐）</strong></p><p>单台服务器配置免密登陆，后续可以通过ssh user@host直接登陆。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub user@host</span><br></pre></td></tr></table></figure><p>通常linux集群中会根据业务分配一个业务用户，后续跳板机可以通过<code>ssh &lt;ip&gt;</code>更简洁的方式登陆。我所有主机的业务用户都为tsukasa</p><p>因为集群中的机器很多，可以通过循环的方式，批量授权。具体步骤：<br>确认所有服务器设置好允许通过公钥授权登陆后，登陆到deploy主机，切换到想要免密登陆的用户如tsukasa，执行下列命令完成批量授权。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for xIp in 192.168.2.&#123;100..107&#125;; do  ssh-copy-id  -i ~/.ssh/id_rsa.pub $xIp; done</span><br></pre></td></tr></table></figure><p><strong>方法二：手动在服务端的authorized_keys文件追加客户端公钥</strong></p><p>这种方法需要在每一台服务器上执行，追加完成后，在deploy主机中分别验证：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -v user@host</span><br></pre></td></tr></table></figure><h3 id="MobaXterm或shell客户端分组维护服务器信息"><a href="#MobaXterm或shell客户端分组维护服务器信息" class="headerlink" title="MobaXterm或shell客户端分组维护服务器信息"></a>MobaXterm或shell客户端分组维护服务器信息</h3><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202308021818041.png" alt=""></p><h2 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h2><h3 id="ssh目录和authorized-keys文件的权限问题"><a href="#ssh目录和authorized-keys文件的权限问题" class="headerlink" title="~/.ssh目录和authorized_keys文件的权限问题"></a>~/.ssh目录和authorized_keys文件的权限问题</h3><p>Linux出于安全的考虑，~/.ssh目录目录权限和authorized_keys文件权限不能过大，手动创建场景要修改访问权限：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 700 ~/.ssh</span><br><span class="line">chmod 600 ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><h3 id="SSH服务端可能配置了不允许root用户登录"><a href="#SSH服务端可能配置了不允许root用户登录" class="headerlink" title="SSH服务端可能配置了不允许root用户登录"></a>SSH服务端可能配置了不允许root用户登录</h3><p>修改<code>/etc/ssh/sshd_config</code>，将<code>PermitRootLogin no</code>改为<code>PermitRootLogin yes</code></p><h3 id="Linux创建用户设置密码提示：BAD-PASSWORD-The-password-is-shorter-than-8-characters"><a href="#Linux创建用户设置密码提示：BAD-PASSWORD-The-password-is-shorter-than-8-characters" class="headerlink" title="Linux创建用户设置密码提示：BAD PASSWORD: The password is shorter than 8 characters"></a>Linux创建用户设置密码提示：BAD PASSWORD: The password is shorter than 8 characters</h3><p>linux在系统初始化的时候可以强制创建密码少于8个字符的用户，初始化成功通过命令行终端创建会失败，提示BAD PASSWORD: The password is shorter than 8 characters</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">groupadd tsukasa</span><br><span class="line">useradd tsukasa -g tsukasa</span><br><span class="line">passwd</span><br></pre></td></tr></table></figure><p>通常地，在生产环境我们不应该设置过于简单的密码，因为是个人开发环境，没有必要设置那么复杂。此时，可以这样进行密码设置：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 密码 |passwd --stdin 用户名</span><br></pre></td></tr></table></figure><h2 id="ansible工具"><a href="#ansible工具" class="headerlink" title="ansible工具"></a>ansible工具</h2><p>为了后续操作在各个服务器主机批量执行，减少重复工作，选择基于SSH协议传输数据的ansible工具。</p><p>因为所有操作在跳板机进行，ansible在deploy主机安装即可。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">yum -y install https://releases.ansible.com/ansible/rpm/release/epel-7-x86_64/ansible-2.9.27-1.el7.ans.noarch.rpm</span><br><span class="line"></span><br><span class="line">[root@tsukasa ~]<span class="comment"># ansible --version</span></span><br><span class="line">ansible 2.9.27</span><br><span class="line">  config file = /etc/ansible/ansible.cfg</span><br><span class="line">  configured module search path = [u<span class="string">'/root/.ansible/plugins/modules'</span>, u<span class="string">'/usr/share/ansible/plugins/modules'</span>]</span><br><span class="line">  ansible python module location = /usr/lib/python2.7/site-packages/ansible</span><br><span class="line">  executable location = /usr/bin/ansible</span><br><span class="line">  python version = 2.7.5 (default, Aug  4 2017, 00:39:18) [GCC 4.8.5 20150623 (Red Hat 4.8.5-16)]</span><br></pre></td></tr></table></figure><h3 id="设备管理主机列表ansible配置"><a href="#设备管理主机列表ansible配置" class="headerlink" title="设备管理主机列表ansible配置"></a>设备管理主机列表ansible配置</h3><p>在<code>/etc/ansible/hosts</code>文件中配置集群分组信息。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[master]</span><br><span class="line">192.168.2.100    node_name=k8s-master</span><br><span class="line"></span><br><span class="line">[worker]</span><br><span class="line">192.168.2.101    node_name=k8s-worker01</span><br><span class="line">192.168.2.102    node_name=k8s-worker02</span><br><span class="line"></span><br><span class="line">[etcd]</span><br><span class="line">192.168.2.103    etcd_name=etcd01</span><br><span class="line">192.168.2.104    etcd_name=etcd02</span><br><span class="line">192.168.2.105    etcd_name=etcd03</span><br><span class="line"></span><br><span class="line">[k8s:children]</span><br><span class="line">master</span><br><span class="line">worker</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">192.168.2.106</span><br><span class="line">192.168.2.107</span><br><span class="line"></span><br><span class="line">[elb]</span><br><span class="line">192.168.2.108</span><br></pre></td></tr></table></figure><h3 id="禁用主机检查"><a href="#禁用主机检查" class="headerlink" title="禁用主机检查"></a>禁用主机检查</h3><p><code>vi /etc/ansible/ansible.cfg</code><br><br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> uncomment this to <span class="built_in">disable</span> SSH key host checking</span></span><br><span class="line">host_key_checking = False</span><br></pre></td></tr></table></figure><h3 id="配置时间同步"><a href="#配置时间同步" class="headerlink" title="配置时间同步"></a>配置时间同步</h3><p>搭建集群通常要求集群节点必须精确一致，因此所有机器都需要配置时间同步，在deploy主机执行ansible命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ansible all -m <span class="built_in">command</span> -a <span class="string">"yum install ntpdate -y"</span></span><br><span class="line">ansible all -m <span class="built_in">command</span> -a <span class="string">"ntpdate ntp.aliyun.com"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将时间同步加入linux定时任务，每30分钟执行一次</span></span><br><span class="line">ansible all -m cron -a <span class="string">'minute=*/30 job="/usr/sbin/ntpdate ntp.aliyun.com" name="time sync"'</span></span><br><span class="line"><span class="comment"># 删除任务：ansible elb -m cron -a 'name="time sync" state=absent'</span></span><br></pre></td></tr></table></figure><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><p><a href="http://ip.yqie.com/ziwangyanma.aspx" target="_blank" rel="external">在线计算子网掩码</a></p><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;Windows可以使用VMWare搭建linux集群，用于日常学习、工作开发测试。自身电脑配置较好的情况下，可以节省购买云服务器的开销。&lt;/p&gt;
    
    </summary>
    
      <category term="环境配置" scheme="http://blog.tsukasa.moe/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="VMWare" scheme="http://blog.tsukasa.moe/tags/VMWare/"/>
    
      <category term="SSH" scheme="http://blog.tsukasa.moe/tags/SSH/"/>
    
      <category term="虚拟机" scheme="http://blog.tsukasa.moe/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>Maven配置文件详解和使用</title>
    <link href="http://blog.tsukasa.moe/2023/07/25/Maven-configuration-guide-01/"/>
    <id>http://blog.tsukasa.moe/2023/07/25/Maven-configuration-guide-01/</id>
    <published>2023-07-25T15:59:36.000Z</published>
    <updated>2023-07-27T17:45:05.924Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><p>本文详细分析了Maven的全局/用户级配置文件settings.xml和项目级配置文件pom.xml，便于查阅。</p><!-- toc --><h1 id="一、工作原理"><a href="#一、工作原理" class="headerlink" title="一、工作原理"></a>一、工作原理</h1><p>项目根据Maven配置，通常先从本地仓库去拉取jar包，如果没有则取远程仓库拉取，这个远程仓库可以是私服，也可以是中央仓库或者镜像仓库。</p><h1 id="二、仓库管理"><a href="#二、仓库管理" class="headerlink" title="二、仓库管理"></a>二、仓库管理</h1><p>Maven分为本地仓库和远程仓库，本地仓库即<code>&lt;localRepository&gt;</code>标签配置的路径。<br>远程仓库分为中央仓库、私服、其他公共库。</p><p>Maven仓库的关系：</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307260017629.png" alt=""></p><p>由于墙的存在，国内访问国外中央仓库不顺利，Maven拉取Jar包时会很慢甚至无法拉取，因此需要配置下国内的中央镜像仓库。镜像仓库在Maven配置文件settings.xml下进行配置。</p><p><strong>镜像仓库</strong>：将国外的中心仓库复制一份到国内，提升访问速度。</p><p><strong>私服</strong>：基于系统保密性的原因，搭建的内部远程仓库，存储一些公司内部不希望被公开的依赖服务，也可以避免因外部中央仓库网络的访问不顺畅导致的各种问题。</p><h1 id="三、Maven配置文件"><a href="#三、Maven配置文件" class="headerlink" title="三、Maven配置文件"></a>三、Maven配置文件</h1><p>Maven配置文件有三种：</p><ul><li>全局配置文件：<code>%MAVEN_HOME%\conf\settings.xml</code></li><li>用户配置文件：<code>C:\Users\用户名\.m2\settings.xml</code></li><li>项目配置文件：项目下的<code>pom.xml</code></li></ul><p>配置优先级：项目pom.xml &gt; 本地settings &gt; 全局settings，如果配置文件同时存在，会进行合并，有重复的配置时，优先级高的配置会覆盖优先级低的配置。</p><h1 id="四、Settings配置详解"><a href="#四、Settings配置详解" class="headerlink" title="四、Settings配置详解"></a>四、Settings配置详解</h1><p>首先，可以从Maven安装目录的conf下查看配置文件settings.xml，示例如下（注意仅展示结构，要经过定制才可使用）：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">settings</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/SETTINGS/1.2.0"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/SETTINGS/1.2.0 https://maven.apache.org/xsd/settings-1.2.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>/path/to/local/repo<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">interactiveMode</span>&gt;</span>true<span class="tag">&lt;/<span class="name">interactiveMode</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">offline</span>&gt;</span>false<span class="tag">&lt;/<span class="name">offline</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginGroups</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pluginGroup</span>&gt;</span>com.your.plugins<span class="tag">&lt;/<span class="name">pluginGroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginGroups</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>deploymentRepo<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">username</span>&gt;</span>repouser<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">password</span>&gt;</span>repopwd<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Another sample, using keys to authenticate. --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>siteServer<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">privateKey</span>&gt;</span>/path/to/private/key<span class="tag">&lt;/<span class="name">privateKey</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">passphrase</span>&gt;</span>optional; leave empty if not used.<span class="tag">&lt;/<span class="name">passphrase</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servers</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">proxies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">proxy</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>optional<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">active</span>&gt;</span>true<span class="tag">&lt;/<span class="name">active</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">protocol</span>&gt;</span>http<span class="tag">&lt;/<span class="name">protocol</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">username</span>&gt;</span>proxyuser<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">password</span>&gt;</span>proxypass<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">host</span>&gt;</span>proxy.host.net<span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">port</span>&gt;</span>80<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">nonProxyHosts</span>&gt;</span>local.net|some.host.com<span class="tag">&lt;/<span class="name">nonProxyHosts</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">proxy</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">proxies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>maven-default-http-blocker<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>external:http:*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>Pseudo repository to mirror external repositories initially using HTTP.<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://0.0.0.0/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">blocked</span>&gt;</span>true<span class="tag">&lt;/<span class="name">blocked</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>jdk-1.4<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">jdk</span>&gt;</span>1.4<span class="tag">&lt;/<span class="name">jdk</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>jdk14<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">name</span>&gt;</span>Repository for JDK 1.4 builds<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.myhost.com/maven/jdk14<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">layout</span>&gt;</span>default<span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">snapshotPolicy</span>&gt;</span>always<span class="tag">&lt;/<span class="name">snapshotPolicy</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Another sample --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>env-dev<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">name</span>&gt;</span>target-env<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">value</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tomcatPath</span>&gt;</span>/path/to/tomcat/instance<span class="tag">&lt;/<span class="name">tomcatPath</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">activeProfiles</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activeProfile</span>&gt;</span>alwaysActiveProfile<span class="tag">&lt;/<span class="name">activeProfile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activeProfile</span>&gt;</span>anotherAlwaysActiveProfile<span class="tag">&lt;/<span class="name">activeProfile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">activeProfiles</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1、localRepository"><a href="#1、localRepository" class="headerlink" title="1、localRepository"></a>1、localRepository</h2><p>配置本地仓库位置，默认位置为<code>${user.home}/.m2/repository</code>，可以配置为</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>D:\Workslace\Maven\maven-repository<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2、interactiveMode"><a href="#2、interactiveMode" class="headerlink" title="2、interactiveMode"></a>2、interactiveMode</h2><p>Maven是否需要和用户交互以获得输入，默认为true</p><h2 id="3、offline"><a href="#3、offline" class="headerlink" title="3、offline"></a>3、offline</h2><p>用来标识是否以离线模式运营Maven。当系统不能联网时，可以通过该配置来离线运行。</p><h2 id="4、pluginGroups"><a href="#4、pluginGroups" class="headerlink" title="4、pluginGroups"></a>4、pluginGroups</h2><p>pluginGroups当插件的组织id(groupId)没有显示提供时，供搜寻插件组织Id的列表。</p><h2 id="5、servers"><a href="#5、servers" class="headerlink" title="5、servers"></a>5、servers</h2><p>访问私服时，某些私服需要配置认证信息，在这里填写。之所以servers配置不写在pom.xml，是因为pom.xml会随着代码上传代码仓库，而settings.xml存储在本地，相对安全。因此，通常在settings.xml中配置servers</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--这是server的id（注意不是用户登陆的id），该id与distributionManagement中repository元素的id相匹配。 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>server001<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--鉴权用户名。 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">username</span>&gt;</span>my_login<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--鉴权密码。 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">password</span>&gt;</span>my_password<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--鉴权时使用的私钥位置。和前两个元素类似，私钥位置和私钥密码指定了一个私钥的路径（默认是$&#123;user.home&#125;/.ssh/id_dsa）以及如果需要的话，一个密语。将来passphrase和password元素可能会被提取到外部，但目前它们必须在settings.xml文件以纯文本的形式声明。 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">privateKey</span>&gt;</span>$&#123;usr.home&#125;/.ssh/id_dsa<span class="tag">&lt;/<span class="name">privateKey</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--鉴权时使用的私钥密码。 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">passphrase</span>&gt;</span>some_passphrase<span class="tag">&lt;/<span class="name">passphrase</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--文件被创建时的权限。如果在部署的时候会创建一个仓库文件或者目录，这时候就可以使用权限（permission）。 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filePermissions</span>&gt;</span>664<span class="tag">&lt;/<span class="name">filePermissions</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--目录被创建时的权限。 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">directoryPermissions</span>&gt;</span>775<span class="tag">&lt;/<span class="name">directoryPermissions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servers</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6、proxies"><a href="#6、proxies" class="headerlink" title="6、proxies"></a>6、proxies</h2><p>用来配置代理。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">proxies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">proxy</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--代理id。用来区分不同的代理元素。 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>myproxy<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--该代理是否是激活的那个。true则激活代理。当我们声明了一组代理，而某个时候只需要激活一个代理的时候，该元素就可以派上用处。 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">active</span>&gt;</span>true<span class="tag">&lt;/<span class="name">active</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 格式：协议://主机名:端口 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--代理的协议。 协议://主机名:端口 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">protocol</span>&gt;</span>http<span class="tag">&lt;/<span class="name">protocol</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--代理的主机名。 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">host</span>&gt;</span>proxy.somewhere.com<span class="tag">&lt;/<span class="name">host</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--代理的端口。 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">port</span>&gt;</span>8080<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--代理的用户名。用户名和密码表示代理服务器认证的登录名和密码。 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">username</span>&gt;</span>proxyuser<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--代理的密码。用户名和密码表示代理服务器认证的登录名和密码。 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">password</span>&gt;</span>somepassword<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--不该被代理的主机名列表。该列表的分隔符由代理服务器指定；例子中使用了竖线分隔符，使用逗号分隔也很常见。 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nonProxyHosts</span>&gt;</span>*.google.com|ibiblio.org<span class="tag">&lt;/<span class="name">nonProxyHosts</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">proxy</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">proxies</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="7、mirrors"><a href="#7、mirrors" class="headerlink" title="7、mirrors"></a>7、mirrors</h2><p>配置镜像仓库。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/central<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven_public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven public<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当本地仓库没有需要的依赖时，根据<code>&lt;mirrorOf&gt;</code>匹配远程仓库请求，去对应的镜像仓库地址拉取依赖。</p><p>下面是一些常用的语法示例：</p><ul><li><code>&lt;mirrorOf&gt;*&lt;mirrorOf&gt;</code>：匹配所有远程仓库。</li><li><code>&lt;mirrorOf&gt;external:*&lt;mirrorOf&gt;</code>：匹配所有不在本机上的远程仓库。</li><li><code>&lt;mirrorOf&gt;repo1,repo2&lt;mirrorOf&gt;</code>：匹配仓库repo1和repo2，使用逗号分隔多个远程仓库。</li><li><code>&lt;mirrorOf&gt;*,!repo1&lt;mirrorOf&gt;</code>：匹配所有远程仓库，repo1除外，使用感叹号将仓库从匹配中排除。</li></ul><p><strong>注意</strong>：<br>镜像仓库完全屏蔽了被镜像仓库，当镜像仓库不稳定或者停止服务的时候，Maven仍将无法访问被镜像仓库，因而将无法下载jar包。</p><p>此外，maven读取mirror配置是从上往下读取的，因此谨慎配置<code>&lt;mirrorOf&gt;*&lt;mirrorOf&gt;</code>，因为如果第一个镜像仓库配置了如此标志，那么如果该仓库即使不存在对应依赖也不会向下游查询。</p><h2 id="8、profiles"><a href="#8、profiles" class="headerlink" title="8、profiles"></a>8、profiles</h2><p>根据环境参数来调整构建配置的列表。可以将settings.xml下的profile理解为pom.xml种profile的阉割版。<br>settings.xml中的profiles包含了id、activation、repositories、pluginRepositories和properties元素</p><p><strong>注意：</strong><br>如果一个settings.xml的profile被激活，那么它的值会覆盖任何其他定义在pom.xml种带有相同id的profile</p><p><strong>激活profile有三种方式</strong></p><ul><li>通过命令行编译构建时激活，最常用的方式。</li><li>通过activeProfiles直接激活，详细往下看。</li><li>通过activation激活，详细往下看。</li></ul><p><strong>通过命令行激活</strong></p><p>通常在pom.xml中定义不同环境的profile，在编译构建不同的包时，执行下面的命令即可激活对应的profile进行编译构建。</p><p>以开发环境为例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 命令格式：mvn package -P [profile的ID]</span></span><br><span class="line">mvn package -P dev</span><br></pre></td></tr></table></figure><h3 id="repositories"><a href="#repositories" class="headerlink" title="repositories"></a>repositories</h3><p>定义了一组远程仓库的列表，当该属性对应的profile被激活时，会使用该远程仓库。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--包含需要连接到远程仓库的信息 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--远程仓库唯一标识 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>codehausSnapshots<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--远程仓库名称 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Codehaus Snapshots<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--如何处理远程仓库里发布版本的下载 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--true或者false表示该仓库是否为下载某种类型构件（发布版，快照版）开启。 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--该元素指定更新发生的频率。Maven会比较本地POM和远程POM的时间戳。这里的选项是：always（一直），daily（默认，每日），interval：X（这里X是以分钟为单位的时间间隔），或者never（从不）。 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">updatePolicy</span>&gt;</span>always<span class="tag">&lt;/<span class="name">updatePolicy</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--当Maven验证构件校验文件失败时该怎么做-ignore（忽略），fail（失败），或者warn（警告）。 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">checksumPolicy</span>&gt;</span>warn<span class="tag">&lt;/<span class="name">checksumPolicy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--如何处理远程仓库里快照版本的下载。有了releases和snapshots这两组配置，POM就可以在每个单独的仓库中，为每种类型的构件采取不同的策略。例如，可能有人会决定只为开发目的开启对快照版本下载的支持。参见repositories/repository/releases元素 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">updatePolicy</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">checksumPolicy</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--远程仓库URL，按protocol://hostname/path形式 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://snapshots.maven.codehaus.org/maven2<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--用于定位和排序构件的仓库布局类型-可以是default（默认）或者legacy（遗留）。 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">layout</span>&gt;</span>default<span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="properties"><a href="#properties" class="headerlink" title="properties"></a>properties</h3><p>定义一组拓展属性，当对应的profile被激活时该属性才生效。<br>执行<code>mvn help:system</code>可以获取System Properties和Environment Variables，根据下面注释进行使用即可。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">  1. env.X: 在一个变量前加上"env."的前缀，会返回一个shell环境变量。例如,"env.PATH"指代了$path环境变量（在Windows上是%PATH%）。</span></span><br><span class="line"><span class="comment">  2. project.x：指代了POM中对应的元素值。例如: &lt;project&gt;&lt;version&gt;1.0&lt;/version&gt;&lt;/project&gt;通过$&#123;project.version&#125;获得version的值。</span></span><br><span class="line"><span class="comment">  3. settings.x: 指代了settings.xml中对应元素的值。例如：&lt;settings&gt;&lt;offline&gt;false&lt;/offline&gt;&lt;/settings&gt;通过 $&#123;settings.offline&#125;获得offline的值。</span></span><br><span class="line"><span class="comment">  4. java System Properties: 所有可通过java.lang.System.getProperties()访问的属性都能在POM中使用该形式访问，例如 $&#123;java.home&#125;。可以实际运行获取查看</span></span><br><span class="line"><span class="comment">  5. x: 在&lt;properties/&gt;元素中，或者外部文件中设置，以$&#123;someVar&#125;的形式使用。</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">user.install</span>&gt;</span>$&#123;user.home&#125;/our-project<span class="tag">&lt;/<span class="name">user.install</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="id"><a href="#id" class="headerlink" title="id"></a>id</h3><p>全局唯一标识，如果一个settings.xml中的profile被激活，它的值会覆盖任何其它定义在pom.xml中带有相同id的profile。</p><h3 id="pluginRepositories"><a href="#pluginRepositories" class="headerlink" title="pluginRepositories"></a>pluginRepositories</h3><p>同repositories差不多，不过该标签定义的是插件的远程仓库。</p><h3 id="activation"><a href="#activation" class="headerlink" title="activation"></a>activation</h3><p>触发激活该profile的条件。注意在Maven 3.2.2之前，当满足一项指定条件时就会激活。从Maven 3.2.2开始，需要满足所有指定条件时才会激活。可以移步<a href="https://maven.apache.org/pom.html#Activation" target="_blank" rel="external">官方文档</a>查阅。</p><blockquote><p>Before Maven 3.2.2 activation occurs when one or more of the specified criteria have been met. When the first positive result is encountered, processing stops and the profile is marked as active. Since Maven 3.2.2 activation occurs when all of the specified criteria have been met.</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--profile默认是否激活的标识 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>false<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--当匹配的jdk被检测到，profile被激活。例如，1.4激活JDK1.4，1.4.0_2，而!1.4激活所有版本不是以1.4开头的JDK。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jdk</span>&gt;</span>1.5<span class="tag">&lt;/<span class="name">jdk</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--当匹配的操作系统属性被检测到，profile被激活。os元素可以定义一些操作系统相关的属性。可以结合java.lang.System.getProperties()中的属性进行配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">os</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--激活profile的操作系统的名字 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Windows XP<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--激活profile的操作系统所属家族(如 'windows') --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">family</span>&gt;</span>Windows<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--激活profile的操作系统体系结构 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">arch</span>&gt;</span>x86<span class="tag">&lt;/<span class="name">arch</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--激活profile的操作系统版本 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.2600<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">os</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--如果Maven检测到某一个属性（其值可以在POM中通过$&#123;name&#125;引用），其拥有对应的name = 值，Profile就会被激活。如果值字段是空的，那么存在属性名称字段就会激活profile，否则按区分大小写方式匹配属性值字段 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--激活profile的属性的名称 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>mavenVersion<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--激活profile的属性的值 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>2.0.3<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--提供一个文件名，通过检测该文件的存在或不存在来激活profile。missing检查文件是否存在，如果不存在则激活profile。另一方面，exists则会检查文件是否存在，如果存在则激活profile。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--如果指定的文件存在，则激活profile。 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exists</span>&gt;</span>$&#123;basedir&#125;/file2.properties<span class="tag">&lt;/<span class="name">exists</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--如果指定的文件不存在，则激活profile。 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">missing</span>&gt;</span>$&#123;basedir&#125;/file1.properties<span class="tag">&lt;/<span class="name">missing</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="9、activeProfiles"><a href="#9、activeProfiles" class="headerlink" title="9、activeProfiles"></a>9、activeProfiles</h2><p>指定激活的profile，不管profile的activation配置如何，都会激活对应的profile。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activeProfiles</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 要激活的profile id --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">activeProfile</span>&gt;</span>test<span class="tag">&lt;/<span class="name">activeProfile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">activeProfile</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">activeProfile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activeProfiles</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="10、Settings-xml配置文件中mirrors和profile中repositories的关系"><a href="#10、Settings-xml配置文件中mirrors和profile中repositories的关系" class="headerlink" title="10、Settings.xml配置文件中mirrors和profile中repositories的关系"></a>10、Settings.xml配置文件中<code>mirrors</code>和<code>profile中repositories</code>的关系</h2><p>两个标签都定义了一个远程仓库的位置，如果一个依赖同时存在于这2个仓库，会先加载哪个依赖？</p><p>mirrors相当于拦截器，maven加载依赖时，如果mirror的mirrorOf配置的值与对应的repository的id相同，那么mirror的仓库地址替换掉repository的仓库地址。</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307260222852.png" alt=""></p><h1 id="五、pom-xml配置详解"><a href="#五、pom-xml配置详解" class="headerlink" title="五、pom.xml配置详解"></a>五、pom.xml配置详解</h1><p>settings.xml定义的是全局或用户的配置，pom.xml定义的是一个项目的依赖配置。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span> = <span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span> = <span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span> = <span class="string">"http://maven.apache.org/POM/4.0.0</span></span></span><br><span class="line"><span class="tag"><span class="string">    http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 模型版本 一般不用更改 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 公司或者组织的唯一标志，也是打包成jar包路径的依据 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 例如com.companyname.project-group，maven打包jar包的路径：/com/companyname/project-group --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.companyname.project-group<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 项目的唯一ID，一个groupId下面可能多个项目，就是靠artifactId来区分的 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>projectid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 项目当前版本，格式为:主版本.次版本.增量版本-限定版本号 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--项目产生的构件类型，</span></span><br><span class="line"><span class="comment">    jar、war主要用来标识项目打包出的服务是jar包还是war包 </span></span><br><span class="line"><span class="comment">    pom一般用作多moudle的项目中 顶层的pom用来指定子moudle中需要依赖的版本--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--定义了本项目的名称与example的网址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>blog project<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>blog.tsukasa.moe<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1、dependencies"><a href="#1、dependencies" class="headerlink" title="1、dependencies"></a>1、dependencies</h2><p>定义了项目中所需要的相关依赖。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  依赖坐标 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--依赖项目的坐标三元素：groupId + artifactId + version --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-artifact<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 依赖传递 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--依赖排除，即告诉maven只依赖指定的项目，不依赖该项目的这些依赖。此元素主要用于解决版本冲突问题 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 可选依赖，用于阻断依赖的传递性。如果在项目B中把C依赖声明为可选，那么依赖B的项目中无法使用C依赖，如使用到C依赖提供的服务，需要另外引入C依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 依赖范围 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--依赖范围。在项目发布过程中，帮助决定哪些构件被包括进来</span></span><br><span class="line"><span class="comment">            - compile：默认范围，适用于所有阶段，会随着项目一起发布;  </span></span><br><span class="line"><span class="comment">            - runtime: 在执行时需要使用，如JDBC驱动，适用运行和测试阶段，不同于例如fastjson，需要在编译时使用;   </span></span><br><span class="line"><span class="comment">            - test: 只在测试时使用，用于编译和运行测试代码，例如junit，不同于junit，在发布时并不需要;    </span></span><br><span class="line"><span class="comment">            - optional: 当项目自身被依赖时，标注依赖是否传递。用于连续依赖时使用 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2、dependencyManagement"><a href="#2、dependencyManagement" class="headerlink" title="2、dependencyManagement"></a>2、dependencyManagement</h2><p>一个服务中存在多个module时，每个子module可能都引用了相同的jar包，此时可以通过maven继承，父级pom.xml统一管理依赖版本。需要使用到<code>&lt;dependencyManagement&gt;</code>标签。</p><p>示例：</p><p>父级pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--在父pom中定义子pom需要的相关依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><p>子module的pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--在子pom中  如下定义了父pom中相关依赖信息 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.10.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--因为引用了父pom 所以可以不指定版本 maven会自动去父pom中查找指定版本 此处为1.0.0 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3、properties"><a href="#3、properties" class="headerlink" title="3、properties"></a>3、properties</h2><p>properties主要用来定义常量，常见的有依赖版本、JDK版本、字节编码等，通过${value}来使用。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置依赖版本--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Environment Settings --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Spring cloud Settings   --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Finchley.RELEASE<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slf4j.version</span>&gt;</span>1.7.12<span class="tag">&lt;/<span class="name">slf4j.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--spring cloud--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- slf4j --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;slf4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>此外，Maven还通过约定大于配置的方式定义了一些常用的属性：</p><table><thead><tr><th>属性</th><th style="text-align:left">定义</th></tr></thead><tbody><tr><td><code>${basedir}</code></td><td style="text-align:left">存放pom.xml和所有的子目录</td></tr><tr><td><code>${basedir}/src/main/java</code></td><td style="text-align:left">项目的java源代码</td></tr><tr><td><code>${basedir}/src/main/resources</code></td><td style="text-align:left">项目的资源，比如说property文件，springmvc.xml</td></tr><tr><td><code>${basedir}/src/main/webapp/WEB-INF</code></td><td style="text-align:left">web应用文件目录，web项目的信息，比如web.xml</td></tr><tr><td><code>${basedir}/target</code></td><td style="text-align:left">打包输出目录</td></tr><tr><td><code>${project.version}</code></td><td style="text-align:left">项目版本</td></tr><tr><td><code>${project.groupId}</code></td><td style="text-align:left">项目groupId</td></tr></tbody></table><h2 id="4、resources"><a href="#4、resources" class="headerlink" title="4、resources"></a>4、resources</h2><p><code>&lt;build&gt;</code>下面的<code>&lt;resources&gt;</code>标签用来标识项目在编译运行时需要额外编译的文件。例如手工引入jar包、不同运行环境对应不同的profile等等。</p><p><code>&lt;testResources&gt;</code>用法与<code>&lt;resources&gt;</code>类似。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--首先将默认resources目录下的所有文件包含进来 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--只编译所有以.fxml结尾的文件 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.fxml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--排除掉所有的yaml文件 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/*.yaml<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--将不同环境下对应的不同yaml或properties文件编译运行 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">             &lt;directory&gt;src/main/profiles/dev&lt;/directory&gt;&lt;directory&gt;src/main/profiles/beta&lt;directory&gt;&lt;directory&gt;src/main/profiles/pre&lt;/directory&gt;</span></span><br><span class="line"><span class="comment">             --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/profiles/product<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.fxml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--将手工引入的jar包编译运行 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>lib<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">targetPath</span>&gt;</span>BOOT-INF/lib/<span class="tag">&lt;/<span class="name">targetPath</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.jar<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5、profile"><a href="#5、profile" class="headerlink" title="5、profile"></a>5、profile</h2><p>通常地，setting.xml用来标识不同的远程仓库，而pom中的profile一般用来标识当前profile的配置属于哪个环境，当然也可以用来指定远程仓库。</p><p>在编译打包时，通过<code>mvn package -P prod</code>命令来激活不同环境。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--激活条件 其中默认为该profile --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--当此profile被激活时，会将 project.active 的属性赋值为dev --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">project.active</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">project.active</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>test<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--当此profile被激活时，会将 project.active 的属性赋值为test --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">project.active</span>&gt;</span>test<span class="tag">&lt;/<span class="name">project.active</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--根据不同的环境 project.active 取得不同的值 从而会将不同的环境下的yaml或properties文件编译进项目中 达到只需要在编译时指定环境变量即可 不用每次都要修改配置文件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/$&#123;project.active&#125;<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.fxml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在Intellij IDEA的Maven窗口中，profile作为一个个的可选项存在。</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/icons/202307261811603.png" alt=""></p><h2 id="6、modules"><a href="#6、modules" class="headerlink" title="6、modules"></a>6、modules</h2><p>项目中存在多个module时，如果需要单独打包需要在每一个module都执行maven命令，通过父级pom.xml添加的<code>&lt;modules&gt;</code>标签可以将自服务进行聚合，只需要打包该服务，也会将子module同时打包。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入子模块所在的相对目录 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>spring-sub-module<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入同级模块所在的相对目录 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>../utils<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="7、查找并添加依赖"><a href="#7、查找并添加依赖" class="headerlink" title="7、查找并添加依赖"></a>7、查找并添加依赖</h2><p>配置好Maven后，想要添加什么依赖，可以到<a href="https://mvnrepository.com/" target="_blank" rel="external">仓库索引</a>搜索，然后选择对应的坐标，复制到pom.xml文件<code>&lt;dependencies&gt;</code>中即可。</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307251628969.png" alt=""></p><h2 id="8、依赖范围管理"><a href="#8、依赖范围管理" class="headerlink" title="8、依赖范围管理"></a>8、依赖范围管理</h2><p>Maven项目构建生命周期包括clean清理项目，default构建项目，site生成项目文档和站点。重点关注default生命周期的各个阶段：</p><table><thead><tr><th style="text-align:left">阶段</th><th style="text-align:left">中文名称</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">validate</td><td style="text-align:left">校验</td><td style="text-align:left">验证项目是否正确，所有必需信息是否可用。</td></tr><tr><td style="text-align:left">initialize</td><td style="text-align:left">初始化</td><td style="text-align:left">初始化构建状态，例如设置属性或创建目录。</td></tr><tr><td style="text-align:left">generate-sources</td><td style="text-align:left">生成源代码</td><td style="text-align:left">生成项目的源代码。</td></tr><tr><td style="text-align:left">process-sources</td><td style="text-align:left">处理源代码</td><td style="text-align:left">处理项目的源代码，例如进行过滤等操作。</td></tr><tr><td style="text-align:left">generate-resources</td><td style="text-align:left">生成资源文件</td><td style="text-align:left">生成项目的资源文件。</td></tr><tr><td style="text-align:left">process-resources</td><td style="text-align:left">处理资源文件</td><td style="text-align:left">复制并处理资源文件，为打包做准备。</td></tr><tr><td style="text-align:left"><strong>compile</strong></td><td style="text-align:left">编译</td><td style="text-align:left">编译项目的源代码。</td></tr><tr><td style="text-align:left">process-classes</td><td style="text-align:left">处理类文件（字节码）</td><td style="text-align:left">对编译后的字节码进行处理。</td></tr><tr><td style="text-align:left">generate-test-sources</td><td style="text-align:left">生成测试源代码</td><td style="text-align:left">生成项目的测试源代码。</td></tr><tr><td style="text-align:left">process-test-sources</td><td style="text-align:left">处理测试源代码</td><td style="text-align:left">处理项目的测试源代码，例如进行过滤等操作。</td></tr><tr><td style="text-align:left">generate-test-resources</td><td style="text-align:left">生成测试资源文件</td><td style="text-align:left">生成项目的测试资源文件。</td></tr><tr><td style="text-align:left">process-test-resources</td><td style="text-align:left">处理测试资源文件</td><td style="text-align:left">复制并处理测试资源文件，为测试做准备。</td></tr><tr><td style="text-align:left"><strong>test-compile</strong></td><td style="text-align:left">编译测试源代码</td><td style="text-align:left">编译项目的测试源代码。</td></tr><tr><td style="text-align:left">process-test-classes</td><td style="text-align:left">处理测试类文件（字节码）</td><td style="text-align:left">对测试编译后的字节码进行处理。</td></tr><tr><td style="text-align:left"><strong>test</strong></td><td style="text-align:left">测试</td><td style="text-align:left">使用合适的测试框架运行测试（一般我们在idea种开发项目时，可以选择屏蔽掉test步骤）。</td></tr><tr><td style="text-align:left">prepare-package</td><td style="text-align:left">准备打包</td><td style="text-align:left">进行必要的操作，以便进行打包。</td></tr><tr><td style="text-align:left"><strong>package</strong></td><td style="text-align:left">打包</td><td style="text-align:left">将编译后的代码打包成可分发的格式，例如 JAR、WAR。</td></tr><tr><td style="text-align:left">pre-integration-test</td><td style="text-align:left">集成测试前</td><td style="text-align:left">在集成测试之前进行的操作。</td></tr><tr><td style="text-align:left">integration-test</td><td style="text-align:left">集成测试</td><td style="text-align:left">处理和部署项目，以便进行集成测试。</td></tr><tr><td style="text-align:left">post-integration-test</td><td style="text-align:left">集成测试后</td><td style="text-align:left">在集成测试之后进行的操作。</td></tr><tr><td style="text-align:left">verify</td><td style="text-align:left">验证</td><td style="text-align:left">检查包是否有效，符合质量标准。</td></tr><tr><td style="text-align:left"><strong>install</strong></td><td style="text-align:left">安装</td><td style="text-align:left">将包安装到本地仓库，以便其他项目依赖。</td></tr><tr><td style="text-align:left">deploy</td><td style="text-align:left">部署</td><td style="text-align:left">将最终的包复制到远程仓库，共享给其他开发人员和项目。</td></tr></tbody></table><p><br><br>在pom.xml文件的<code>&lt;dependency&gt;</code>标签中有一个子标签<code>&lt;scope&gt;</code>，默认值为compile，记录了依赖的jar包在哪些环境有效<br><br></p><table><thead><tr><th style="text-align:center">Scope</th><th style="text-align:center">编译环境</th><th style="text-align:center">测试环境</th><th style="text-align:center">运行环境</th><th style="text-align:left">例子</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center">compile</td><td style="text-align:center">Y</td><td style="text-align:center">Y</td><td style="text-align:center">Y</td><td style="text-align:left">spring-core</td><td style="text-align:left">依赖对所有的classpath都有效</td></tr><tr><td style="text-align:center">provided</td><td style="text-align:center">Y</td><td style="text-align:center">Y</td><td style="text-align:center">-</td><td style="text-align:left">servlet-api</td><td style="text-align:left">执行打包<code>mvn package</code>时会移除，运行时由应用服务器提供</td></tr><tr><td style="text-align:center">system</td><td style="text-align:center">Y</td><td style="text-align:center">Y</td><td style="text-align:center">-</td><td style="text-align:left">本地的，Maven仓库之外的类库文件</td><td style="text-align:left">类似provided，但依赖项不会从maven仓库中查找，通过<code>&lt;systemPath&gt;</code>标签获取</td></tr><tr><td style="text-align:center">runtime</td><td style="text-align:center">-</td><td style="text-align:center">Y</td><td style="text-align:center">Y</td><td style="text-align:left">jdbc驱动包</td><td style="text-align:left">编译的时候不需要，只在运行和测试的时候需要用到</td></tr><tr><td style="text-align:center">test</td><td style="text-align:center">-</td><td style="text-align:center">Y</td><td style="text-align:center">-</td><td style="text-align:left">Junit/Mockito</td><td style="text-align:left">只在测试编译和测试运行阶段可用</td></tr></tbody></table><p>还有一个特殊的取值：<code>import</code>，仅在父级pom.xml的<code>&lt;dependencyManagement&gt;</code>的标签中可用，不做展开。</p><p>scope为system示例：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.open<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>open-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>system<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- package时会排除这个jar，运行时由应用服务器提供 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">systemPath</span>&gt;</span>$&#123;basedir&#125;/WebContent/WEB-INF/lib/open-core.jar<span class="tag">&lt;/<span class="name">systemPath</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>关于Dependency Scope的官方描述，请查阅：<a href="https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html" target="_blank" rel="external">https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html</a></p><p><strong>总结</strong></p><p>通过maven引入的jar包，里面的类都是已经编译好的字节码，与scope参数没有什么联系。</p><p>compile、runtime和provided的区别，需要在执行打包<code>mvn package</code>命令，并且打包格式时war时才能看出来。<br>通过compile和runtime引入的jar包，执行打包命令后会出现在war包里，而provided引入的jar包则不会。</p><p>通过compile和provided引入的jar包，里面的类，在项目中直接import进来就可以使用了，编译也没有问题；<br>而通过runtime引入的jar包中的类，项目代码不能直接使用，用了无法通过编译，只能通过反射的方式来调用。</p><h2 id="9、解决依赖冲突"><a href="#9、解决依赖冲突" class="headerlink" title="9、解决依赖冲突"></a>9、解决依赖冲突</h2><p>依赖传递遵循三个原则：</p><ul><li>最短路径优先：项目中存在两级以上的不同依赖，引用同一个依赖时，层级越浅，优先级越高。举例：项目A -&gt; B -&gt; C1，A -&gt; D -&gt; E -&gt; C2，其中C1和C2是同一个依赖的不同版本，此时A项目以C1的版本为准。</li><li>声明优先：对于两级以上的同级依赖，先声明的依赖会覆盖后声明的依赖包。举例：项目A -&gt; B -&gt; C1，A -&gt; D -&gt; C2，以C1版本为准。</li><li>特殊优先：同级依赖中，后加载覆盖先加载原则。举例：项目A-&gt;C1，再次配置A-&gt;C2，那么以C1版本为准。</li></ul><p>Intellij IDEA解决依赖冲突思路：</p><ul><li>通过Maven Helper插件的Dependency Analyzer对pom文件进行依赖分析，找到冲突或重复的jar包，用<code>&lt;exclusions&gt;</code>标签排除不需要的版本，要注意是否存在兼容性问题。此外也可以通过命令行<code>mvn dependency:tree</code>查看项目的依赖树，观察实际加载的版本。</li><li>编译打包后打开查看实际打的jar包版本，进行核对</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307260245785.png" alt=""></p><p><strong>依赖分析相关的maven命令</strong></p><p><code>mvn dependency:list</code>：查看项目已解析的依赖。<br><code>mvn dependency:tree</code> 查看项目的依赖树。<br><code>mvn dependency:analyze</code>：分析项目的依赖信息，有2种，根据需要选择主动声明，或者移除不需要的依赖。</p><ul><li>Used undeclared dependencies，项目中已使用但未声明的依赖。</li><li>Unused declared dependencies，项目中未使用但已声明的依赖。</li></ul><h1 id="六、参考资料"><a href="#六、参考资料" class="headerlink" title="六、参考资料"></a>六、参考资料</h1><p><a href="https://juejin.cn/post/7248219648054739002?searchId=2023072515490122F2732AC2519B001AAA" target="_blank" rel="external">Maven进阶学习指南 | 京东云技术团队</a><br><a href="https://juejin.cn/post/7257122036597669943?searchId=202307260227417A7D2F23A819C3475E0C" target="_blank" rel="external">实际上手体验maven面对冲突Jar包的加载规则 | 京东云技术团队</a></p><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;本文详细分析了Maven的全局/用户级配置文件settings.xml和项目级配置文件pom.xml，便于查阅。&lt;/p&gt;
    
    </summary>
    
      <category term="构建工具" scheme="http://blog.tsukasa.moe/categories/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Maven" scheme="http://blog.tsukasa.moe/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>Windows下Maven安装配置</title>
    <link href="http://blog.tsukasa.moe/2023/07/25/Maven-configuration-for-windows/"/>
    <id>http://blog.tsukasa.moe/2023/07/25/Maven-configuration-for-windows/</id>
    <published>2023-07-25T07:55:34.000Z</published>
    <updated>2023-07-26T06:48:42.813Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><p>Windows开发环境下Maven配置，包括环境变量、设置中央仓库镜像。</p><!-- toc --><h1 id="Maven下载安装"><a href="#Maven下载安装" class="headerlink" title="Maven下载安装"></a>Maven下载安装</h1><p>官网下载Maven压缩包：<a href="https://maven.apache.org/download.cgi" target="_blank" rel="external">https://maven.apache.org/download.cgi</a><br>下载完成后解压到需要安装的目录即可。</p><h1 id="环境变量配置"><a href="#环境变量配置" class="headerlink" title="环境变量配置"></a>环境变量配置</h1><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307251600821.png" alt=""></p><p>配置完成后打开cmd命令行输入<code>mvn -v</code>验证配置结果</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307251603354.png" alt=""></p><h1 id="仓库配置"><a href="#仓库配置" class="headerlink" title="仓库配置"></a>仓库配置</h1><p>Maven分为本地仓库和远程仓库，本地仓库即localRepository配置的路径。<br>远程仓库分为中央仓库、私服、其他公共库。</p><p>由于墙的存在，国内访问国外中央仓库不顺利，Maven拉取Jar包时会很慢甚至无法拉取，因此需要配置下国内的镜像仓库。镜像仓库在Maven下进行配置。</p><h2 id="配置镜像仓库"><a href="#配置镜像仓库" class="headerlink" title="配置镜像仓库"></a>配置镜像仓库</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>&lt;mirrorOf&gt;</code>标签用来匹配当请求什么仓库依赖时使用该镜像去下载jar包。<br>下面是一些常用的语法示例：</p><ul><li><code>&lt;mirrorOf&gt;*&lt;mirrorOf&gt;</code>：匹配所有远程仓库。</li><li><code>&lt;mirrorOf&gt;external:*&lt;mirrorOf&gt;</code>：匹配所有不在本机上的远程仓库。</li><li><code>&lt;mirrorOf&gt;repo1,repo2&lt;mirrorOf&gt;</code>：匹配仓库repo1和repo2，使用逗号分隔多个远程仓库。</li><li><code>&lt;mirrorOf&gt;*,!repo1&lt;mirrorOf&gt;</code>：匹配所有远程仓库，repo1除外，使用感叹号将仓库从匹配中排除。</li></ul><p>注意：镜像仓库完全屏蔽了被镜像仓库，当镜像仓库不稳定或者停止服务的时候，Maven仍将无法访问被镜像仓库，因而将无法下载jar包。</p><p>此外，maven读取mirror配置是从上往下读取的，因此谨慎配置<code>&lt;mirrorOf&gt;*&lt;mirrorOf&gt;</code>，因为如果第一个镜像仓库配置了如此标志，那么如果该仓库即使不存在对应依赖也不会向下游查询。</p><h2 id="配置本地仓库"><a href="#配置本地仓库" class="headerlink" title="配置本地仓库"></a>配置本地仓库</h2><p>本地仓库即jar包下载的路径。默认jar包下载到<code>${user.home}/.m2/repository</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>D:\Workslace\Maven\maven-repository<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;Windows开发环境下Maven配置，包括环境变量、设置中央仓库镜像。&lt;/p&gt;
    
    </summary>
    
      <category term="构建工具" scheme="http://blog.tsukasa.moe/categories/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Maven" scheme="http://blog.tsukasa.moe/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>Java 8新特性Lambda表达式学习笔记</title>
    <link href="http://blog.tsukasa.moe/2023/07/23/Learning-notes-for-java-8-new-feature-lambda-expression/"/>
    <id>http://blog.tsukasa.moe/2023/07/23/Learning-notes-for-java-8-new-feature-lambda-expression/</id>
    <published>2023-07-23T15:36:36.000Z</published>
    <updated>2023-07-24T16:23:46.110Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><p>Java 8新特性lambda表达式，未完成。</p><h1 id="基本理解"><a href="#基本理解" class="headerlink" title="基本理解"></a>基本理解</h1><ul><li>lambda表达式的类型依赖于上下文，通过编译器编译阶段javac即可推断出来，程序依旧要经过类型检查保证运行的安全性。</li><li>lambda表达式可以传入外部既成事实上是final的变量，比如只赋值了一次。</li><li>函数接口是只有一个抽象方法的接口，用作lambda表达式的类型</li><li>Stream 是用函数式编程方式在集合类上进行复杂操作的工具</li><li>通常是一系列的惰性求值行成的链，然后通过一个早求值返回想要的结果，与Builder模式有共通之处。</li><li>及早求值函数执行之前，惰性函数求值不会真正参与运算。</li><li>Stream是一个接口，继承了AutoCloseable，一个流只能消费一次（调用及早求值方法一次）。</li><li>流可以嵌套使用，流的某个步骤需要某个值也可以通过流来获取。</li><li>掌握重要的函数接口，要融会贯通。</li></ul><p>基本函数接口：</p><table><thead><tr><th>接口</th><th>参数</th><th>返回类型</th><th>示例</th></tr></thead><tbody><tr><td>Predicate<t></t></td><td>T</td><td>boolean</td><td>这张唱片已经发行了吗</td></tr><tr><td>Consumer<t></t></td><td>T</td><td>void</td><td>输出一个值</td></tr><tr><td>Function<t,r></t,r></td><td>T</td><td>R</td><td>获得 Artist 对象的名字</td></tr><tr><td>Supplier<t></t></td><td>None</td><td>T</td><td>工厂方法</td></tr><tr><td>UnaryOperator<t></t></td><td>T</td><td>T</td><td>逻辑非（!）</td></tr><tr><td>BinaryOperator<t></t></td><td>(T, T)</td><td>T</td><td>求两个数的乘积（*）</td></tr></tbody></table><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Predicate&lt;Integer&gt; predicate = x -&gt; x == <span class="number">1</span>;</span><br><span class="line">Consumer&lt;Integer&gt; consumer = x -&gt; System.out.println(x);</span><br><span class="line">Function&lt;Integer, Integer&gt; function = x -&gt; x = x + <span class="number">1</span>;</span><br><span class="line">Supplier&lt;Integer&gt; supplier = () -&gt; <span class="number">1</span>;</span><br><span class="line">UnaryOperator&lt;Integer&gt; unaryOperator = x -&gt; x + <span class="number">1</span>;</span><br><span class="line">BinaryOperator&lt;Integer&gt; binaryOperator = (x, y) -&gt; x * y;</span><br><span class="line"></span><br><span class="line">System.out.println(predicate.test(<span class="number">1</span>));</span><br><span class="line">consumer.accept(<span class="number">1</span>);</span><br><span class="line">System.out.println(function.apply(<span class="number">1</span>));</span><br><span class="line">System.out.println(supplier.get());</span><br><span class="line">System.out.println(unaryOperator.apply(<span class="number">1</span>));</span><br><span class="line">System.out.println(binaryOperator.apply(<span class="number">1</span>, <span class="number">2</span>));</span><br></pre></td></tr></table></figure><h1 id="基本特性"><a href="#基本特性" class="headerlink" title="基本特性"></a>基本特性</h1><ul><li>基本类型与包装类型：ToLongFunction, mapToInt</li><li>@FunctionalInterface注解：强制javac检查一个接口是否符合函数接口的标准，即只有一个抽象方法的接口，如Comparator接口的compare方法则是抽象方法，其他不是。</li><li>默认方法（default）：增加默认方法的目的是实现接口向后兼容，类中重写的方法优先级高于接口中定义的默认方法</li><li>接口多重继承默认方法相同，需要显示指定调用的父接口方法</li><li>Optional避免NullPointerException，消除if语句</li><li>方法引用、元素排序、收集器（转换为其他集合、转换成值、数据分块、数据分组、字符串）、并行处理</li><li>方法引用是一种更简短的语法，如artist -&gt; artist.getName()可以简写为Artist::getName，标准语法为Classname::methodName，分为三种:<ul><li>指向静态方法的引用，如Objects::nonNull</li><li>指向任意类型实例方法的引用，如String::length</li><li>指向现有对象的实例方法引用，如user::getName</li></ul></li><li>使用并行流时，forEach无法保证元素是按顺序处理，应该使用forEachOrdered。</li><li>peak可以查看流中的每个值，类似forEach操作但不是及早求值方法</li></ul><h1 id="常用场景"><a href="#常用场景" class="headerlink" title="常用场景"></a>常用场景</h1><h2 id="常用Java-8-API"><a href="#常用Java-8-API" class="headerlink" title="常用Java 8 API"></a>常用Java 8 API</h2><p>collect：将流转换为一个集合。<br>filter：过滤出流中符合条件的元素。<br>map：将流中的每个元素转化为另一个元素。<br>flatMap：将底层元素全部抽出来放到一个流中，将多个流合并为一个流进行操作。<br>reduce：将Stream流中的数据通过递归的方式，聚合成一个数据，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Stream.of(nums1, nums2).flatMap(num -&gt; num.stream()).forEach(System.out::println);</span><br></pre></td></tr></table></figure><p>reduce：递归概念，归约成一个值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reduce([p1,p2,p3,p4],fn) = reduce([fn(p2,p4),fn(p1,p3)])</span><br></pre></td></tr></table></figure><h2 id="集合的遍历（List-Set-Map）"><a href="#集合的遍历（List-Set-Map）" class="headerlink" title="集合的遍历（List, Set, Map）"></a>集合的遍历（List, Set, Map）</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 遍历map</span></span><br><span class="line">map.forEach((key, value) -&gt; System.out.println(key + <span class="string">"="</span> + value));</span><br></pre></td></tr></table></figure><p>## </p><h2 id="集合之间的转换"><a href="#集合之间的转换" class="headerlink" title="集合之间的转换"></a>集合之间的转换</h2><p>常用方法如下，可以查看源码获取重载方法：<br>Collectors.toList(), Collectors.toSet(), Collectors.toMap(), Collectors.toConcurrentMap(), Collectors.toArray()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// list转map</span></span><br><span class="line">Map&lt;String, String&gt; map = channelParameters.stream()</span><br><span class="line">            .sorted(Comparator.comparing(ChannelParameter::getVersion).reversed())</span><br><span class="line">            .collect(Collectors.toMap(ChannelParameter::getName,</span><br><span class="line">                ChannelParameter::getValue, (v1, v2) -&gt; v1));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对象数组转Map</span></span><br><span class="line">Map&lt;String, String&gt; studentMap = Arrays.stream(studentArray).collect(Collectors.toMap(Student::getName, Student::getScore));</span><br><span class="line"></span><br><span class="line"><span class="comment">// String[]转set</span></span><br><span class="line">Set&lt;String&gt; set = Arrays.stream(strArray).collect(Collectors.toSet());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 多线程解密</span></span><br><span class="line">List&lt;Runnable&gt; jobs = getDecryptJobs(xxx);</span><br><span class="line">CompletableFuture&lt;?&gt;[] futures = jobs.stream()</span><br><span class="line">    .map(job -&gt; CompletableFuture.runAsync(job,</span><br><span class="line">        AsyncManager.getExecutor(<span class="string">"decryptParam"</span>, getSupportExecutorProvider())))</span><br><span class="line">    .toArray(CompletableFuture[]::<span class="keyword">new</span>);</span><br></pre></td></tr></table></figure><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 写法1</span></span><br><span class="line">Collections.sort(studentList);</span><br><span class="line"><span class="comment">// 写法2， Comparator也可以不采取匿名类的形式</span></span><br><span class="line">Collections.sort(studentList, <span class="keyword">new</span> Comparator&lt;Student&gt;() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Student o1, Student o2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> o1.getScore() - o2.getScore();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 写法3</span></span><br><span class="line">Collections.sort(studentList, (o1, o2) -&gt; o1.getScore() - o2.getScore());</span><br><span class="line"><span class="comment">// 写法4</span></span><br><span class="line">Collections.sort(studentList, Comparator.comparingInt(Student::getScore));</span><br><span class="line"><span class="comment">// 写法5，推荐</span></span><br><span class="line">studentList.sort(Comparator.comparingInt(Student::getScore));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数组排序</span></span><br><span class="line">Arrays.sort(strArray);</span><br></pre></td></tr></table></figure><p><strong>list对象多字段排序</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 先按照score降序排列，再按照name升序排列</span></span><br><span class="line"><span class="comment">// 写法1</span></span><br><span class="line">list.stream().sorted(Comparator.comparing(Student::getScore).reversed().thenComparing(Student::getName));</span><br><span class="line"><span class="comment">// 写法2</span></span><br><span class="line">list.stream().sorted(Comparator.comparing(Student::getScore, Comparator.reverseOrder()).thenComparing(Student::getName));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 及早求值排序</span></span><br><span class="line">versionList.sort((a, b) -&gt; b.getUpdateTime().compareTo(a.getUpdateTime()));</span><br></pre></td></tr></table></figure><p><strong>字典排序拼接字符串用作签名</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">String sortedContent = data.entrySet().stream()</span><br><span class="line">        .filter(key -&gt; !Constants.FIELD_SIGN.equals(data.get(key)))</span><br><span class="line">        .filter(key -&gt; StringUtils.isNoneBlank(key.getValue()))</span><br><span class="line">        .sorted(Map.Entry.comparingByKey())</span><br><span class="line">        .map(entry -&gt; entry.getKey() + <span class="string">"="</span> + StringUtils.trim(entry.getValue()))</span><br><span class="line">        .collect(Collectors.joining(<span class="string">"&amp;"</span>));</span><br></pre></td></tr></table></figure><h2 id="Optional处理空值"><a href="#Optional处理空值" class="headerlink" title="Optional处理空值"></a>Optional处理空值</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 避免if判空，空值返回orElse的值</span></span><br><span class="line">List&lt;ChannelResponse.ChannelParameter&gt; channelParameters = Optional.ofNullable(response)</span><br><span class="line">            .map(ChannelResponse::getChannelParameters)</span><br><span class="line">            .orElse(Collections.emptyList());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 流中使用流，max函数</span></span><br><span class="line">String latestVal = Optional.ofNullable(channelParameters)</span><br><span class="line">            .map(data -&gt; data.stream()</span><br><span class="line">                .filter(v -&gt; name.equals(v.getName()))</span><br><span class="line">                .max(Comparator.comparing(GetChannelParametersResponse.ChannelParameter::getVersion))</span><br><span class="line">                .map(GetChannelParametersResponse.ChannelParameter::getValue)</span><br><span class="line">                .get())</span><br><span class="line">            .orElse(<span class="keyword">null</span>);</span><br></pre></td></tr></table></figure><p>Comparable与Java8的Comparator区别？<br>多层排序？<br>Arrays类使用<br>使用各套测试框架，每个框架都要实现一定的测试场景<br>Mockito测试框架</p><p>Runtime.getRuntime().availableProcessors()<br>Arrays.parallelSetAll(array, i -&gt; i);</p><p>数组上的并行化操作：parallelPrefix, parallelSetAll, parallelSort</p><p>javafx.util.Pair使用</p><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;Java 8新特性lambda表达式学习笔记，未完成。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://blog.tsukasa.moe/categories/Java/"/>
    
    
      <category term="Java 8" scheme="http://blog.tsukasa.moe/tags/Java-8/"/>
    
  </entry>
  
  <entry>
    <title>《代码整洁之道》读书笔记</title>
    <link href="http://blog.tsukasa.moe/2023/07/23/Reading-notes-for-Clean-code/"/>
    <id>http://blog.tsukasa.moe/2023/07/23/Reading-notes-for-Clean-code/</id>
    <published>2023-07-23T15:32:36.000Z</published>
    <updated>2023-07-25T05:02:23.738Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>有时候业务交付压力使得开发人员只关注了交付本身，而忽略了质量，但作为一名研发人员，质量上是不能够作让步的。有些业务金融敏感，搞砸了很可能损害公司商业利益，自己也丢掉饭碗。因此，重申质量的重要性是很有必要的。</p><p>质量是上百万次全身心投入的结果，需要落实到每天，每小时之中。开发工作中，我们通常会遇到2种情形，一种是新特性开发，特点是与原有代码关联较少，另一种是特性增强，需要改大量原有代码。开发人员通常会想先把功能开发完成，再去重构、优化，虽然说出发点不错，但稍后等于永不(Later equals never)。</p><p>这里我提出自己的想法，抛砖引玉。</p><ul><li>对于自己编写和改动的部分，有重构思路可以直接着手修改，不然拖到转测了后只会不了了之。对于非特性开发范围的不合理的代码，需要认真评估。<br>对于有把握的重构、优化(必须能够评估影响)，不要害怕修改。重构其实不意味着重写，提取方法，修改参数命名等等利用IDE是比较安全便捷的。我们要胆大心细，谨慎地修改，修改后一定要自测通过，确保DevOps测试用例通过，最好申请重构单号，单独做一次commit，在代码评审时请大家评审自己的改动。</li><li>对于无法评估的影响范围和后果的修改，坚决不修改，要学会敬畏，否则一个配置的改动将引发大灾难。</li></ul><p>作为开发，要做到小处诚实，放下身段，谦虚审慎承认代码现状，做到不自欺，而后思改进。</p><p>写代码跟写文章一样，结构条理清晰，如白居易的诗一样通俗易懂，代码即注释，注释太多可能预示着功能的难以理解，代码含义应由自身表达，重构时直接以用代码代替文字描述列大纲，从上到下去编写。<br>此外重构的过程，遵循小步快跑，重构完一个独立的代码片段应该及时验证。</p><h1 id="整洁代码定义"><a href="#整洁代码定义" class="headerlink" title="整洁代码定义"></a>整洁代码定义</h1><p>衡量代码质量的唯一有效标准：WTF/minute in code review，意思是代码评审者每分钟骂出”WTF”的频率=w=</p><p>写整洁代码，要遵循大量小技巧。</p><p>把写代码当成故事来讲，让听故事的人能够清晰的了解整个故事情节。</p><p>破窗理论：一栋建筑的窗户破了，如果没人去修理，那将越来越多人的破坏其他窗户。意思是环境中的不良现象如果被放任存在，会诱使人们仿效，甚至变本加厉。<br>代码开发中深受破窗理论影响，想必每个开发都会遇到代码中一串长长的if else if条件代码块在不断膨胀，因为人们刚开始觉得不对劲，但是想了想应该有历史原因而效仿着前辈，继续写着shit code，却没有人想着用多态或者查表得方式重构下。</p><h2 id="什么是整洁代码"><a href="#什么是整洁代码" class="headerlink" title="什么是整洁代码"></a>什么是整洁代码</h2><p>几乎没有改进的余地的代码即好代码</p><ul><li>通过所有测试</li><li>没有重复代码</li><li>体现系统中的全部设计理念</li></ul><p>所有程序都由极为相似的元素构成，如“在集合中查找某物”，一旦出现这种情况，可以把实现手段封装到更抽象的方法中。</p><p>一个人写代码的过程，读与写花费时间的比例超过10:1，因此要先让代码易读。<br>让营地比你来时更干净，消除重复和提高表达力。</p><h1 id="命名"><a href="#命名" class="headerlink" title="命名"></a>命名</h1><p><strong>名副其实</strong></p><ul><li>一旦发现更好的名称，就换掉旧的。</li><li>上下文在代码中要被明确的体现出来，降低代码的模糊度。</li></ul><p><strong>避免误导</strong><br>举例：accountList的list有特殊含义，考虑accounts, accountGroup, bunchOfAccounts</p><p><strong>做有意义的区分</strong><br>xxxInfo，xxxData是废话</p><p><strong>一些准则</strong></p><ul><li>使用读得出来的名称</li><li>使用可搜索的名称</li><li>避免使用新的编码约定</li><li>类名应是名词或名词短语</li><li>避免使用Manager, Processor等？</li><li>方法名应当是动词或动词短语</li><li>使用解决方案领域名称</li><li>添加有意义的语境</li><li>前缀不要添加没有用的语境，短名称足够清楚就比长名称好</li></ul><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><ul><li>短小、还要更短小。100行以内，20行最佳</li><li>只做一件事。判断一个函数是否只做了一件事，就看是否能再拆出一个函数</li><li>每个函数一个抽象层级，自上而下读代码</li><li>Switch语句可以考虑利用多态，移动到工厂底下</li><li>使用描述性的名称，长而具有描述性的名称，比短而令人费解的名称好，比描述性的注释好；命名方式保持一致</li><li>函数参数<ul><li>函数参数尽量少，超过3个参数可以考虑参数对象的方式。没有参数时需要注意是否大量运用上下文，大量运用上下文不是一个好的设计。</li><li>标识参数丑陋不堪，不要往参数传入布尔值（意味着true做一件事，false做另一件事）</li><li>遵循数学约定表示，如new Point(x, y)也是见参知义。</li><li>动词、动名词做为参数名称</li><li>无副作用，函数只承诺做一件事，但实际是谎言。</li><li>避免使用输出参数。</li></ul></li><li>分隔指令（做某件事）与询问（判断语句）</li><li>使用异常替代错误码，因为返回错误码意味着可能要马上进行处理</li><li>抽离try/catch块</li></ul><h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><ul><li>别给糟糕的代码加注释，重新写吧。</li><li>注释的恰当用法是弥补我们在用代码表达意图时遭遇的失败，注释总是一种失败。把力气用在写清楚代码上。</li></ul><h1 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h1><ul><li>关系密切的概念和代码应该互相靠近，便于阅读理解，如函数调用，调用者放在被调用者的上面。</li><li>变量声明应该靠近使用的位置</li><li>遵循一个编程规约，如阿里Java编程规约</li></ul><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;有时候业务交付压力使得开发人员只关注了交付本身，而忽略了质量，但作为一名研发人员，质量上是不能够作让步的。有些业务金融敏感，搞砸了很可能损害公司商业利益，自己也丢掉饭碗。因此，重申质量的重要性是很有必要的。&lt;/p&gt;
    
    </summary>
    
      <category term="编程开发" scheme="http://blog.tsukasa.moe/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Clean Code" scheme="http://blog.tsukasa.moe/tags/Clean-Code/"/>
    
      <category term="重构" scheme="http://blog.tsukasa.moe/tags/%E9%87%8D%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>盘点Java项目中的线程池</title>
    <link href="http://blog.tsukasa.moe/2023/07/23/Anylysis-thread-pool-of-java-project/"/>
    <id>http://blog.tsukasa.moe/2023/07/23/Anylysis-thread-pool-of-java-project/</id>
    <published>2023-07-23T15:28:50.000Z</published>
    <updated>2023-07-24T16:34:44.983Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这篇文章主要梳理下一个项目的各种线程池，以及这些线程池如何配合着完成工作，都实现了些什么功能。文章主要着眼于整体的线程池设计，可能涉及具体线程池的实现，但不会做太深入的讲解，目的是让自己对整体项目有个线程池视角的全局观。</p><h1 id="线程池基本概念"><a href="#线程池基本概念" class="headerlink" title="线程池基本概念"></a>线程池基本概念</h1><p><strong>线程池是什么</strong><br>进程是内存分配的基本单位，而线程是CPU调度的基本单位，线程池通过预先维护一定数量的线程，减少线程创建与销毁的开销，提升响应速度，便于管理系统资源。</p><p><strong>线程池解决的问题是什么</strong><br>线程池解决的核心问题是资源管理的问题。并发环境下，系统无法确定某个时刻，有多少任务需要执行，有多少资源需要投入，而系统的资源是有限的，这个不确定性会带来以下问题：</p><ul><li>频繁的创建、调度、销毁资源，会带来额外的消耗，降低响应速度；</li><li>资源无限制的申请可能导致系统资源被耗尽。</li></ul><p><strong>应用</strong></p><blockquote><ul><li>数据库连接池</li><li>Tomcat处理线程池</li></ul></blockquote><h1 id="项目线程池的视图和分类"><a href="#项目线程池的视图和分类" class="headerlink" title="项目线程池的视图和分类"></a>项目线程池的视图和分类</h1><p>项目</p><h2 id="Tomcat线程池"><a href="#Tomcat线程池" class="headerlink" title="Tomcat线程池"></a>Tomcat线程池</h2><h2 id="项目请求处理线程池"><a href="#项目请求处理线程池" class="headerlink" title="项目请求处理线程池"></a>项目请求处理线程池</h2><h2 id="定时任务线程池"><a href="#定时任务线程池" class="headerlink" title="定时任务线程池"></a>定时任务线程池</h2><h2 id="数据库客户端连接线程池"><a href="#数据库客户端连接线程池" class="headerlink" title="数据库客户端连接线程池"></a>数据库客户端连接线程池</h2><h2 id="数据库服务端连接池"><a href="#数据库服务端连接池" class="headerlink" title="数据库服务端连接池"></a>数据库服务端连接池</h2><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这篇文章主要梳理下一个项目的各种线程池，以及这些线程池如何配合着完成工作，都实现了些什么功能。文章主要着眼于整体的线程池设计，可能涉及具体线程池的实现，但不会做太深入的讲解，目的是让自己对整体项目有个线程池视角的全局观。&lt;/p&gt;
&lt;p&gt;未完成。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://blog.tsukasa.moe/categories/Java/"/>
    
    
      <category term="线程池" scheme="http://blog.tsukasa.moe/tags/%E7%BA%BF%E7%A8%8B%E6%B1%A0/"/>
    
  </entry>
  
  <entry>
    <title>Intellij IDEA个性化配置</title>
    <link href="http://blog.tsukasa.moe/2023/07/14/Intellij-IDEA-custom-configurations/"/>
    <id>http://blog.tsukasa.moe/2023/07/14/Intellij-IDEA-custom-configurations/</id>
    <published>2023-07-14T07:03:08.000Z</published>
    <updated>2023-07-26T15:51:32.040Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><p>文章记录我的Intellij IDEA配置，方便以后在新环境快速配置一个符合个人使用习惯的IDE</p><!-- toc --><h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><p>通常的IDEA的配置分为三种：当前项目的全局设置，项目或Module的单独设置，新建项目的设置。</p><ul><li>全局设置快捷键：<code>Ctrl+Alt+S</code></li><li>项目或者Module设置快捷键：<code>Ctrl+Shift+Alt+S</code></li><li>新建项目的设置：<code>File -&gt; New Project Setup -&gt; Setting for New Project...</code></li></ul><h1 id="JDK配置"><a href="#JDK配置" class="headerlink" title="JDK配置"></a>JDK配置</h1><p>通常Intellij IDEA也会内置有JDK或者JRE环境，为了便于管理，建议使用自己PC下载的JDK和JRE</p><h2 id="1、当前项目的全局设置"><a href="#1、当前项目的全局设置" class="headerlink" title="1、当前项目的全局设置"></a>1、当前项目的全局设置</h2><p>JDK Importer<br>配置Maven下载依赖默认的JDK，配置路径：<code>File | Settings | Build, Execution, Deployment | Build Tools | Maven | Importing</code></p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307142251679.png" alt=""></p><p>Java Compiler<br>Project bytecode version配置</p><p>配置路径：<code>File | Settings | Build, Execution, Deployment | Compiler | Java Compiler</code></p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307150206099.png" alt=""></p><p>Maven Runner<br>配置路径：<code>File | Settings | Build, Execution, Deployment | Build Tools | Maven | Runner</code></p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307142254340.png" alt=""></p><h2 id="2、项目或Module的单独设置"><a href="#2、项目或Module的单独设置" class="headerlink" title="2、项目或Module的单独设置"></a>2、项目或Module的单独设置</h2><p>Project</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307150157308.png" alt=""></p><p>Modules：可以设置不同的Module使用不同的配置</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307150158511.png" alt="Sources"><br><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307150158870.png" alt="Dependencies"></p><p>SDKs：多版本JDK管理</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307150201185.png" alt=""></p><h2 id="3、新建项目的设置"><a href="#3、新建项目的设置" class="headerlink" title="3、新建项目的设置"></a>3、新建项目的设置</h2><p>注意新建项目配置面板是通过<code>File -&gt; New Project Setup -&gt; Setting for New Project...</code>方式打开，下面的配置与全局的类似。</p><p>JDK Importer<br>配置路径：<code>File | Settings | Build, Execution, Deployment | Build Tools | Maven | Importing</code></p><p>Java Compiler<br>Project bytecode version配置</p><p>配置路径：<code>File | Settings | Build, Execution, Deployment | Compiler | Java Compiler</code></p><p>Maven Runner<br>配置路径：<code>File | Settings | Build, Execution, Deployment | Build Tools | Maven | Runner</code></p><h1 id="Maven配置"><a href="#Maven配置" class="headerlink" title="Maven配置"></a>Maven配置</h1><p>需要配置的地方：</p><ul><li>当前项目的全局设置</li><li>新建项目的设置</li></ul><p>配置路径：<code>File | Settings | Build, Execution, Deployment | Build Tools | Maven</code><br>设置Maven的home地址，修改Setting文件，以及Maven进行Jar包依赖下载时，可以设置<code>Thread Count</code>多线程方式加快下载速度.</p><p>可以输入CPU核心数2C或者线程数 8，根据PC性能设置即可。</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307142253846.png" alt=""></p><h1 id="Gradle配置"><a href="#Gradle配置" class="headerlink" title="Gradle配置"></a>Gradle配置</h1><p>需要配置的地方：</p><ul><li>当前项目的全局设置</li><li>新建项目的设置</li></ul><p><code>File | Settings | Build, Execution, Deployment | Build Tools | Gradle</code>下配置Gradle的根目录</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307150133582.png" alt=""></p><h1 id="设置字体"><a href="#设置字体" class="headerlink" title="设置字体"></a>设置字体</h1><p>需要配置的地方：</p><ul><li>当前项目的全局设置</li></ul><h2 id="1、软件界面字体设置"><a href="#1、软件界面字体设置" class="headerlink" title="1、软件界面字体设置"></a>1、软件界面字体设置</h2><p>设置界面字体大小<code>File | Settings | Appearance &amp; Behavior | Appearance</code>，勾选<code>Use custom font</code>，仅修改字体大小：16或14。</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307142233356.png" alt=""></p><h2 id="2、代码文件字体设置"><a href="#2、代码文件字体设置" class="headerlink" title="2、代码文件字体设置"></a>2、代码文件字体设置</h2><p><code>File | Settings | Editor | Font</code>可以设置代码的字体类型、大小。</p><ul><li>字体类型：Consolas</li><li>字体大小：16，18均可</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307142218703.png" alt=""></p><p>通过鼠标滚动调节字体大小开关，根据需要打开。</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307142245046.png" alt=""></p><h2 id="3、控制台字体设置"><a href="#3、控制台字体设置" class="headerlink" title="3、控制台字体设置"></a>3、控制台字体设置</h2><p><code>File | Settings | Editor | Color Scheme | Console Font</code>下设置，默认配置挺合适，根据需要调整。</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307142242889.png" alt=""></p><h1 id="全局统一编码"><a href="#全局统一编码" class="headerlink" title="全局统一编码"></a>全局统一编码</h1><h2 id="1、项目文件编码配置"><a href="#1、项目文件编码配置" class="headerlink" title="1、项目文件编码配置"></a>1、项目文件编码配置</h2><p>需要配置的地方：</p><ul><li>当前项目的全局设置</li></ul><p>统一编码可以避免不必要的麻烦，将所有文件编码格式为UTF-8。<br>建议整个开发团队都勾选<code>Transparent-native-to-ascii</code>，否则properties文件中的中文将使用unicode编码进行展示。</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307142103136.png" alt=""></p><h2 id="2、设置控制台文字编码"><a href="#2、设置控制台文字编码" class="headerlink" title="2、设置控制台文字编码"></a>2、设置控制台文字编码</h2><p><code>File | Settings | Editor | General | Console</code>设置控制台日志的字体编码，尽管这个设置非必须，但是建议保持统一。</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307142239386.png" alt=""></p><h2 id="3、设置VM-Options编码"><a href="#3、设置VM-Options编码" class="headerlink" title="3、设置VM Options编码"></a>3、设置VM Options编码</h2><p>点击顶部菜单栏<code>Help-&gt;Edit Custom VM Options</code>，会打开下面的配置文件idea64.exe.vmoption<br><code>C:\Users\Tsukasa\AppData\Roaming\JetBrains\IdeaIC2023.1\idea64.exe.vmoptions</code></p><p>设置file.encoding为UTF-8：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-Dfile.encoding=UTF-8</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307142127194.png" alt=""></p><h2 id="4、IDEA安装目录下的idea64-exe-vmoptions也要设置文件编码"><a href="#4、IDEA安装目录下的idea64-exe-vmoptions也要设置文件编码" class="headerlink" title="4、IDEA安装目录下的idea64.exe.vmoptions也要设置文件编码"></a>4、IDEA安装目录下的idea64.exe.vmoptions也要设置文件编码</h2><p>配置文件：<code>C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.1.4\bin</code>，添加编码配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-Dfile.encoding=UTF-8</span><br></pre></td></tr></table></figure><h2 id="5、设置Tomcat-VM-Options"><a href="#5、设置Tomcat-VM-Options" class="headerlink" title="5、设置Tomcat VM Options"></a>5、设置Tomcat VM Options</h2><p>如果用Tomcat方式启动项目，也需要设置编码。</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307142208797.png" alt=""></p><h2 id="6、项目的-idea-encodings-xml文件中设置编码"><a href="#6、项目的-idea-encodings-xml文件中设置编码" class="headerlink" title="6、项目的.idea/encodings.xml文件中设置编码"></a>6、项目的.idea/encodings.xml文件中设置编码</h2><p>可以检查下文件是否有其他编码格式，结合实际项目情况再进行配置。<br><a href="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307151024244.png" target="_blank" rel="external">https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307151024244.png</a><br><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307150043883.png" alt=""></p><p>TIPS：IDEA中，在软件页面的右下角处，可以查看和设置当前打开文件的编码格式。</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307150033237.png" alt=""></p><p>文件编码设置完成后，重启IDEA。</p><h1 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h1><h2 id="1、配置显示内存使用情况"><a href="#1、配置显示内存使用情况" class="headerlink" title="1、配置显示内存使用情况"></a>1、配置显示内存使用情况</h2><p><code>Shift+Shift</code>按键直接输入<code>Show memory indicator</code>，打开开关即可。</p><h2 id="2、设置背景图片"><a href="#2、设置背景图片" class="headerlink" title="2、设置背景图片"></a>2、设置背景图片</h2><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307150138213.png" alt=""></p><h2 id="3、控制台shell更换为git-bash"><a href="#3、控制台shell更换为git-bash" class="headerlink" title="3、控制台shell更换为git bash"></a>3、控制台shell更换为git bash</h2><p>配置位置：<code>File | Settings | Tools | Terminal</code>，更换shell path。可以设置</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307141513510.png" alt=""></p><h2 id="4、文件标签多行显示"><a href="#4、文件标签多行显示" class="headerlink" title="4、文件标签多行显示"></a>4、文件标签多行显示</h2><p>一般项目比较大，需要打开很多个标签，可以设置最多允许打开的TAB数，以及分行显示。如下图，取消勾选<code>Show tabs in one raw</code></p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307150019838.png" alt=""></p><h2 id="5、代码补全大小写不敏感"><a href="#5、代码补全大小写不敏感" class="headerlink" title="5、代码补全大小写不敏感"></a>5、代码补全大小写不敏感</h2><p><code>File | Settings | Editor | General | Code Completion</code>，设置代码补全大小写不敏感</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307142052496.png" alt=""></p><h2 id="6、统一设置Copyright"><a href="#6、统一设置Copyright" class="headerlink" title="6、统一设置Copyright"></a>6、统一设置Copyright</h2><p>公司项目，统一在设置CopyRight，配置路径：<code>File | Settings | Editor | Copyright</code></p><h2 id="7-代码模板"><a href="#7-代码模板" class="headerlink" title="7.代码模板"></a>7.代码模板</h2><p>配置路径：<code>File | Settings | Editor | File and Code Templates</code></p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307151529295.png" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@package</span>: $&#123;PACKAGE_NAME&#125;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: Description message</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: $&#123;USER&#125;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: Created in $&#123;DATE&#125; $&#123;TIME&#125;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@copyright</span>: Copyright (c) $&#123;YEAR&#125;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: V1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@modified</span>: $&#123;USER&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><h1 id="内存配置"><a href="#内存配置" class="headerlink" title="内存配置"></a>内存配置</h1><p>通常地，IDEA内存需要根据计算机配置、项目占用内存情况来调整JVM参数，达到性能最优的效果。一般打开项目时可以现在VisualVM中查看项目内存占用状况，适当做出调整。</p><p>VisualVM：用于Java应用的性能分析和调优，可以到<a href="https://visualvm.github.io/download.html" target="_blank" rel="external">官网</a>下载。</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307151545761.jpg" alt=""></p><p>配置文件：<br>32位系统，配置文件为IDEA安装目录的bin\idea.exe.vmoptions<br>64位系统，配置文件为IDEA安装目录的bin\idea64.exe.vmoptions</p><p>配置入口：</p><p>Maven的Runner配置</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307151549498.png" alt=""></p><p>当前项目Run/Debug配置</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307151551310.png" alt=""></p><p>涉及的JVM参数：</p><table><thead><tr><th>JVM参数</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td>Xms</td><td style="text-align:left">最小堆容量，初始化堆内存值</td></tr><tr><td>Xmx</td><td style="text-align:left">最大堆容量</td></tr><tr><td>XX:PermSize</td><td style="text-align:left">初始化的非堆内存</td></tr><tr><td>XX:MaxPermSize</td><td style="text-align:left">最大的非堆内存</td></tr></tbody></table><p>配置示例：</p><p>32位计算机的idea.exe.vmoptions配置示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-Xms200m</span><br><span class="line">-Xmx500m</span><br><span class="line">-XX:MaxPermSize=<span class="number">120</span>m</span><br></pre></td></tr></table></figure><p>64位计算机的idea64.exe.vmoptions配置示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-Xms128m</span><br><span class="line">-Xmx750m</span><br><span class="line">-XX:ReservedCodeCacheSize=<span class="number">240</span>m</span><br><span class="line">-XX:+UseConcMarkSweepGC</span><br><span class="line">-XX:SoftRefLRUPolicyMSPerMB=<span class="number">50</span></span><br><span class="line">-ea</span><br><span class="line">-Dsun.io.useCanonCaches=<span class="keyword">false</span></span><br><span class="line">-Djava.net.preferIPv4Stack=<span class="keyword">true</span></span><br><span class="line">-XX:+HeapDumpOnOutOfMemoryError</span><br><span class="line">-XX:-OmitStackTraceInFastThrow</span><br></pre></td></tr></table></figure><h1 id="WGesture手势配置"><a href="#WGesture手势配置" class="headerlink" title="WGesture手势配置"></a>WGesture手势配置</h1><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307142308902.png" alt=""></p><h1 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h1><p>安装插件路径：<code>File | Settings | Plugins</code></p><h2 id="常用插件列表"><a href="#常用插件列表" class="headerlink" title="常用插件列表"></a>常用插件列表</h2><table><thead><tr><th>名称</th><th style="text-align:left">描述</th><th style="text-align:left">地址</th></tr></thead><tbody><tr><td>MyBatisX</td><td style="text-align:left">Mybatis 增强工具包 - 只做增强不做改变，简化CRUD操作</td><td style="text-align:left"><a href="https://plugins.jetbrains.com/plugin/10119-mybatisx" target="_blank" rel="external">https://plugins.jetbrains.com/plugin/10119-mybatisx</a></td></tr><tr><td>Maven Helper</td><td style="text-align:left">开源认证，做Jar包依赖分析很有用，右键项目集成一些Maven的快捷命令操作</td><td style="text-align:left"><a href="https://github.com/krasa/MavenHelper" target="_blank" rel="external">https://github.com/krasa/MavenHelper</a></td></tr><tr><td>Key Promoter X</td><td style="text-align:left">快捷键学习神器</td><td style="text-align:left"><a href="https://github.com/halirutan/IntelliJ-Key-Promoter-X/blob/master/README.md" target="_blank" rel="external">https://github.com/halirutan/IntelliJ-Key-Promoter-X/blob/master/README.md</a></td></tr><tr><td>Arthas</td><td style="text-align:left">帮助开发人员解决基于 Java 的应用程序生产环境中的问题，而无需修改代码或重新启动服务器</td><td style="text-align:left"><a href="https://www.yuque.com/arthas-idea-plugin" target="_blank" rel="external">https://www.yuque.com/arthas-idea-plugin</a></td></tr><tr><td>Sequence Diagram</td><td style="text-align:left">生成序列图</td><td style="text-align:left"><a href="http://vanco.github.io/SequencePlugin/" target="_blank" rel="external">http://vanco.github.io/SequencePlugin/</a></td></tr><tr><td>GenerateSerialVersionUID</td><td style="text-align:left">自动生成随机serialVersionUUD</td><td style="text-align:left"><a href="https://plugins.jetbrains.com/plugin/185-generateserialversionuid" target="_blank" rel="external">https://plugins.jetbrains.com/plugin/185-generateserialversionuid</a></td></tr><tr><td>Translation</td><td style="text-align:left">集成了谷歌翻译、微软翻译、DeepL 翻译、有道翻译、百度翻译等众多翻译引擎，在你的 IDE 内随时对想要翻译的文本、代码注释、代码文档等进行翻译</td><td style="text-align:left"><a href="https://yiiguxing.github.io/TranslationPlugin/#/docs" target="_blank" rel="external">https://yiiguxing.github.io/TranslationPlugin/#/docs</a></td></tr><tr><td>Rainbow Brackets</td><td style="text-align:left">括号和双标签上色</td><td style="text-align:left"><a href="https://plugins.jetbrains.com/plugin/10080-rainbow-brackets" target="_blank" rel="external">https://plugins.jetbrains.com/plugin/10080-rainbow-brackets</a></td></tr><tr><td>Presentation Assistant</td><td style="text-align:left">演示必备插件，在屏幕上显示按下的快捷键</td><td style="text-align:left"><a href="https://plugins.jetbrains.com/plugin/7345-presentation-assistant" target="_blank" rel="external">https://plugins.jetbrains.com/plugin/7345-presentation-assistant</a></td></tr><tr><td>Grep Console</td><td style="text-align:left">Grep、tail、过滤器、突出显示</td><td style="text-align:left"><a href="https://plugins.jetbrains.com/plugin/7125-grep-console" target="_blank" rel="external">https://plugins.jetbrains.com/plugin/7125-grep-console</a></td></tr><tr><td>jclasslib Bytecode Viewer</td><td style="text-align:left">Java 类文件的字节码查看工具</td><td style="text-align:left"><a href="https://plugins.jetbrains.com/plugin/9248-jclasslib-bytecode-viewer" target="_blank" rel="external">https://plugins.jetbrains.com/plugin/9248-jclasslib-bytecode-viewer</a></td></tr><tr><td>RestfulTool</td><td style="text-align:left">Restful服务开发的一套辅助工具</td><td style="text-align:left"><a href="https://plugins.jetbrains.com/plugin/14280-restfultool" target="_blank" rel="external">https://plugins.jetbrains.com/plugin/14280-restfultool</a></td></tr><tr><td>LeetCode with labuladong</td><td style="text-align:left">刷题必备，基于LeetCode Editor开发的labuladong 的刷题全家桶</td><td style="text-align:left"><a href="https://plugins.jetbrains.com/plugin/19317-leetcode-with-labuladong" target="_blank" rel="external">https://plugins.jetbrains.com/plugin/19317-leetcode-with-labuladong</a></td></tr><tr><td>String Manipulation</td><td style="text-align:left">大小写切换、排序、过滤、递增、对齐列、grepping、转义、编码等</td><td style="text-align:left"><a href="https://plugins.jetbrains.com/plugin/2162-string-manipulation" target="_blank" rel="external">https://plugins.jetbrains.com/plugin/2162-string-manipulation</a></td></tr><tr><td>IDEA Mind Map</td><td style="text-align:left">阅读和编写思维导图</td><td style="text-align:left"><a href="https://plugins.jetbrains.com/plugin/8045-idea-mind-map" target="_blank" rel="external">https://plugins.jetbrains.com/plugin/8045-idea-mind-map</a></td></tr><tr><td>CheckStyle-IDEA</td><td style="text-align:left">CheckStyle，统一代码风格</td><td style="text-align:left"><a href="https://plugins.jetbrains.com/plugin/1065-checkstyle-idea" target="_blank" rel="external">https://plugins.jetbrains.com/plugin/1065-checkstyle-idea</a></td></tr><tr><td>CodeGlance Pro</td><td style="text-align:left">支持滚动条预览，方便找到代码片段</td><td style="text-align:left"><a href="https://plugins.jetbrains.com/plugin/18824-codeglance-pro" target="_blank" rel="external">https://plugins.jetbrains.com/plugin/18824-codeglance-pro</a></td></tr><tr><td>JPA Buddy</td><td style="text-align:left">帮助开发人员在 Java 和 Kotlin 中高效地使用 Hibernate、EclipseLink、Spring Data JPA、Flyway、Liquibase、Lombok、MapStruct 以及其他相关技术</td><td style="text-align:left"><a href="https://plugins.jetbrains.com/plugin/15075-jpa-buddy" target="_blank" rel="external">https://plugins.jetbrains.com/plugin/15075-jpa-buddy</a></td></tr><tr><td>One Dark</td><td style="text-align:left">一款暗黑主题</td><td style="text-align:left"><a href="https://github.com/atom/one-dark-syntax" target="_blank" rel="external">https://github.com/atom/one-dark-syntax</a></td></tr><tr><td>Gerry Themes</td><td style="text-align:left">一款高分的主题，免费版提供10种配色方案</td><td style="text-align:left"><a href="https://plugins.jetbrains.com/plugin/18922-gerry-themes" target="_blank" rel="external">https://plugins.jetbrains.com/plugin/18922-gerry-themes</a></td></tr><tr><td>.ignore</td><td style="text-align:left">提供.gitignore等等模板，推荐</td><td style="text-align:left"><a href="https://plugins.jetbrains.com/plugin/7495--ignore" target="_blank" rel="external">https://plugins.jetbrains.com/plugin/7495--ignore</a></td></tr></tbody></table><p>上面插件根据需要安装和开启，避免过多占用内存和CPU，降低IDE响应效率。</p><h1 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h1><p>快捷键查找和设置路径：<code>File | Settings | Keymap</code></p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307150229472.png" alt=""></p><h2 id="自定义快捷键"><a href="#自定义快捷键" class="headerlink" title="自定义快捷键"></a>自定义快捷键</h2><table><thead><tr><th>快捷键</th><th style="text-align:left">功能</th><th style="text-align:left">功能描述</th></tr></thead><tbody><tr><td><code>Ctrl+Shift+\</code></td><td style="text-align:left">Select File in Project View</td><td style="text-align:left">在Project中快速定位到当前打开文件的所在路径</td></tr><tr><td><code>Ctrl+Shift+Alt+O</code></td><td style="text-align:left">Show in Explorer</td><td style="text-align:left">选中的文件在Windows文件浏览器中打开</td></tr></tbody></table><h2 id="查找与定位"><a href="#查找与定位" class="headerlink" title="查找与定位"></a>查找与定位</h2><table><thead><tr><th>快捷键</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td><code>Ctrl+Shift+F</code></td><td style="text-align:left">全局搜索</td></tr><tr><td><code>双击SHIFT</code></td><td style="text-align:left">在项目的所有目录查找文件，Search Everywhere</td></tr><tr><td><code>Ctrl+E</code></td><td style="text-align:left">最近打开的文件，结合输入可以很方便搜索类，配置文件等</td></tr><tr><td><code>Ctrl+G</code></td><td style="text-align:left">跳到自定义的行列位置</td></tr><tr><td><code>Ctrl+Alt+B</code></td><td style="text-align:left">跳转到实现类或实现方法</td></tr><tr><td><code>Ctrl+B</code></td><td style="text-align:left">跳转到接口类或者接口方法</td></tr><tr><td><code>Ctrl+N</code></td><td style="text-align:left">查找Class</td></tr><tr><td><code>Ctrl+Shift+Alt+N</code></td><td style="text-align:left">查找Symbol，如当前类下的方法、变量、常量等</td></tr><tr><td><code>Ctrl+Shift+A</code></td><td style="text-align:left">查找Action</td></tr><tr><td><code>F3</code></td><td style="text-align:left">Ctrl+F搜索时按F3为下一个，Shift+F3为向上一个</td></tr><tr><td><code>Ctrl+F12</code></td><td style="text-align:left">查看文件结构，在Class文件中输入快捷键则弹窗展示当前类的结构</td></tr><tr><td><code>Alt+F7</code></td><td style="text-align:left">查找代码中哪里有使用，Find Usage，选中查找结果F4进入源码</td></tr><tr><td><code>Ctrl+Shift+R</code></td><td style="text-align:left">项目所有文件的查找并替换，replace in path</td></tr><tr><td><code>Ctrl+R</code></td><td style="text-align:left">当前打开文件下查找并替换</td></tr><tr><td><code>Ctrl+H</code></td><td style="text-align:left">显示类结构图</td></tr><tr><td><code>Ctrl+Shift+N</code></td><td style="text-align:left">查找文件名</td></tr><tr><td><code>F11</code></td><td style="text-align:left">添加/删除书签</td></tr></tbody></table><h2 id="打开窗口"><a href="#打开窗口" class="headerlink" title="打开窗口"></a>打开窗口</h2><table><thead><tr><th>快捷键</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td><code>Shift+F11</code></td><td style="text-align:left">弹出bookmarks</td></tr><tr><td><code>Alt+F12</code></td><td style="text-align:left">打开Terminal控制台</td></tr><tr><td><code>Alt+1</code></td><td style="text-align:left">打开Project视图</td></tr><tr><td><code>Alt+2</code></td><td style="text-align:left">打开favorite</td></tr><tr><td><code>Alt+6</code></td><td style="text-align:left">打开Problem视图，可以查看Todo</td></tr><tr><td><code>Alt+7</code></td><td style="text-align:left">打开Structure视图</td></tr><tr><td><code>Alt+9</code></td><td style="text-align:left">打开版本控制视图Version Control</td></tr><tr><td><code>F4</code></td><td style="text-align:left">在Project窗口F4，即打开项目或者Module设置</td></tr><tr><td><code>Ctrl+Alt+S</code></td><td style="text-align:left">打开IDEA全局设置</td></tr><tr><td><code>Ctrl+Alt+Shift+S</code></td><td style="text-align:left">打开IDEA项目设置</td></tr></tbody></table><h2 id="重构"><a href="#重构" class="headerlink" title="重构"></a>重构</h2><table><thead><tr><th>快捷键</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td><code>Ctrl+Shift+T</code></td><td style="text-align:left">创建或者打开Test类或者方法</td></tr><tr><td><code>Ctrl+O</code></td><td style="text-align:left">重写方法</td></tr><tr><td><code>Ctrl+Alt+V</code></td><td style="text-align:left">提取变量，Introduce Variable</td></tr><tr><td><code>Ctrl+Alt+C</code></td><td style="text-align:left">提取常量，Introduce Constant</td></tr><tr><td><code>Ctrl+Alt+F</code></td><td style="text-align:left">提取属性，Introduce Field</td></tr><tr><td><code>Ctrl+F6</code></td><td style="text-align:left">修改方法签名（名称，参数，返回值，异常等）</td></tr><tr><td><code>Ctrl+Alt+Shift+P</code></td><td style="text-align:left">引入函数参数，Introduce Functional Parameter</td></tr><tr><td><code>Ctrl+Alt+M</code></td><td style="text-align:left">提取方法，Extract Method</td></tr><tr><td><code>Alt+Delete</code></td><td style="text-align:left">安全删除</td></tr><tr><td><code>Ctrl+Alt+N</code></td><td style="text-align:left">内联方法，Inline Method</td></tr></tbody></table><h2 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h2><table><thead><tr><th>快捷键</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td><code>Alt+Insert</code></td><td style="text-align:left">创建构造方法、Getter/Setter等</td></tr><tr><td><code>Ctrl+Y</code></td><td style="text-align:left">删除行</td></tr><tr><td><code>Ctrl+D</code></td><td style="text-align:left">duplicate line or Selection，往下复制一行</td></tr><tr><td><code>Ctrl+W</code></td><td style="text-align:left">逐渐扩大选择范围，加上Shift是逐渐扩小选择范围</td></tr><tr><td><code>Ctrl+P</code></td><td style="text-align:left">在调用的方法上面执行，显示方法参数</td></tr><tr><td><code>Ctrl+Enter</code></td><td style="text-align:left">当前位置右边另起一行</td></tr><tr><td><code>Shift+Enter</code></td><td style="text-align:left">另起一行</td></tr><tr><td><code>Alt+左/右</code></td><td style="text-align:left">左右切换TAB标签</td></tr><tr><td><code>Alt+上/下</code></td><td style="text-align:left">切换上一个/下一个方法</td></tr><tr><td><code>Alt+上/下</code></td><td style="text-align:left">切换上一个/下一个方法</td></tr><tr><td><code>Ctrl+上/下</code></td><td style="text-align:left">相当于鼠标滚轮</td></tr><tr><td><code>Ctrl+左/右</code></td><td style="text-align:left">往左/往右跳一个单词</td></tr><tr><td><code>Ctrl+Delete</code></td><td style="text-align:left">删除光标后面一个单词</td></tr><tr><td><code>Ctrl+Backspace</code></td><td style="text-align:left">删除光标前面一个单词</td></tr><tr><td><code>Shift+Home/End</code></td><td style="text-align:left">选中当前行光标左边的部分/右边的内容</td></tr><tr><td><code>Ctrl+/</code></td><td style="text-align:left">注释</td></tr><tr><td><code>Ctrl+Alt+左/右</code></td><td style="text-align:left">光标位置的前进与后退，阅读代码经常用到</td></tr><tr><td><code>Ctrl+Shift+E</code></td><td style="text-align:left">显示编辑过位置</td></tr><tr><td><code>Ctrl+Shift+V</code></td><td style="text-align:left">打开剪切板历史记录</td></tr><tr><td><code>Ctrl+Shift+Enter</code></td><td style="text-align:left">自动补全当前行，然后光标移动到最后</td></tr><tr><td><code>Ctrl+Alt+Enter</code></td><td style="text-align:left">向上空出一行</td></tr><tr><td><code>Ctrl+Shift+U</code></td><td style="text-align:left">大小写转换</td></tr><tr><td><code>Ctrl+Alt+T</code></td><td style="text-align:left">用if/while/try catch等代码块包裹，Surround with …</td></tr><tr><td><code>Shift+F6</code></td><td style="text-align:left">重命名文件/文件夹</td></tr><tr><td><code>Shift+TAB</code></td><td style="text-align:left">取消缩进</td></tr><tr><td><code>Ctrl+Shift+C</code></td><td style="text-align:left">复制文件/目录磁盘路径到剪贴板</td></tr><tr><td><code>Ctrl+Shift+V</code></td><td style="text-align:left">弹出剪贴板</td></tr><tr><td><code>Ctrl+Alt+Shift+左/右</code></td><td style="text-align:left">交换方法参数位置</td></tr><tr><td><code>Ctrl+[或]</code></td><td style="text-align:left">定位括号开始和结束</td></tr></tbody></table><h2 id="格式化代码"><a href="#格式化代码" class="headerlink" title="格式化代码"></a>格式化代码</h2><table><thead><tr><th>快捷键</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td><code>Ctrl+Alt+L</code></td><td style="text-align:left">格式化代码，可以在当前文件或包目录上执行</td></tr><tr><td><code>Ctrl+Alt+O</code></td><td style="text-align:left">优化导包</td></tr><tr><td><code>Ctrl+Alt+I</code></td><td style="text-align:left">光标所在行代码自动缩进</td></tr><tr><td><code>Ctrl+Alt+H</code></td><td style="text-align:left">调用层次，类内部使用</td></tr></tbody></table><h2 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h2><table><thead><tr><th>快捷键</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td><code>Shift+Alt+N</code></td><td style="text-align:left">新建一个task，比如当前打开了10个文件在做订单支付，我不想关闭这些文件，新建一个任务就好，下次切换到这个任务时10个文件也可以打开</td></tr><tr><td><code>Ctrl+K</code></td><td style="text-align:left">提交代码，打开Commit窗口</td></tr></tbody></table><h2 id="代码调试Debug"><a href="#代码调试Debug" class="headerlink" title="代码调试Debug"></a>代码调试Debug</h2><table><thead><tr><th>快捷键</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td><code>F7</code></td><td style="text-align:left">步进，当前断点行如果为方法，则进入方法体内，但不会进入该方法体内的方法</td></tr><tr><td><code>F8</code></td><td style="text-align:left">步进，当前断点行如果为方法，不会进入方法内</td></tr><tr><td><code>F9</code></td><td style="text-align:left">跳转到下一个断点</td></tr><tr><td><code>Shift+F7</code></td><td style="text-align:left">步入，断点所在行有多个方法调用，会弹出进入哪个方法</td></tr><tr><td><code>Shift+F8</code></td><td style="text-align:left">跳出，与F9效果相同</td></tr><tr><td><code>Shift+F9</code></td><td style="text-align:left">等效于工具栏的Debug按钮</td></tr><tr><td><code>Shift+F10</code></td><td style="text-align:left">等效于工具栏的Run按钮</td></tr><tr><td><code>Ctrl+Shift+F8</code></td><td style="text-align:left">打开所有断点设置窗口</td></tr></tbody></table><h2 id="其他快捷键"><a href="#其他快捷键" class="headerlink" title="其他快捷键"></a>其他快捷键</h2><table><thead><tr><th>快捷键</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td><code>Ctrl+Shift+F9</code></td><td style="text-align:left">编译选中的文件/包/Module</td></tr><tr><td><code>Ctrl+Shift+F12</code></td><td style="text-align:left">编辑器最大化</td></tr></tbody></table><h1 id="配置迁移"><a href="#配置迁移" class="headerlink" title="配置迁移"></a>配置迁移</h1><p>IDEA的配置文件idea.properties默认的config如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">idea.config.path=$&#123;user.home&#125;/.IntelliJIdea/config</span><br><span class="line">idea.plugins.path=$&#123;idea.config.path&#125;/plugins</span><br></pre></td></tr></table></figure><p>方法一：直接拷贝</p><p>拷贝原来的Config和Plugin文件，重新指定下路径可以快速完成迁移。<br>本人的Intellij IDEA配置路径：<code>C:\Users\Tsukasa\AppData\Roaming\JetBrains\IdeaIC2023.1</code></p><p>方法二：通过<code>Export Settings...</code>功能导出配置</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307262350302.png" alt=""></p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://shortcutworld.com/IntelliJ-IDEA/win/IntelliJ_Shortcuts" target="_blank" rel="external">Intellij IDEA快捷键</a></p><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;文章记录我的Intellij IDEA配置，方便在新环境快速配置一个符合个人使用习惯的IDE&lt;/p&gt;
    
    </summary>
    
      <category term="Intellij IDEA" scheme="http://blog.tsukasa.moe/categories/Intellij-IDEA/"/>
    
    
      <category term="Intellij IDEA" scheme="http://blog.tsukasa.moe/tags/Intellij-IDEA/"/>
    
      <category term="环境配置" scheme="http://blog.tsukasa.moe/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>使用Github和PicGo搭建图床</title>
    <link href="http://blog.tsukasa.moe/2023/07/14/Use-Github-and-PicGo-to-integrate-picture-bed/"/>
    <id>http://blog.tsukasa.moe/2023/07/14/Use-Github-and-PicGo-to-integrate-picture-bed/</id>
    <published>2023-07-14T04:59:05.000Z</published>
    <updated>2023-07-24T16:07:47.935Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文记录自己使用Github和PicGo搭建图床，手机使用，以及一些个性化配置，方便在新环境重新搭建。</p><p>使用到的几个工具：</p><p>PicGo: 一个用于快速上传图片并获取图片 URL 链接的工具。<br>Github：在这里作为图床，用于存储图片<br>Flutter-PicGo: 一个用于快速上传图片并获取图片URL链接的手机版工具，这里用于手机<del>涩图</del>图片的保存<br>JSDeliver：一个用于开源项目的免费CDN，这里用于GitHub图床加速，非必须。</p><h1 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h1><p>大致分为3个步骤，具体可以参考官方文档和别人写的博客，很详细了不加赘述。</p><ul><li>Github创建图床仓库，生成并记录Access token</li><li>PicGo上配置GitHub的图床仓库，配置access token用于图床仓库的访问</li><li>Flutter-PicGo安装到手机上，扫描PicGo PC端生成的配置二维码完成手机端配置</li></ul><p>教程参考：</p><p><a href="https://picgo.github.io/PicGo-Doc/zh/guide/config.html#github%E5%9B%BE%E5%BA%8A" target="_blank" rel="external">官方教程搭建GitHub图床</a><br><a href="https://zhuanlan.zhihu.com/p/347342082" target="_blank" rel="external">如何利用 Github 搭建自己的免费图床？</a></p><p>搭建过程中如果不熟悉，可以不用一步到位，可以先默认，配置成功后在自定义，配置CDN加速。</p><h1 id="个性化配置"><a href="#个性化配置" class="headerlink" title="个性化配置"></a>个性化配置</h1><h2 id="PC端"><a href="#PC端" class="headerlink" title="PC端"></a>PC端</h2><h3 id="GitHub图床配置"><a href="#GitHub图床配置" class="headerlink" title="GitHub图床配置"></a>GitHub图床配置</h3><p>Gihub配置示例：</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/erocutewifes/202307141357926.png" alt=""></p><p>CDN加速地址：<code>https://cdn.jsdelivr.net/gh/{GitHub帐户}/{图床仓库名}</code><br><code>https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe</code></p><p>GitHub个人图床：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/TsukasaMoe/PicturesOfTsukasaMoe.git</span><br><span class="line">git@github.com:TsukasaMoe/PicturesOfTsukasaMoe.git</span><br></pre></td></tr></table></figure></p><p>下面的是个人的配置，在上传图片之前选定对应的配置，这样就能够传到对应的目录下了。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">"github": &#123;</span><br><span class="line">     "configList": [</span><br><span class="line">       &#123;</span><br><span class="line">         <span class="attr">"_configName"</span>: <span class="string">"色气可爱的老婆们"</span>,</span><br><span class="line">         <span class="attr">"repo"</span>: <span class="string">"TsukasaMoe/PicturesOfTsukasaMoe"</span>,</span><br><span class="line">         <span class="attr">"branch"</span>: <span class="string">"main"</span>,</span><br><span class="line">         <span class="attr">"token"</span>: <span class="string">"Github生成的Access token，请替换"</span>,</span><br><span class="line">         <span class="attr">"path"</span>: <span class="string">"erocutewifes/"</span>,</span><br><span class="line">         <span class="attr">"_id"</span>: <span class="string">"c3778d30-bc65-4836-8bf6-418b3eeea128"</span>,</span><br><span class="line">         <span class="attr">"_createdAt"</span>: <span class="number">1689265763160</span>,</span><br><span class="line">         <span class="attr">"_updatedAt"</span>: <span class="number">1689266184223</span>,</span><br><span class="line">         <span class="attr">"customUrl"</span>: <span class="string">"https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe"</span></span><br><span class="line">       &#125;,</span><br><span class="line">       &#123;</span><br><span class="line">         <span class="attr">"_configName"</span>: <span class="string">"headers"</span>,</span><br><span class="line">         <span class="attr">"repo"</span>: <span class="string">"TsukasaMoe/PicturesOfTsukasaMoe"</span>,</span><br><span class="line">         <span class="attr">"branch"</span>: <span class="string">"main"</span>,</span><br><span class="line">         <span class="attr">"token"</span>: <span class="string">"Github生成的Access token，请替换"</span>,</span><br><span class="line">         <span class="attr">"path"</span>: <span class="string">"headers/"</span>,</span><br><span class="line">         <span class="attr">"_id"</span>: <span class="string">"ed98bed1-a665-45d9-a352-7c53d4b854f1"</span>,</span><br><span class="line">         <span class="attr">"_createdAt"</span>: <span class="number">1689268245274</span>,</span><br><span class="line">         <span class="attr">"_updatedAt"</span>: <span class="number">1689268260929</span>,</span><br><span class="line">         <span class="attr">"customUrl"</span>: <span class="string">"https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe"</span></span><br><span class="line">       &#125;,</span><br><span class="line">       &#123;</span><br><span class="line">         <span class="attr">"_configName"</span>: <span class="string">"others"</span>,</span><br><span class="line">         <span class="attr">"repo"</span>: <span class="string">"TsukasaMoe/PicturesOfTsukasaMoe"</span>,</span><br><span class="line">         <span class="attr">"branch"</span>: <span class="string">"main"</span>,</span><br><span class="line">         <span class="attr">"token"</span>: <span class="string">"Github生成的Access token，请替换"</span>,</span><br><span class="line">         <span class="attr">"path"</span>: <span class="string">"/others"</span>,</span><br><span class="line">         <span class="attr">"_id"</span>: <span class="string">"a9181327-92e2-4d2a-b16f-89c5a216e87f"</span>,</span><br><span class="line">         <span class="attr">"_createdAt"</span>: <span class="number">1689268305137</span>,</span><br><span class="line">         <span class="attr">"_updatedAt"</span>: <span class="number">1689268315947</span>,</span><br><span class="line">         <span class="attr">"customUrl"</span>: <span class="string">"https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe"</span></span><br><span class="line">       &#125;,</span><br><span class="line">       &#123;</span><br><span class="line">         <span class="attr">"_configName"</span>: <span class="string">"icons"</span>,</span><br><span class="line">         <span class="attr">"repo"</span>: <span class="string">"TsukasaMoe/PicturesOfTsukasaMoe"</span>,</span><br><span class="line">         <span class="attr">"branch"</span>: <span class="string">"main"</span>,</span><br><span class="line">         <span class="attr">"token"</span>: <span class="string">"Github生成的Access token，请替换"</span>,</span><br><span class="line">         <span class="attr">"path"</span>: <span class="string">"icons/"</span>,</span><br><span class="line">         <span class="attr">"customUrl"</span>: <span class="string">"https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe"</span>,</span><br><span class="line">         <span class="attr">"_id"</span>: <span class="string">"648c75e8-020f-40c5-ac38-565e94eaa9bc"</span>,</span><br><span class="line">         <span class="attr">"_createdAt"</span>: <span class="number">1689268367750</span>,</span><br><span class="line">         <span class="attr">"_updatedAt"</span>: <span class="number">1689268367750</span></span><br><span class="line">       &#125;,</span><br><span class="line">       &#123;</span><br><span class="line">         <span class="attr">"_configName"</span>: <span class="string">"tech"</span>,</span><br><span class="line">         <span class="attr">"customUrl"</span>: <span class="string">"https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe"</span>,</span><br><span class="line">         <span class="attr">"path"</span>: <span class="string">"tech/"</span>,</span><br><span class="line">         <span class="attr">"repo"</span>: <span class="string">"TsukasaMoe/PicturesOfTsukasaMoe"</span>,</span><br><span class="line">         <span class="attr">"branch"</span>: <span class="string">"main"</span>,</span><br><span class="line">         <span class="attr">"token"</span>: <span class="string">"Github生成的Access token，请替换"</span>,</span><br><span class="line">         <span class="attr">"_id"</span>: <span class="string">"b39774a6-1015-4f88-8f51-102877a5282e"</span>,</span><br><span class="line">         <span class="attr">"_createdAt"</span>: <span class="number">1689303337162</span>,</span><br><span class="line">         <span class="attr">"_updatedAt"</span>: <span class="number">1689303337162</span></span><br><span class="line">       &#125;</span><br><span class="line">     ],</span><br><span class="line">     "defaultId": "c3778d30-bc65-4836-8bf6-418b3eeea128"</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="PicGo配置"><a href="#PicGo配置" class="headerlink" title="PicGo配置"></a>PicGo配置</h3><p>PicGo配置文件地址：<code>%APPDATA%\picgo\data.json</code></p><p>PicGo客户端个性化配置：</p><ul><li>开机自启</li><li>时间戳重命名</li><li>Mini窗口置顶：悬浮球置顶，上传图片可以直接拖拽进去</li><li>上传后自动复制URL</li><li>选择显示图床只勾选使用的</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307141350496.png" alt="PicGo客户端个性化配置"></p><p>热键默认为Ctrl+Shift+P，可以重新设置</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307141400277.png" alt="热键默认为Ctrl+Shift+P，可以重新设置"></p><h2 id="Android端"><a href="#Android端" class="headerlink" title="Android端"></a>Android端</h2><h3 id="图床设置-GitHub"><a href="#图床设置-GitHub" class="headerlink" title="图床设置 - GitHub"></a>图床设置 - GitHub</h3><p>打开图床配置二维码，或者将github图床配置信息导出填写好，通过<a href="https://cli.im/" target="_blank" rel="external">草料</a>转换成二维码，APP中扫码配置即可。</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307141412478.png" alt=""></p><h3 id="App内进行PicGo设置"><a href="#App内进行PicGo设置" class="headerlink" title="App内进行PicGo设置"></a>App内进行PicGo设置</h3><ul><li>设置时间戳重命名</li><li>仅删除本地图片：即删除图片时不会删除图床的照片。</li></ul><p>接下来就可以愉快的上传你喜欢的涩图啦w</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202307141418757.jpg" alt=""></p><h1 id="使用心得"><a href="#使用心得" class="headerlink" title="使用心得"></a>使用心得</h1><p>快捷的上传方式</p><ul><li>做好个性化设置后，只要选中图片，或者剪切板复制了图片，又或者是复制了网上的图片链接，选好图床配置（上传到的图床目录），直接执行热键即可马上传输，传输完成后会自动复制上传好的图片地址到剪切板。</li><li>拖拽到图标、拖拽到图片上传区，或者传统的打开文件系统选择图片，都可以实现上传。</li></ul><p>相册管理页面：可以实现上传图片的预览，以及复制从PicGo PC端上传的图片，删除是仅将预览删除，不会删除远端图床的图片，如果想要删除，需要手动执行git命令删除，然后推送到远端。</p><p>手机端使用：通常手机内存有限，如果发现有好的涩图，需要保存起来可以暂时把GitHub图传作为一个中转站，当然建议定期复制图片到硬盘或同步到网盘更好。</p><p>注意：GitHub图床设置为公开，所以尽量不要上传带有个人隐私、安全等相关图片，避免泄露。</p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="https://github.com/PicGo/PicGo-Core" target="_blank" rel="external">PicGo项目的GitHub仓库</a><br><a href="https://github.com/PicGo/flutter-picgo" target="_blank" rel="external">Flutter-PicGo手机app</a><br><a href="https://picgo.github.io/PicGo-Core-Doc/" target="_blank" rel="external">PicGo插件开发指南</a><br><a href="https://github.com/PicGo/Awesome-PicGo" target="_blank" rel="external">PicGo插件列表合集</a><br><a href="https://www.jsdelivr.com/?docs=gh" target="_blank" rel="external">JSDeliver官网</a></p><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;本文记录自己使用Github和PicGo搭建图床，手机使用，以及一些个性化配置，方便在新环境重新搭建。&lt;/p&gt;
    
    </summary>
    
      <category term="图床" scheme="http://blog.tsukasa.moe/categories/%E5%9B%BE%E5%BA%8A/"/>
    
    
      <category term="GitHub" scheme="http://blog.tsukasa.moe/tags/GitHub/"/>
    
      <category term="PicGo" scheme="http://blog.tsukasa.moe/tags/PicGo/"/>
    
  </entry>
  
  <entry>
    <title>记录Git一些常用的命令</title>
    <link href="http://blog.tsukasa.moe/2023/07/10/record-some-normal-command-of-git/"/>
    <id>http://blog.tsukasa.moe/2023/07/10/record-some-normal-command-of-git/</id>
    <published>2023-07-10T09:08:59.000Z</published>
    <updated>2023-07-24T16:06:01.795Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><p>平常工作经常需要与Git打交道，记录一些常用的命令和使用场景。</p><h1 id="GitHub配置公钥用于下载代码仓"><a href="#GitHub配置公钥用于下载代码仓" class="headerlink" title="GitHub配置公钥用于下载代码仓"></a>GitHub配置公钥用于下载代码仓</h1><p>如果代码要同步到远程仓库，需要在远程代码仓库托管平台（如Gitlab, GitHub, Gitee）要添加本地公钥，基本步骤是本地生成一对RSA密钥，然后将公钥添加到远程仓库代码托管平台。<br>下面以Github为例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1.配置用户名和邮箱地址，提交代码时的用户，与代码托管平台如github的账户无关联</span></span><br><span class="line">git config --global user.name "xxx"</span><br><span class="line">git config --global user.email "xxx@xx.com"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2.本地生成RSA私钥对</span></span><br><span class="line">ssh-keygen -t rsa -C "example@xx.com"</span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者采用</span></span><br><span class="line">ssh-keygen -m PEM -t rsa -b 4096 -C "example@xx.com"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 3.代码托管平台添加rsa公钥id_rsa.pub</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 4.验证配置结果</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ssh -T git@github.com</span></span><br><span class="line">Hi TsukasaMoe! You've successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><p><strong>1.第一次同步远程仓库代码</strong></p><p>生成新密钥，在GitHub配置好公钥后，第一次用git clone拉取代码仓时可能会遇到下面提示：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host 'github.com (20.205.243.166)' can't be established.</span><br><span class="line">ECDSA key fingerprint is SHA256:p2QAMXNIC1TJYWeIOttrVc98/R1BUFWu3/LiyKgUfQM.</span><br><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])?</span><br></pre></td></tr></table></figure><p>原因是rsa密钥对所在目录~/.ssh下没有known_hosts文件，输入yes即可生成。</p><p><strong>2.Git bash中文乱码问题</strong></p><p>如果有中文乱码问题可以设置下编码格式：</p><ol><li>Git bash 中右键，选择“Option”</li><li>选择“Text”,设置字符编码为UTF-8</li></ol><h1 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h1><p>global：配置文件在~/.gitconfig文件下<br>system：用户级别<br>local：项目级别，在当前项目的.git/config文件下</p><p>配置优先级别：local&gt;system&gt;global</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --local user.name "xxx"</span><br><span class="line">git config --local user.email "xxx@xx.com"</span><br></pre></td></tr></table></figure><h1 id="分支-git-branch"><a href="#分支-git-branch" class="headerlink" title="分支 git branch"></a>分支 git branch</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看分支</span></span><br><span class="line">git branch</span><br><span class="line">git branch -a</span><br><span class="line">git branch -av</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 克隆仓库到本地</span></span><br><span class="line">git clone git@github.com:square/okhttp.git</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看分支最后一次提交</span></span><br><span class="line">git branch -v</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看本地分支关联的远程仓库</span></span><br><span class="line">git branch -vv</span><br><span class="line">git remote show origin</span><br><span class="line">cat .git/config</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建分支</span></span><br><span class="line">git branch mybranch</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重命名分支</span></span><br><span class="line">git branch -m mybranch dev</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 切换分支</span></span><br><span class="line">git checkout mybranch</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除分支</span></span><br><span class="line">git branch -d mybranch</span><br><span class="line"><span class="meta">#</span><span class="bash"> 强制删除分支</span></span><br><span class="line">git branch -D mybranch</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 关联当前分支到远程分支</span></span><br><span class="line">git branch --set-upstream-to=origin&lt;分支名称&gt;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 示例：git branch --<span class="built_in">set</span>-upstream debug origin/debug</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建并切换分支：https://www.cnblogs.com/mcat/p/5831212.html</span></span><br><span class="line">git checkout -b mybranch</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 拉取远程分支最新内容</span></span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><h1 id="标签-git-tag"><a href="#标签-git-tag" class="headerlink" title="标签 git tag"></a>标签 git tag</h1><p>项目发布时，一般会打标签标明版本，针对整个项目，与具体分支无关。</p><p>.git/refs/tags下记录了创建的标签</p><p>简单标签：只存储commit的sha1值<br>带注释的标签：存储了带注释的信息，包含commit的sha1值（创建一个新的commit）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 打简单标签</span></span><br><span class="line">git tag v1.0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 打标签加注释</span></span><br><span class="line">git tag -a xxx -m "xxx"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 误打标签</span></span><br><span class="line">git tag v2.0 v1.0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查询标签</span></span><br><span class="line">git tag -l</span><br><span class="line">git show v1.0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 支持通配符进行查询</span></span><br><span class="line">git tag -l '1.*'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除标签，远程仓库可以直接在托管平台删除或创建标签</span></span><br><span class="line">git push origin :refs/tags/v1.0</span><br><span class="line"><span class="meta">#</span><span class="bash"> 将远程的标签删除后，本地无法感知，可通过下面命令手动删除</span></span><br><span class="line">git tag -d v1.0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 推送所有tags变更到远端</span></span><br><span class="line">git push --tags</span><br><span class="line"><span class="meta">#</span><span class="bash"> 只推送某些标签到远端</span></span><br><span class="line">git push origin v1.0</span><br><span class="line">git push origin v1.0 v2.0</span><br><span class="line"><span class="meta">#</span><span class="bash"> 完整写法</span></span><br><span class="line">git push origin refs/tags/v1.0:refs/tags/v1.0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 只获取远程标签</span></span><br><span class="line">git fetch origin tag v1.0</span><br><span class="line">git fetch origin tag</span><br></pre></td></tr></table></figure><h1 id="分支合并与冲突"><a href="#分支合并与冲突" class="headerlink" title="分支合并与冲突"></a>分支合并与冲突</h1><p>分支：一个commit链，一条工作线。</p><p><strong>1.合并无冲突场景：</strong><br>如果一个分支靠前（dev），另一个分支落后（master），master合并dev分支后直接追赶上dev分支，成为fast forward。可以用git log查看commit id变化情况。</p><p>fast forward本质是分支指针的移动。</p><ul><li>两个分支fast forward归于一点，指向同一个commit</li><li>没有分支信息（丢失分支信息）</li></ul><p>git在merge时，默认使用fast forward，也可以禁止：git merge –no-ff &lt;分支&gt;</p><ul><li>两个分支的fast forward不会归于一点，主动合并的分支会前进一步，指向最新的commit</li><li>分支信息完整（不会丢失分支信息），可以用git log –graph查看</li></ul><p><strong>2.合并有冲突：</strong><br>需要解决冲突：git add xxx, git commit -m “xxx”<br>注意：master在merge时，遇到冲突并解决后，会进行2次提交，1次是最终提交，另一次是将dev分支的提交信息也拿过来。</p><p>如果一个分支落后（dev），另一个分支领先（master），则落后的分支可以直接通过git merge合并领先分支，不会报冲突，也是采用fast forward的方式合并。</p><p>.git文件夹下的HEAD文件记录了当前分支的Head</p><h1 id="版本穿梭"><a href="#版本穿梭" class="headerlink" title="版本穿梭"></a>版本穿梭</h1><p>回退和前进到对应的commit</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 添加到暂存区并提交</span></span><br><span class="line">git commit -am "xxxx"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改上一次提交的commit注释</span></span><br><span class="line">git commit --amend -m "xxxx"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 回退到上两次commit</span></span><br><span class="line">git reset --hard HEAD^^</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 回退到上n次commit</span></span><br><span class="line">git reset --hard HEAD~n</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 回退到某个commit，通过sha1值，无需写完整的commit id</span></span><br><span class="line">git reset --hard  4c03f5c6</span><br></pre></td></tr></table></figure><p>git reset –hard的后悔药：git reflog<br>git reflog记录了git的所有操作，包括commit，reset等，找到需要回退到的commit id，使用git reset –hard进行回退。</p><h1 id="git-checkout的放弃与游离操作"><a href="#git-checkout的放弃与游离操作" class="headerlink" title="git checkout的放弃与游离操作"></a>git checkout的放弃与游离操作</h1><p>取消工作区的修改，暂存区的修改会保留<br>git checkout filename</p><p>git reset HEAD filename，将之前增加到暂存区的内容，回退到工作区。</p><p>git checkout还可以进行版本穿梭（游离状态）</p><p>git checkout <commitid>后</commitid></p><ul><li>修改后必须commit，提交后可以用<code>git branch mybranch &lt;刚才生成的commit id&gt;</code>，生成新分支</li><li>可以用<code>git checkout -b &lt;新分支名称&gt;</code>创建新分支，再进行修改等操作</li></ul><h1 id="git-log操作"><a href="#git-log操作" class="headerlink" title="git log操作"></a>git log操作</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看倒数第n次提交 git <span class="built_in">log</span> -n</span></span><br><span class="line">git log -1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看远程仓库分支的日志</span></span><br><span class="line">git log refs/remotes/origin/master</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看tree和parent对象</span></span><br><span class="line">git log --pretty=raw &lt;commit&gt;</span><br><span class="line">git log --pretty=raw</span><br></pre></td></tr></table></figure><p>git blame：查询文件编辑历史</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看文件的所有提交commit id，以及每一行的作者</span></span><br><span class="line">git blame 1.txt</span><br></pre></td></tr></table></figure><p>diff: 比较文件<br>git diff: 比较工作区与暂存区中的文件差异，通常用IDE或者beyond compare等软件进行差异比较更直观。<br>git diff –cached：比较对象区和暂存区的差异</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 对象区和暂存区的差异</span></span><br><span class="line">git diff --cached &lt;commit id&gt;</span><br><span class="line">git diff --cached HEAD</span><br></pre></td></tr></table></figure><h1 id="个人远程仓库回退"><a href="#个人远程仓库回退" class="headerlink" title="个人远程仓库回退"></a>个人远程仓库回退</h1><p>工作中每个人有自己的远程仓库，有时候自己作死做了一些危险的操作，导致个人远程仓库的master分支与主仓库的有差别，不能够发起merge request，需要重写覆盖，下面命令不要在项目的远程仓库执行。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 找到需要回退commitId</span></span><br><span class="line">git reflog</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 强制回退</span></span><br><span class="line">git reset --hard &#123;commiId&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 推送到远程仓库</span></span><br><span class="line">git push -u &#123;远程仓库名&#125; &#123;远程仓库分支&#125; -f </span><br><span class="line">git push -f</span><br></pre></td></tr></table></figure><h1 id="删除github对象区的某个文件"><a href="#删除github对象区的某个文件" class="headerlink" title="删除github对象区的某个文件"></a>删除github对象区的某个文件</h1><p><code>git rm</code>: 如果文件已经在对象区，执行删除操作会放到暂存区。<br>如果想要放回到工作区：<code>git restore --staged &lt;file&gt;</code><br>放回工作区后，如果不想删除文件了：<code>git restore &lt;file&gt;</code><br>放回工作区后，如果想要放回暂存区，可以执行：<code>git add/rm &lt;file&gt;</code></p><p><code>git rm --cache</code>: 仅从索引中（暂存区）删除文件，本地文件（工作区中）保留，适用于不将该文件被版本控制。<br><code>rm</code>: 本地删除文件，但是没有将其从git的记录中删除。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git rm --cached 1.txt</span><br><span class="line">git commit -m &quot;变更描述&quot;</span><br><span class="line">git push origin master</span><br><span class="line"></span><br><span class="line">git rm 1.txt</span><br></pre></td></tr></table></figure><h1 id="保存现场-git-stash"><a href="#保存现场-git-stash" class="headerlink" title="保存现场 git stash"></a>保存现场 git stash</h1><p>如果两个分支不在同一个commit上，暂存区有内容则不能切换分支，可以先commit或者stash后再切换，恢复现场的内容会进入工作区。</p><p>如果两个分支在同一个commit上，在commit之前，可以checkout.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 临时保存到栈中</span></span><br><span class="line">git stash</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看有哪些临时保存内容</span></span><br><span class="line">git stash list</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 还原最新保存的内容，该保存内容会删除（出栈）</span></span><br><span class="line">git stash pop</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 还原保存的内容，但是不会将该内容删除（出栈）</span></span><br><span class="line">git stash apply</span><br><span class="line">git stash apply stash&#123;1&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除保存的内容</span></span><br><span class="line">git stash drop stash&#123;0&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 保存现场时可以指定名字</span></span><br><span class="line">git stash save "mystash"</span><br></pre></td></tr></table></figure><h1 id="远程仓库-git-remote"><a href="#远程仓库-git-remote" class="headerlink" title="远程仓库 git remote"></a>远程仓库 git remote</h1><p>git push：本地提交推送到远程仓库<br>git pull：远程仓库到本地，拉取fetch+合并merge。</p><p>git stash冲突：保存现场后修改了内容并commit，然后再还原现场导致的冲突场景。解决冲突后需要git add，commit。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 设置远程仓库名称为origin，地址（或者https协议）</span></span><br><span class="line">git remote add origin git@github.com:TsukasaMoe/tsukasamoe.github.io.git</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 推送本地master分支到远程仓库origin，-u表示后续不用加参数，直接git push即可</span></span><br><span class="line">git push -u origin master</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看远程仓库有哪些</span></span><br><span class="line">git remote show</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看具体的远程仓库origin信息，包括查看远程仓库是否有更新</span></span><br><span class="line">git remote show origin</span><br></pre></td></tr></table></figure><h1 id="本地分支与远程分支关联操作"><a href="#本地分支与远程分支关联操作" class="headerlink" title="本地分支与远程分支关联操作"></a>本地分支与远程分支关联操作</h1><p>三个分支：</p><ul><li>远程分支</li><li>追踪分支：本地的远程分支，或者说感知分支</li><li>本地分支：需要通过追踪分支感知远程分支</li></ul><p>本地创建分支dev，在dev中提交了一些修改后，不能直接git push，解决办法有两种：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1.本地创建dev分支，在dev中提交了一些修改后，首次push需要先创建远程仓库，并指定远程仓库</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> dev分支是否有修改不是必须的，可以直接推送新分支到远程仓库</span></span><br><span class="line">git remote add origin git@github.com:TsukasaMoe/tsukasamoe.github.io.git</span><br><span class="line">git push -u origin dev</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2.将dev分支关联到远程仓库origin</span></span><br><span class="line">git push --set-upstream origin dev</span><br></pre></td></tr></table></figure><p>首次拉取远程仓库时，可以进行本地分支关联远程分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 方法一：创建分支dev并和远程仓库的dev分支关联</span></span><br><span class="line">git checkout -b dev origin/dev</span><br><span class="line"><span class="meta">#</span><span class="bash"> 方法二：创建追踪分支</span></span><br><span class="line">git checkout -b test --track origin/dev</span><br><span class="line">git checkout --track origin/dev</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果远程有新分支dev2，可以一步到位进行关联，src:desc</span></span><br><span class="line">git pull origin dev2:dev</span><br></pre></td></tr></table></figure><p>删除远程分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 删除本地分支</span></span><br><span class="line">git branch -d 分支名</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 将本地分支推送到远程仓库origin下的目标分支</span></span><br><span class="line">git push origin 本地分支:目标分支</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除远端分支</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 方法一：将远程仓库下的<span class="built_in">test</span>分支删除，可以理解为本地分支为空，即删除远程分支<span class="built_in">test</span></span></span><br><span class="line">git push origin :test</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 方法二</span></span><br><span class="line">git push origin --delete 远程分支</span><br></pre></td></tr></table></figure><p>本地通过.git/refs/remote/origin目录进行远端分支的感知，创建一个感知远程仓库分支的本地分支</p><p><code>git fetch origin master:refs/remotes/origin/test</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 检测本地没有关联的远程分支</span></span><br><span class="line">git remote prune origin --dry-run</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 清理无效的追踪分支</span></span><br><span class="line">git remote prune origin</span><br></pre></td></tr></table></figure><h1 id="别名-alias"><a href="#别名-alias" class="headerlink" title="别名 alias"></a>别名 alias</h1><p>可以给git的命令取别名，也可以在.gitconfig下配置<br>命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 给checkout命令创建别名ch</span><br><span class="line">git config --global alias.ch checkout</span><br></pre></td></tr></table></figure><h1 id="垃圾回收-git-gc"><a href="#垃圾回收-git-gc" class="headerlink" title="垃圾回收 git gc"></a>垃圾回收 git gc</h1><p>objects、refs中记录了很多commit的sha1值，执行命令<code>git gc</code>压缩.git/refs/到.git/packed-refs，同时.git/objects被压缩后会有2个子目录info、pack</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git gc</span><br></pre></td></tr></table></figure><h1 id="GUI工具"><a href="#GUI工具" class="headerlink" title="GUI工具"></a>GUI工具</h1><p>默认有GUI和gitk等等</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 打开gitk工具</span></span><br><span class="line">gitk</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 打开git gui工具</span></span><br><span class="line">git gui</span><br></pre></td></tr></table></figure><h1 id="子模块-git-submodule"><a href="#子模块-git-submodule" class="headerlink" title="子模块 git submodule"></a>子模块 git submodule</h1><p>子模块submodule应用场景：<br>一个仓库中引用另一个仓库的代码。两个子模块之间存在引用关系，例如A模块依赖B模块，那么此时虽然可以通过B模块打个jar包给A模块的开发人员使用，假如此时B模块有功能更新则A模块无法用到最新的功能，或者要依赖于B模块先完成开发，不利于两个模块的并行开发。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 当前项目添加引用子模块submodule的仓库地</span></span><br><span class="line">git submodule add git@github.com:AobingJava/JavaFamily.git</span><br><span class="line"><span class="meta">#</span><span class="bash"> 从工作区添加到暂存区并提交</span></span><br><span class="line">git add .</span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者采用交互式命令</span></span><br><span class="line">git add -i</span><br><span class="line">git commit -m "添加子模块submodule"</span><br><span class="line"><span class="meta">#</span><span class="bash"> 推送到远程仓库</span></span><br><span class="line">git push</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> A模块引用B模块，要获取B模块的更新，需要进入到子模块B目录下进行git pull</span></span><br><span class="line">cd B</span><br><span class="line">git pull</span><br><span class="line"><span class="meta">#</span><span class="bash"> 此时本地能够感知B库的更新，但是A的远程仓库没法感知B的更新，需要推送到远程端</span></span><br><span class="line">git commit -am "更新B模块的变化到A的远程仓库"</span><br><span class="line">git push</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 拉取多个子模块的更新场景</span></span><br><span class="line">git submodule foreach git pull</span><br><span class="line"><span class="meta">#</span><span class="bash"> 同上，A的远程要感知其他子模块的更新，需要推送到远端</span></span><br><span class="line">git commit -am "更新所有子模块的变化到A的远程仓库"</span><br><span class="line">git push</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 拉取一个带submodule的项目</span></span><br><span class="line">git clone git@github.com:TsukasaMoe/tsukasamoe.github.io.git --recursive</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除子模块submodule：暂存区、工作区删除后提交（对象区删除），推送到远端</span></span><br><span class="line">git rm --cached B .gitmodule</span><br><span class="line">rm -rf B .gitmodule</span><br><span class="line">git add .</span><br><span class="line">git commit -m "删除子模块B"</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p>git裸库：没有工作区的工作仓库，存在于服务端。<br>创建裸库：<code>git init --bare</code></p><h1 id="git-subtree"><a href="#git-subtree" class="headerlink" title="git subtree"></a>git subtree</h1><p>与submodule应用场景类似，但是要双向修改那么可以用subtree</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 父工程中添加子工程</span></span><br><span class="line">git subtree add -P 子工程仓库地址 子工程仓库下的某个分支名</span><br><span class="line"><span class="meta">#</span><span class="bash"> 示例</span></span><br><span class="line">git subtree add -P git@github.com:AobingJava/JavaFamily.git master</span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者先添加一个子仓库</span></span><br><span class="line">git remote add subProjRep git@github.com:AobingJava/JavaFamily.git</span><br><span class="line">git subtree add -P subProjRep master</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更新子工程代码</span></span><br><span class="line">git subtree pull -P 子工程名称 subProjRep master</span><br></pre></td></tr></table></figure><p><strong>子工程修改了，父工程如何感知子工程的修改？</strong></p><ul><li>修改子工程之后push到远端</li><li>本地将子工程的修改更新到父工程中：<code>git subtree pull -P subProj suProj-origin master</code></li><li>父工程中子工程的更新情况推送到父工程的远程仓库</li></ul><p>注意：<br>–squash参数的作用是合并commit，为了防止子工程干扰父工程，不然git log下父子工程项目下子工程的多次提交会产生干扰，该参数会产生一个新的提交，往前走2步。<br>产生冲突的原因有：</p><ul><li>修改同一个文件同一行</li><li>共同祖先不同</li></ul><p>使用建议：在做subtree时，如果加squash，以后每次都加，如果不加，每次都不要加，避免后续经常产生合并冲突。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote add --prefix 子工程名称 master --squash</span><br><span class="line">git subtree pull -P 子工程名称 subProjRep master --squash</span><br></pre></td></tr></table></figure><p><strong>如何将父工程中子工程的修改推送到真实的子工程仓库上？</strong></p><ul><li>父工程下修改子工程内容</li><li>推送到父工程以及真实的子工程：<ul><li>推送到父工程的仓库：<code>git push</code></li><li>推送到子工程的仓库：<code>git subtree push -P subProj subProj-origin master</code></li></ul></li></ul><h1 id="git-cherry-pick"><a href="#git-cherry-pick" class="headerlink" title="git cherry-pick"></a>git cherry-pick</h1><p>git chery-pick命令用来将某个分支一些提交作为一个新的提交引入到你当前分支上，一个分支上的一些提交可以理解为补丁。<br>如果在某个分支做了一些提交，发现分支选错了，需要将提交复制到正确的分支上，可以使用cherry-pick。</p><p>每次只能复制一个commit，sha1值会改变，可用git log查看。不能跨节点，因为不同祖先会导致冲突。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> dev分支进行了错误的提交，需要删除掉，删除思路：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1.cherry-pick复制到应该编写的分支；2.把写错分支删除（checkout到分支节点，删除分支）</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1.假如已经在dev中产生了两次提交，commitid分为af2b2c, 14ed1b1c，需要将这2次提交复制到master分支上</span></span><br><span class="line">git cherry-pick af2b2c</span><br><span class="line">git cherry-pick 14ed1b1c</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2.原来dev的分支节点为1fab3c，写错分支删除，重新创建dev分支</span></span><br><span class="line">git checkout 1fab3c</span><br><span class="line">git branch -D dev</span><br><span class="line">git checkout -b dev</span><br></pre></td></tr></table></figure><h1 id="变基-git-rebase"><a href="#变基-git-rebase" class="headerlink" title="变基 git rebase"></a>变基 git rebase</h1><p>git rebase和git merge都可以用来整合不同分支的修改。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">     dev</span><br><span class="line">      ⬇</span><br><span class="line">C1-C2-C4</span><br><span class="line">|</span><br><span class="line">C3-&gt;C5</span><br><span class="line">    ⬆</span><br><span class="line">   master</span><br></pre></td></tr></table></figure><p>如果想要整合dev分支修改到master，使用merge是先切换到master分支，然后进行git merge。<br>如果用rebase，则是先切换到dev分支，执行<code>git rebase master</code>进行变基，最终会将dev的分叉合入master分支尾部，然后dev指向最新commit节点。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 未在master分支执行git merge的状态</span></span><br><span class="line"></span><br><span class="line">C1-C2-C4      dev</span><br><span class="line">|             ⬇</span><br><span class="line"><span class="meta">C3-&gt;</span><span class="bash">C5-&gt;C34<span class="string">'-&gt;C6</span></span></span><br><span class="line">    ⬆</span><br><span class="line">   master</span><br></pre></td></tr></table></figure><p>注意：git rebase只在本机操作，不要推送到远程仓库，即不要在主分支master上进行git rebase</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 切换到要进行变基的分支</span></span><br><span class="line">git checkout dev</span><br><span class="line"><span class="meta">#</span><span class="bash"> 变基</span></span><br><span class="line">git rebase master</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果提示有冲突类似下面</span></span><br><span class="line">Tsukasa@DESKTOP-O5RIC6N MINGW64 /d/Server/Test/git_rebase (dev)</span><br><span class="line"><span class="meta">$</span><span class="bash"> git rebase master</span></span><br><span class="line"></span><br><span class="line">Auto-merging a.txt</span><br><span class="line">CONFLICT (content): Merge conflict in a.txt</span><br><span class="line">error: could not apply b822ef0... dev修改</span><br><span class="line">hint: Resolve all conflicts manually, mark them as resolved with</span><br><span class="line">hint: "git add/rm &lt;conflicted_files&gt;", then run "git rebase --continue".</span><br><span class="line">hint: You can instead skip this commit: run "git rebase --skip".</span><br><span class="line">hint: To abort and get back to the state before "git rebase", run "git rebase --abort".</span><br><span class="line">Could not apply b822ef0... dev修改</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 根据上述描述，通常由三种策略</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1.解决冲突后，git add和git commit到对象区后，继续执行git rebase --<span class="built_in">continue</span>，直到所有冲突被解决，rebase结束</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2.dev分支的提交冲突是一个commit一个commit进行处理的，某个commit的更新需要忽略，可以执行git rebase --abort</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 3.如果不想执行git rebase了，可以随时执行git rebase --abort回到执行git rebase之前的状态</span></span><br><span class="line">git rebase --continue</span><br><span class="line">git rebase --skip</span><br><span class="line">git rebase --abort</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> git rebase完成后，master指向的节点可能会落后于dev，这时在master分支上执行git merge操作让master分支指向HEAD节点</span></span><br><span class="line">git checkout master</span><br><span class="line">git merge dev</span><br></pre></td></tr></table></figure><h1 id="生产项目分支分配"><a href="#生产项目分支分配" class="headerlink" title="生产项目分支分配"></a>生产项目分支分配</h1><p>dev：开发分支<br>test：开发完毕后，交给测试的分支<br>master：生产阶段<br>bugfix：临时修复bug的分支。</p><p>dev -&gt; test(merge dev) -&gt; master(merge test) -&gt; …</p><p>记录下之前工作时的git协作工作流：</p><ul><li>项目远程主仓库，以及每个人在gitlab上克隆主仓库的项目</li><li>每个人拉取自己私人远程仓库的代码下来</li><li>每个人建立个人远程仓库主分支的跟踪分支，每个开发都在自己的主分支上进行开发</li><li>完成个人开发后往私人远程仓库中推送代码，然后在gitlab上发起merge request请求，code review通过后项目leader合入。</li></ul><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><p><a href="https://www.progit.cn/" target="_blank" rel="external">Pro Git</a></p></li><li><p><a href="https://stackoverflow.com/questions/7438313/pushing-to-git-returning-error-code-403-fatal-http-request-failed" target="_blank" rel="external">Pushing to Git returning Error Code 403 fatal: HTTP request failed</a></p></li></ul><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;平常工作经常需要与Git打交道，记录一些常用的命令和使用场景&lt;/p&gt;
    
    </summary>
    
      <category term="Git" scheme="http://blog.tsukasa.moe/categories/Git/"/>
    
    
      <category term="Git" scheme="http://blog.tsukasa.moe/tags/Git/"/>
    
      <category term="GitHub Pages" scheme="http://blog.tsukasa.moe/tags/GitHub-Pages/"/>
    
  </entry>
  
  <entry>
    <title>通过Windows远程桌面躺在床上玩Galgame</title>
    <link href="http://blog.tsukasa.moe/2021/04/28/Windows-using-remote-destop-to-play-galgame/"/>
    <id>http://blog.tsukasa.moe/2021/04/28/Windows-using-remote-destop-to-play-galgame/</id>
    <published>2021-04-28T11:45:07.000Z</published>
    <updated>2023-10-11T08:50:35.287Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><!-- toc --><p>躺在床上玩Galgame是一件很惬意的事情，因为这样可以很方便的<del>（涩涩）</del>欣赏剧情。</p><p>原理是通过RDP协议实现，设置Windows允许其他设备远程连接后，客户端通过RDP协议与Windows建立TCP连接进行通信，默认远程桌面协议的端口号为3389。</p><h1 id="Windows配置"><a href="#Windows配置" class="headerlink" title="Windows配置"></a>Windows配置</h1><h2 id="允许Windows远程桌面连接"><a href="#允许Windows远程桌面连接" class="headerlink" title="允许Windows远程桌面连接"></a>允许Windows远程桌面连接</h2><p>两种方式，一种是在Windows 10设置的显示-远程桌面中启动远程桌面：</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202309251814664.png" alt=""></p><p>另一种是系统属性-远程中设置允许远程连接到此计算机：</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202309251816049.png" alt=""></p><h2 id="配置允许远程桌面访问Windows的用户"><a href="#配置允许远程桌面访问Windows的用户" class="headerlink" title="配置允许远程桌面访问Windows的用户"></a>配置允许远程桌面访问Windows的用户</h2><p>通常地，当前用户（Tsukasa）就具有远程桌面访问，当然如果是多用户系统，也可以手动添加。</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202309251858827.png" alt=""></p><p>设置完上面步骤后，可以在Android中安装微软远程桌面app或者其他RDP客户端了。</p><h2 id="注册表配置通信端口"><a href="#注册表配置通信端口" class="headerlink" title="注册表配置通信端口"></a>注册表配置通信端口</h2><p>通常来说，这个步骤不需要配置，除非想要修改Windows的RDP监听和通信端口。</p><p>监听端口：用于服务器的传入连接<br><code>计算机\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\Wds\rdpwd\Tds\tcp</code></p><p>会话端口：用于客户端与服务器的通信<br><code>计算机\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp</code></p><p>进入注册表编辑器regedit，找到控制Windows远程桌面服务配置，可以设置TCP连接的一些参数：</p><ul><li>监听端口PortNumber：RDP的TCP监听端口，默认是3389，可以根据需要进行修改。</li><li>会话端口PortNumber：RDP的TCP会话端口，默认是3389，可以根据需要进行修改。</li><li>KeepAliveInterval：没有活动的情况下发送的TCP keep-alive探测之间的时间间隔，以确保连接保持活动状态，单位是毫秒，非必选参数，可以不用配置。</li></ul><p>监听端口配置</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202309251502501.png" alt=""></p><p>会话端口配置</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202310111609593.png" alt=""></p><h2 id="防火墙设置入站规则"><a href="#防火墙设置入站规则" class="headerlink" title="防火墙设置入站规则"></a>防火墙设置入站规则</h2><p>通常来说不需要配置，打开Windows远程桌面连接后一般会允许通过防火墙。需要自定义远程桌面通信端口时才需要进行下面配置。</p><p>打开Windows Defender防火墙，检查远程服务端口是否已添加入站规则。</p><p>按照下面的步骤，新增入站规则，注意端口号需要修改为上面配置的会话端口号。</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202310111613594.jpg" alt=""><br><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202310111629735.jpg" alt=""><br><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202310111630159.png" alt=""><br><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202310111630095.jpg" alt=""><br><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202310111630732.jpg" alt=""></p><h1 id="Android上RDP-app配置"><a href="#Android上RDP-app配置" class="headerlink" title="Android上RDP app配置"></a>Android上RDP app配置</h1><p>RDP客户端有很多，这里选择下载并安装好微软远程桌面app。</p><h2 id="添加远程桌面连接"><a href="#添加远程桌面连接" class="headerlink" title="添加远程桌面连接"></a>添加远程桌面连接</h2><p>如果手机与电脑处于同一个局域网下，点击右上角的<code>+</code>号添加远程桌面，默认会自动检测出同一个局域网开启了远程桌面的PC，直接点击就可以快速设置了。</p><p>第三张图是添加一个远程登陆帐号和密码，用户名在<code>配置允许远程桌面访问Windows的用户</code>一章节中获取，这里是当前用户（Tsukasa），密码自然是这个用户<code>Win+L</code>锁定后登陆到电脑的密码（非PIN码）。</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202309251850175.png" alt=""></p><p>当然假如局域网下无法检测出你的PC，也可以通过点击第一张图中的<code>ADD MANUALLY</code>手动添加，输入本机路由器分配的IP（执行<code>ipconfig</code>查看），选择用户即可。</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202309251906570.jpg =300x" alt=""></p><h2 id="躺在床上愉快的玩耍吧"><a href="#躺在床上愉快的玩耍吧" class="headerlink" title="躺在床上愉快的玩耍吧"></a>躺在床上愉快的玩耍吧</h2><p>在手机添加完成后，点击添加好的远程桌面连接即可连接上Windows桌面，此时再去打开Galgame可以避免一些屏幕适配的问题。</p><p>接下来，你就可以躺在床上和二次元老婆谈情说爱啦~~</p><p><img src="https://cdn.jsdelivr.net/gh/TsukasaMoe/PicturesOfTsukasaMoe/tech/202309251844787.jpg" alt=""></p><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;躺在床上玩Galgame是一件很惬意的事情，因为这样可以很方便的&lt;del&gt;（涩涩）&lt;/del&gt;欣赏剧情。&lt;/p&gt;
    
    </summary>
    
      <category term="Galgame" scheme="http://blog.tsukasa.moe/categories/Galgame/"/>
    
    
      <category term="Galgame" scheme="http://blog.tsukasa.moe/tags/Galgame/"/>
    
      <category term="RDP" scheme="http://blog.tsukasa.moe/tags/RDP/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库基础知识总结</title>
    <link href="http://blog.tsukasa.moe/2021/04/18/MySQL-basics-knowledge-summary/"/>
    <id>http://blog.tsukasa.moe/2021/04/18/MySQL-basics-knowledge-summary/</id>
    <published>2021-04-18T15:06:26.000Z</published>
    <updated>2023-07-24T16:04:00.471Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这篇文章的内容很基础，主要是MySQL基础、常用命令的收录，算是《MySQL必知必会》的读书笔记，方便自己查阅。</p><h1 id="基础SQL"><a href="#基础SQL" class="headerlink" title="基础SQL"></a>基础SQL</h1><p>三部分：权限管理、库操作、表结构操作、数据操作。</p><p>登录数据库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -h 127.0.0.1 -u root -p;</span><br></pre></td></tr></table></figure></p><p>用户权限：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show grants;</span><br><span class="line">+---------------------------------------------------------------------+</span><br><span class="line">| Grants for root@localhost                                           |</span><br><span class="line">+---------------------------------------------------------------------+</span><br><span class="line">| GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;localhost&apos; WITH GRANT OPTION |</span><br><span class="line">| GRANT PROXY ON &apos;&apos;@&apos;&apos; TO &apos;root&apos;@&apos;localhost&apos; WITH GRANT OPTION        |</span><br><span class="line">+---------------------------------------------------------------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></p><p>1.库操作：</p><p>查看建库语句：<br>show database dbName;</p><p>建库：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create database orders_db01 DEFAULT CHARSET utf8 COLLATE utf8_general_ci;</span><br><span class="line">create database if not exists orders_db02 DEFAULT CHARSET utf8 COLLATE utf8_general_ci;</span><br><span class="line">create database orders_db03;</span><br></pre></td></tr></table></figure></p><p>查库：<br>show databases;<br>use orders_db01;</p><p>删库：<br>drop database dbName;</p><p>备份：<br>mysqldump命令</p><p>恢复：</p><p>source /xxx/dbName_bak_20210418.sql;</p><p>表中删除大量数据可以用optimize table来优化空间。</p><ol><li>表结构操作</li></ol><p>查看有哪些表：<br>show tables;</p><p>查看建表语句：<br>show create tableName;</p><p>查看表列定义：<br>desc tableName;<br>show columns from orders;</p><p>查看数据库服务器状态信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show status;</span><br><span class="line">+-----------------------------------------------+--------------------------------------------------+</span><br><span class="line">| Variable_name                                 | Value                                            |</span><br><span class="line">+-----------------------------------------------+--------------------------------------------------+</span><br><span class="line">| Aborted_clients                               | 0                                                |</span><br><span class="line">| Aborted_connects                              | 0                                                |</span><br><span class="line">| Binlog_cache_disk_use                         | 0                                                |</span><br><span class="line">| Binlog_cache_use                              | 0                                                |</span><br><span class="line">| Binlog_stmt_cache_disk_use                    | 0                                                |</span><br><span class="line">| Binlog_stmt_cache_use                         | 0                                                |</span><br><span class="line">| Bytes_received                                | 1469                                             |</span><br><span class="line">| Bytes_sent                                    | 18536                                            |</span><br><span class="line">| Com_admin_commands                            | 0                                                |</span><br><span class="line">| Com_assign_to_keycache                        | 0                                                |</span><br><span class="line">| Com_alter_db                                  | 0                                                |</span><br><span class="line">| Com_alter_db_upgrade                          | 0                                                |</span><br><span class="line">| Com_alter_event                               | 0                                                |</span><br><span class="line">| Com_alter_function                            | 0                                                |</span><br><span class="line">| Com_alter_instance                            | 0                                                |</span><br><span class="line">| Com_alter_procedure                           | 0                                                |</span><br><span class="line">| Com_alter_server                              | 0                                                |</span><br><span class="line">| Com_alter_table                               | 0                                                |</span><br><span class="line">| Com_alter_tablespace                          | 0                                                |</span><br><span class="line">| Com_alter_user                                | 0                                                |</span><br><span class="line">| Com_analyze                                   | 0                                                |</span><br><span class="line">| Com_begin                                     | 0                                                |</span><br><span class="line">| Com_binlog                                    | 0                                                |</span><br><span class="line">| Com_call_procedure                            | 0                                                |</span><br><span class="line">| Com_change_db                                 | 2                                                |</span><br><span class="line">| Com_change_master                             | 0                                                |</span><br><span class="line">| Com_change_repl_filter                        | 0                                                |</span><br><span class="line">| Com_check                                     | 0                                                |</span><br><span class="line">| Com_checksum                                  | 0                                                |</span><br><span class="line">| Com_commit                                    | 0                                                |</span><br><span class="line">| Com_create_db                                 | 2                                                |</span><br><span class="line">| Com_create_event                              | 0                                                |</span><br><span class="line">| Com_create_function                           | 0                                                |</span><br><span class="line">| Com_create_index                              | 0                                                |</span><br><span class="line">| Com_create_procedure                          | 0                                                |</span><br><span class="line">| Com_create_server                             | 0                                                |</span><br><span class="line">| Com_create_table                              | 1                                                |</span><br><span class="line">| Com_create_trigger                            | 0                                                |</span><br><span class="line">| Com_create_udf                                | 0                                                |</span><br><span class="line">| Com_create_user                               | 0                                                |</span><br><span class="line">| Com_create_view                               | 0                                                |</span><br><span class="line">| Com_dealloc_sql                               | 0                                                |</span><br><span class="line">| Com_delete                                    | 0                                                |</span><br><span class="line">| Com_delete_multi                              | 0                                                |</span><br><span class="line">| Com_do                                        | 0                                                |</span><br><span class="line">| Com_drop_db                                   | 1                                                |</span><br><span class="line">| Com_drop_event                                | 0                                                |</span><br><span class="line">| Com_drop_function                             | 0                                                |</span><br><span class="line">| Com_drop_index                                | 0                                                |</span><br><span class="line">| Com_drop_procedure                            | 0                                                |</span><br><span class="line">| Com_drop_server                               | 0                                                |</span><br><span class="line">| Com_drop_table                                | 1                                                |</span><br><span class="line">| Com_drop_trigger                              | 0                                                |</span><br><span class="line">| Com_drop_user                                 | 0                                                |</span><br><span class="line">| Com_drop_view                                 | 0                                                |</span><br><span class="line">| Com_empty_query                               | 0                                                |</span><br><span class="line">| Com_execute_sql                               | 0                                                |</span><br><span class="line">| Com_explain_other                             | 0                                                |</span><br><span class="line">| Com_flush                                     | 0                                                |</span><br><span class="line">| Com_get_diagnostics                           | 0                                                |</span><br><span class="line">| Com_grant                                     | 0                                                |</span><br><span class="line">| Com_ha_close                                  | 0                                                |</span><br><span class="line">| Com_ha_open                                   | 0                                                |</span><br><span class="line">| Com_ha_read                                   | 0                                                |</span><br><span class="line">| Com_help                                      | 0                                                |</span><br><span class="line">| Com_insert                                    | 0                                                |</span><br><span class="line">| Com_insert_select                             | 0                                                |</span><br><span class="line">| Com_install_plugin                            | 0                                                |</span><br><span class="line">| Com_kill                                      | 0                                                |</span><br><span class="line">| Com_load                                      | 0                                                |</span><br><span class="line">| Com_lock_tables                               | 0                                                |</span><br><span class="line">| Com_optimize                                  | 0                                                |</span><br><span class="line">| Com_preload_keys                              | 0                                                |</span><br><span class="line">| Com_prepare_sql                               | 0                                                |</span><br><span class="line">| Com_purge                                     | 0                                                |</span><br><span class="line">| Com_purge_before_date                         | 0                                                |</span><br><span class="line">| Com_release_savepoint                         | 0                                                |</span><br><span class="line">| Com_rename_table                              | 0                                                |</span><br><span class="line">| Com_rename_user                               | 0                                                |</span><br><span class="line">| Com_repair                                    | 0                                                |</span><br><span class="line">| Com_replace                                   | 0                                                |</span><br><span class="line">| Com_replace_select                            | 0                                                |</span><br><span class="line">| Com_reset                                     | 0                                                |</span><br><span class="line">| Com_resignal                                  | 0                                                |</span><br><span class="line">| Com_revoke                                    | 0                                                |</span><br><span class="line">| Com_revoke_all                                | 0                                                |</span><br><span class="line">| Com_rollback                                  | 0                                                |</span><br><span class="line">| Com_rollback_to_savepoint                     | 0                                                |</span><br><span class="line">| Com_savepoint                                 | 0                                                |</span><br><span class="line">| Com_select                                    | 4                                                |</span><br><span class="line">| Com_set_option                                | 0                                                |</span><br><span class="line">| Com_signal                                    | 0                                                |</span><br><span class="line">| Com_show_binlog_events                        | 0                                                |</span><br><span class="line">| Com_show_binlogs                              | 0                                                |</span><br><span class="line">| Com_show_charsets                             | 0                                                |</span><br><span class="line">| Com_show_collations                           | 0                                                |</span><br><span class="line">| Com_show_create_db                            | 0                                                |</span><br><span class="line">| Com_show_create_event                         | 0                                                |</span><br><span class="line">| Com_show_create_func                          | 0                                                |</span><br><span class="line">| Com_show_create_proc                          | 0                                                |</span><br><span class="line">| Com_show_create_table                         | 2                                                |</span><br><span class="line">| Com_show_create_trigger                       | 0                                                |</span><br><span class="line">| Com_show_databases                            | 4                                                |</span><br><span class="line">| Com_show_engine_logs                          | 0                                                |</span><br><span class="line">| Com_show_engine_mutex                         | 0                                                |</span><br><span class="line">| Com_show_engine_status                        | 0                                                |</span><br><span class="line">| Com_show_events                               | 0                                                |</span><br><span class="line">| Com_show_errors                               | 0                                                |</span><br><span class="line">| Com_show_fields                               | 5                                                |</span><br><span class="line">| Com_show_function_code                        | 0                                                |</span><br><span class="line">| Com_show_function_status                      | 0                                                |</span><br><span class="line">| Com_show_grants                               | 0                                                |</span><br><span class="line">| Com_show_keys                                 | 0                                                |</span><br><span class="line">| Com_show_master_status                        | 0                                                |</span><br><span class="line">| Com_show_open_tables                          | 0                                                |</span><br><span class="line">| Com_show_plugins                              | 0                                                |</span><br><span class="line">| Com_show_privileges                           | 0                                                |</span><br><span class="line">| Com_show_procedure_code                       | 0                                                |</span><br><span class="line">| Com_show_procedure_status                     | 0                                                |</span><br><span class="line">| Com_show_processlist                          | 0                                                |</span><br><span class="line">| Com_show_profile                              | 0                                                |</span><br><span class="line">| Com_show_profiles                             | 0                                                |</span><br><span class="line">| Com_show_relaylog_events                      | 0                                                |</span><br><span class="line">| Com_show_slave_hosts                          | 0                                                |</span><br><span class="line">| Com_show_slave_status                         | 0                                                |</span><br><span class="line">| Com_show_status                               | 2                                                |</span><br><span class="line">| Com_show_storage_engines                      | 0                                                |</span><br><span class="line">| Com_show_table_status                         | 0                                                |</span><br><span class="line">| Com_show_tables                               | 3                                                |</span><br><span class="line">| Com_show_triggers                             | 0                                                |</span><br><span class="line">| Com_show_variables                            | 0                                                |</span><br><span class="line">| Com_show_warnings                             | 0                                                |</span><br><span class="line">| Com_show_create_user                          | 0                                                |</span><br><span class="line">| Com_shutdown                                  | 0                                                |</span><br><span class="line">| Com_slave_start                               | 0                                                |</span><br><span class="line">| Com_slave_stop                                | 0                                                |</span><br><span class="line">| Com_group_replication_start                   | 0                                                |</span><br><span class="line">| Com_group_replication_stop                    | 0                                                |</span><br><span class="line">| Com_stmt_execute                              | 0                                                |</span><br><span class="line">| Com_stmt_close                                | 0                                                |</span><br><span class="line">| Com_stmt_fetch                                | 0                                                |</span><br><span class="line">| Com_stmt_prepare                              | 0                                                |</span><br><span class="line">| Com_stmt_reset                                | 0                                                |</span><br><span class="line">| Com_stmt_send_long_data                       | 0                                                |</span><br><span class="line">| Com_truncate                                  | 0                                                |</span><br><span class="line">| Com_uninstall_plugin                          | 0                                                |</span><br><span class="line">| Com_unlock_tables                             | 0                                                |</span><br><span class="line">| Com_update                                    | 0                                                |</span><br><span class="line">| Com_update_multi                              | 0                                                |</span><br><span class="line">| Com_xa_commit                                 | 0                                                |</span><br><span class="line">| Com_xa_end                                    | 0                                                |</span><br><span class="line">| Com_xa_prepare                                | 0                                                |</span><br><span class="line">| Com_xa_recover                                | 0                                                |</span><br><span class="line">| Com_xa_rollback                               | 0                                                |</span><br><span class="line">| Com_xa_start                                  | 0                                                |</span><br><span class="line">| Com_stmt_reprepare                            | 0                                                |</span><br><span class="line">| Compression                                   | OFF                                              |</span><br><span class="line">| Connection_errors_accept                      | 0                                                |</span><br><span class="line">| Connection_errors_internal                    | 0                                                |</span><br><span class="line">| Connection_errors_max_connections             | 0                                                |</span><br><span class="line">| Connection_errors_peer_address                | 0                                                |</span><br><span class="line">| Connection_errors_select                      | 0                                                |</span><br><span class="line">| Connection_errors_tcpwrap                     | 0                                                |</span><br><span class="line">| Connections                                   | 9                                                |</span><br><span class="line">| Created_tmp_disk_tables                       | 5                                                |</span><br><span class="line">| Created_tmp_files                             | 5                                                |</span><br><span class="line">| Created_tmp_tables                            | 12                                               |</span><br><span class="line">| Delayed_errors                                | 0                                                |</span><br><span class="line">| Delayed_insert_threads                        | 0                                                |</span><br><span class="line">| Delayed_writes                                | 0                                                |</span><br><span class="line">| Flush_commands                                | 1                                                |</span><br><span class="line">| Handler_commit                                | 0                                                |</span><br><span class="line">| Handler_delete                                | 0                                                |</span><br><span class="line">| Handler_discover                              | 0                                                |</span><br><span class="line">| Handler_external_lock                         | 6                                                |</span><br><span class="line">| Handler_mrr_init                              | 0                                                |</span><br><span class="line">| Handler_prepare                               | 0                                                |</span><br><span class="line">| Handler_read_first                            | 5                                                |</span><br><span class="line">| Handler_read_key                              | 7                                                |</span><br><span class="line">| Handler_read_last                             | 0                                                |</span><br><span class="line">| Handler_read_next                             | 0                                                |</span><br><span class="line">| Handler_read_prev                             | 0                                                |</span><br><span class="line">| Handler_read_rnd                              | 0                                                |</span><br><span class="line">| Handler_read_rnd_next                         | 145                                              |</span><br><span class="line">| Handler_rollback                              | 0                                                |</span><br><span class="line">| Handler_savepoint                             | 0                                                |</span><br><span class="line">| Handler_savepoint_rollback                    | 0                                                |</span><br><span class="line">| Handler_update                                | 0                                                |</span><br><span class="line">| Handler_write                                 | 117                                              |</span><br><span class="line">| Innodb_buffer_pool_dump_status                | Dumping of buffer pool not started               |</span><br><span class="line">| Innodb_buffer_pool_load_status                | Buffer pool(s) load completed at 210407  0:31:28 |</span><br><span class="line">| Innodb_buffer_pool_resize_status              |                                                  |</span><br><span class="line">| Innodb_buffer_pool_pages_data                 | 256                                              |</span><br><span class="line">| Innodb_buffer_pool_bytes_data                 | 4194304                                          |</span><br><span class="line">| Innodb_buffer_pool_pages_dirty                | 0                                                |</span><br><span class="line">| Innodb_buffer_pool_bytes_dirty                | 0                                                |</span><br><span class="line">| Innodb_buffer_pool_pages_flushed              | 113                                              |</span><br><span class="line">| Innodb_buffer_pool_pages_free                 | 256                                              |</span><br><span class="line">| Innodb_buffer_pool_pages_misc                 | 0                                                |</span><br><span class="line">| Innodb_buffer_pool_pages_total                | 512                                              |</span><br><span class="line">| Innodb_buffer_pool_read_ahead_rnd             | 0                                                |</span><br><span class="line">| Innodb_buffer_pool_read_ahead                 | 0                                                |</span><br><span class="line">| Innodb_buffer_pool_read_ahead_evicted         | 0                                                |</span><br><span class="line">| Innodb_buffer_pool_read_requests              | 3243                                             |</span><br><span class="line">| Innodb_buffer_pool_reads                      | 400                                              |</span><br><span class="line">| Innodb_buffer_pool_wait_free                  | 0                                                |</span><br><span class="line">| Innodb_buffer_pool_write_requests             | 1081                                             |</span><br><span class="line">| Innodb_data_fsyncs                            | 36                                               |</span><br><span class="line">| Innodb_data_pending_fsyncs                    | 0                                                |</span><br><span class="line">| Innodb_data_pending_reads                     | 0                                                |</span><br><span class="line">| Innodb_data_pending_writes                    | 0                                                |</span><br><span class="line">| Innodb_data_read                              | 6623744                                          |</span><br><span class="line">| Innodb_data_reads                             | 438                                              |</span><br><span class="line">| Innodb_data_writes                            | 152                                              |</span><br><span class="line">| Innodb_data_written                           | 2433024                                          |</span><br><span class="line">| Innodb_dblwr_pages_written                    | 34                                               |</span><br><span class="line">| Innodb_dblwr_writes                           | 3                                                |</span><br><span class="line">| Innodb_log_waits                              | 0                                                |</span><br><span class="line">| Innodb_log_write_requests                     | 12                                               |</span><br><span class="line">| Innodb_log_writes                             | 15                                               |</span><br><span class="line">| Innodb_os_log_fsyncs                          | 21                                               |</span><br><span class="line">| Innodb_os_log_pending_fsyncs                  | 0                                                |</span><br><span class="line">| Innodb_os_log_pending_writes                  | 0                                                |</span><br><span class="line">| Innodb_os_log_written                         | 21504                                            |</span><br><span class="line">| Innodb_page_size                              | 16384                                            |</span><br><span class="line">| Innodb_pages_created                          | 53                                               |</span><br><span class="line">| Innodb_pages_read                             | 399                                              |</span><br><span class="line">| Innodb_pages_written                          | 113                                              |</span><br><span class="line">| Innodb_row_lock_current_waits                 | 0                                                |</span><br><span class="line">| Innodb_row_lock_time                          | 0                                                |</span><br><span class="line">| Innodb_row_lock_time_avg                      | 0                                                |</span><br><span class="line">| Innodb_row_lock_time_max                      | 0                                                |</span><br><span class="line">| Innodb_row_lock_waits                         | 0                                                |</span><br><span class="line">| Innodb_rows_deleted                           | 0                                                |</span><br><span class="line">| Innodb_rows_inserted                          | 81                                               |</span><br><span class="line">| Innodb_rows_read                              | 100                                              |</span><br><span class="line">| Innodb_rows_updated                           | 0                                                |</span><br><span class="line">| Innodb_num_open_files                         | 30                                               |</span><br><span class="line">| Innodb_truncated_status_writes                | 0                                                |</span><br><span class="line">| Innodb_available_undo_logs                    | 128                                              |</span><br><span class="line">| Key_blocks_not_flushed                        | 0                                                |</span><br><span class="line">| Key_blocks_unused                             | 6693                                             |</span><br><span class="line">| Key_blocks_used                               | 5                                                |</span><br><span class="line">| Key_read_requests                             | 18                                               |</span><br><span class="line">| Key_reads                                     | 5                                                |</span><br><span class="line">| Key_write_requests                            | 0                                                |</span><br><span class="line">| Key_writes                                    | 0                                                |</span><br><span class="line">| Last_query_cost                               | 1.399000                                         |</span><br><span class="line">| Last_query_partial_plans                      | 1                                                |</span><br><span class="line">| Locked_connects                               | 0                                                |</span><br><span class="line">| Max_execution_time_exceeded                   | 0                                                |</span><br><span class="line">| Max_execution_time_set                        | 0                                                |</span><br><span class="line">| Max_execution_time_set_failed                 | 0                                                |</span><br><span class="line">| Max_used_connections                          | 6                                                |</span><br><span class="line">| Max_used_connections_time                     | 2021-04-07 00:54:31                              |</span><br><span class="line">| Not_flushed_delayed_rows                      | 0                                                |</span><br><span class="line">| Ongoing_anonymous_transaction_count           | 0                                                |</span><br><span class="line">| Open_files                                    | 19                                               |</span><br><span class="line">| Open_streams                                  | 0                                                |</span><br><span class="line">| Open_table_definitions                        | 319                                              |</span><br><span class="line">| Open_tables                                   | 111                                              |</span><br><span class="line">| Opened_files                                  | 536                                              |</span><br><span class="line">| Opened_table_definitions                      | 1                                                |</span><br><span class="line">| Opened_tables                                 | 3                                                |</span><br><span class="line">| Performance_schema_accounts_lost              | 0                                                |</span><br><span class="line">| Performance_schema_cond_classes_lost          | 0                                                |</span><br><span class="line">| Performance_schema_cond_instances_lost        | 0                                                |</span><br><span class="line">| Performance_schema_digest_lost                | 0                                                |</span><br><span class="line">| Performance_schema_file_classes_lost          | 0                                                |</span><br><span class="line">| Performance_schema_file_handles_lost          | 0                                                |</span><br><span class="line">| Performance_schema_file_instances_lost        | 0                                                |</span><br><span class="line">| Performance_schema_hosts_lost                 | 0                                                |</span><br><span class="line">| Performance_schema_index_stat_lost            | 0                                                |</span><br><span class="line">| Performance_schema_locker_lost                | 0                                                |</span><br><span class="line">| Performance_schema_memory_classes_lost        | 0                                                |</span><br><span class="line">| Performance_schema_metadata_lock_lost         | 0                                                |</span><br><span class="line">| Performance_schema_mutex_classes_lost         | 0                                                |</span><br><span class="line">| Performance_schema_mutex_instances_lost       | 0                                                |</span><br><span class="line">| Performance_schema_nested_statement_lost      | 0                                                |</span><br><span class="line">| Performance_schema_prepared_statements_lost   | 0                                                |</span><br><span class="line">| Performance_schema_program_lost               | 0                                                |</span><br><span class="line">| Performance_schema_rwlock_classes_lost        | 0                                                |</span><br><span class="line">| Performance_schema_rwlock_instances_lost      | 0                                                |</span><br><span class="line">| Performance_schema_session_connect_attrs_lost | 0                                                |</span><br><span class="line">| Performance_schema_socket_classes_lost        | 0                                                |</span><br><span class="line">| Performance_schema_socket_instances_lost      | 0                                                |</span><br><span class="line">| Performance_schema_stage_classes_lost         | 0                                                |</span><br><span class="line">| Performance_schema_statement_classes_lost     | 0                                                |</span><br><span class="line">| Performance_schema_table_handles_lost         | 0                                                |</span><br><span class="line">| Performance_schema_table_instances_lost       | 0                                                |</span><br><span class="line">| Performance_schema_table_lock_stat_lost       | 0                                                |</span><br><span class="line">| Performance_schema_thread_classes_lost        | 0                                                |</span><br><span class="line">| Performance_schema_thread_instances_lost      | 0                                                |</span><br><span class="line">| Performance_schema_users_lost                 | 0                                                |</span><br><span class="line">| Prepared_stmt_count                           | 0                                                |</span><br><span class="line">| Qcache_free_blocks                            | 0                                                |</span><br><span class="line">| Qcache_free_memory                            | 0                                                |</span><br><span class="line">| Qcache_hits                                   | 0                                                |</span><br><span class="line">| Qcache_inserts                                | 0                                                |</span><br><span class="line">| Qcache_lowmem_prunes                          | 0                                                |</span><br><span class="line">| Qcache_not_cached                             | 0                                                |</span><br><span class="line">| Qcache_queries_in_cache                       | 0                                                |</span><br><span class="line">| Qcache_total_blocks                           | 0                                                |</span><br><span class="line">| Queries                                       | 94                                               |</span><br><span class="line">| Questions                                     | 36                                               |</span><br><span class="line">| Select_full_join                              | 0                                                |</span><br><span class="line">| Select_full_range_join                        | 0                                                |</span><br><span class="line">| Select_range                                  | 0                                                |</span><br><span class="line">| Select_range_check                            | 0                                                |</span><br><span class="line">| Select_scan                                   | 12                                               |</span><br><span class="line">| Slave_open_temp_tables                        | 0                                                |</span><br><span class="line">| Slow_launch_threads                           | 0                                                |</span><br><span class="line">| Slow_queries                                  | 0                                                |</span><br><span class="line">| Sort_merge_passes                             | 0                                                |</span><br><span class="line">| Sort_range                                    | 0                                                |</span><br><span class="line">| Sort_rows                                     | 0                                                |</span><br><span class="line">| Sort_scan                                     | 0                                                |</span><br><span class="line">| Ssl_accept_renegotiates                       | 0                                                |</span><br><span class="line">| Ssl_accepts                                   | 0                                                |</span><br><span class="line">| Ssl_callback_cache_hits                       | 0                                                |</span><br><span class="line">| Ssl_cipher                                    |                                                  |</span><br><span class="line">| Ssl_cipher_list                               |                                                  |</span><br><span class="line">| Ssl_client_connects                           | 0                                                |</span><br><span class="line">| Ssl_connect_renegotiates                      | 0                                                |</span><br><span class="line">| Ssl_ctx_verify_depth                          | 0                                                |</span><br><span class="line">| Ssl_ctx_verify_mode                           | 0                                                |</span><br><span class="line">| Ssl_default_timeout                           | 0                                                |</span><br><span class="line">| Ssl_finished_accepts                          | 0                                                |</span><br><span class="line">| Ssl_finished_connects                         | 0                                                |</span><br><span class="line">| Ssl_server_not_after                          |                                                  |</span><br><span class="line">| Ssl_server_not_before                         |                                                  |</span><br><span class="line">| Ssl_session_cache_hits                        | 0                                                |</span><br><span class="line">| Ssl_session_cache_misses                      | 0                                                |</span><br><span class="line">| Ssl_session_cache_mode                        | NONE                                             |</span><br><span class="line">| Ssl_session_cache_overflows                   | 0                                                |</span><br><span class="line">| Ssl_session_cache_size                        | 0                                                |</span><br><span class="line">| Ssl_session_cache_timeouts                    | 0                                                |</span><br><span class="line">| Ssl_sessions_reused                           | 0                                                |</span><br><span class="line">| Ssl_used_session_cache_entries                | 0                                                |</span><br><span class="line">| Ssl_verify_depth                              | 0                                                |</span><br><span class="line">| Ssl_verify_mode                               | 0                                                |</span><br><span class="line">| Ssl_version                                   |                                                  |</span><br><span class="line">| Table_locks_immediate                         | 120                                              |</span><br><span class="line">| Table_locks_waited                            | 0                                                |</span><br><span class="line">| Table_open_cache_hits                         | 7                                                |</span><br><span class="line">| Table_open_cache_misses                       | 3                                                |</span><br><span class="line">| Table_open_cache_overflows                    | 0                                                |</span><br><span class="line">| Tc_log_max_pages_used                         | 0                                                |</span><br><span class="line">| Tc_log_page_size                              | 0                                                |</span><br><span class="line">| Tc_log_page_waits                             | 0                                                |</span><br><span class="line">| Threads_cached                                | 0                                                |</span><br><span class="line">| Threads_connected                             | 6                                                |</span><br><span class="line">| Threads_created                               | 6                                                |</span><br><span class="line">| Threads_running                               | 1                                                |</span><br><span class="line">| Uptime                                        | 3030                                             |</span><br><span class="line">| Uptime_since_flush_status                     | 3030                                             |</span><br><span class="line">+-----------------------------------------------+--------------------------------------------------+</span><br><span class="line">356 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></p><p>查看完整列定义<br>mysql&gt; show full columns from orders;<br>+————+———-+———–+——+—–+———+—————-+———————————+———+<br>| Field      | Type     | Collation | Null | Key | Default | Extra          | Privileges                      | Comment |<br>+————+———-+———–+——+—–+———+—————-+———————————+———+<br>| order_num  | int(11)  | NULL      | NO   | PRI | NULL    | auto_increment | select,insert,update,references |         |<br>| order_date | datetime | NULL      | NO   |     | NULL    |                | select,insert,update,references |         |<br>| cust_id    | int(11)  | NULL      | NO   | MUL | NULL    |                | select,insert,update,references |         |<br>+————+———-+———–+——+—–+———+—————-+———————————+———+<br>3 rows in set (0.00 sec)</p><p>建表：<br>CREATE TABLE <code>orders2</code> (<br>  <code>order_num</code> int(11) NOT NULL AUTO_INCREMENT,<br>  <code>order_date</code> datetime NOT NULL,<br>  <code>cust_id</code> int(11) NOT NULL,<br>  PRIMARY KEY (<code>order_num</code>),<br>  KEY <code>fk_orders_customers2</code> (<code>cust_id</code>),<br>  CONSTRAINT <code>fk_orders_customers2</code> FOREIGN KEY (<code>cust_id</code>) REFERENCES <code>customers</code> (<code>cust_id</code>)<br>) ENGINE=InnoDB AUTO_INCREMENT=20010 DEFAULT CHARSET=utf8;</p><p>CREATE TABLE <code>orderitems3</code> (<br>  <code>order_num</code> int(11) NOT NULL comment ‘订单号’,<br>  <code>order_item</code> int(11) NOT NULL comment ‘订单项’,<br>  <code>prod_id</code> char(10) NOT NULL,<br>  <code>quantity</code> int(11) NOT NULL default 1,<br>  <code>item_price</code> decimal(8,2) NOT NULL,<br>  PRIMARY KEY (<code>order_num</code>,<code>order_item</code>),<br>  index idx_prod_id(<code>prod_id</code>)<br>) ENGINE=InnoDB DEFAULT CHARSET=utf8;</p><p>create table orders_new like order;</p><p>引擎类型：InnoDB vs MyISAM</p><ul><li>InnoDB：支持事务；不支持全文本搜索；存储在磁盘。</li><li>MyISAM：不支持事务；支持全文本搜索；存储在内存，性能高。<br>同一个数据库可以混用引擎类型。</li></ul><p>修改表结构：</p><p>增、删、改列：<br>alter table vendors add column vend_phone varchar(16) null after vend_address;<br>alter table vendors modify column vend_phone varchar(32) comment ‘租户手机号码’;<br>alter table vendors change column vend_phone vend_phone varchar(32) comment ‘租户手机号码’;<br>alter table vendors drop column vend_phone;</p><p>增删改其他类型（主键、外键、索引）：<br>alter table orderitems2 drop primary key;<br>alter table orderitems2 add primary key (<code>order_num</code>,<code>order_item</code>);<br>alter table orderitems2 drop primary key, add column <code>id</code> int(11) NOT NULL AUTO_INCREMENT FIRST, add primary key(<code>id</code>);</p><p>alter table orderitems2<br>  add constraint fk_orderitems_orders2 foreign key (order_num) references orders(order_num),<br>  add constraint fk_orderitems_products2 foreign key (prod_id) references products(prod_id);<br>alter table orderitems2 drop foreign key fk_orderitems_orders2;</p><p>普通索引：索引列值可不唯一。<br>CREATE INDEX indexName ON table_name (column_name);<br>ALTER table tableName ADD INDEX indexName(columnName);<br>DROP INDEX [indexName] ON mytable;<br>唯一索引：索引列值必须唯一，允许有空值。<br>CREATE UNIQUE INDEX indexName ON mytable(username(length));<br>ALTER table mytable ADD UNIQUE [indexName] (username(length));<br>两者均可以指定列索引长度：</p><p>修改字段默认值：直接修改表文件，速度很快。<br>alter table orderitems alter quantity set default 1;<br>alter table orderitems alter quantity drop default;</p><p>删表<br>drop table if exists orderitems2;</p><p>重命名表<br>rename table orders to orders_old, orders_new to orders;<br>ALTER TABLE orders_old RENAME TO orders;</p><p>视图：</p><ul><li>特点：重用SQL，虚拟的表，本身不包含数据，保护数据，注意性能问题。</li><li>规则：表中的order by会覆盖视图中的；不能索引、关联触发器或默认值；可以与表一起连用。</li></ul><p>create view productcustomers as<br>  (<br>    select cust_name, cust_contact, prod_id from customers c, orders o, orderitems oi<br>    where c.cust_id = o.cust_id and oi.order_num = o.order_num<br>  );<br>show create view productcustomers;<br>drop view productcustomers;<br>create or replace view productcustomers as<br>  (<br>    select cust_name, cust_contact, prod_id from customers c, orders o, orderitems oi<br>    where c.cust_id = o.cust_id and oi.order_num = o.order_num<br>  );<br>使用视图<br>select cust_name, cust_contact from productcustomers where prod_id = ‘TNT2’;</p><p>存储过程：<br>delimiter //<br>告诉命令行使用程序使用//作为新的语句结束分隔符。</p><p>示例：<br>delimiter //</p><p>create procedure proc_ordertotal(<br>  in onumber int,<br>  in taxable boolean,<br>  out ototal decimal(8,2)<br>) comment ‘Obtain order total, optionally adding tax’<br>begin<br>  declare total decimal(8,2);<br>  declare taxrate int default 6;</p><p>  select sum(item_price*quantity) from orderitems where order_num = onumber into total;</p><p>  – if need to add tax<br>  if taxable then<br>    select total+(total/100*taxrate) into total;<br>  end if;</p><p>  select total into ototal;</p><p>end //</p><p>delimiter ;</p><p>call proc_ordertotal(20005, 0, @total);<br>select @total;</p><p>drop procedure proc_ordertotal;</p><p>show procedure status;<br>show create procedure proc_ordertotal;</p><p>游标：存储游标后，可以根据需要滚动或浏览其中的数据。只能用于存储过程。游标使用结束时必须关闭。<br>示例：</p><p>delimiter //<br>create procedure proc_processorders()<br>begin</p><p>  declare isDone boolean default 0;<br>  declare oNumber int;<br>  declare outTotal decimal(8,2);</p><p>  declare ordernumbers cursor for (select order_num from orders);</p><p>  declare continue handler for sqlstate ‘02000’ set isDone = 1;</p><p>  create table if not exists ordertotals(<br>    order_num int, total decimal(8,2)<br>  );</p><p>  open ordernumbers;</p><p>  repeat<br>    fetch ordernumbers into oNumber;<br>    call proc_ordertotal(oNumber, 1, outTotal);</p><pre><code>insert into ordertotals(order_num, total) values(oNumber, outTotal);</code></pre><p>  until isDone end repeat;</p><p>  close ordernumbers;</p><p>end //<br>delimiter ;</p><p>call proc_processorders();<br>select *from ordertotals;</p><p>触发器：</p><ul><li>四要素：唯一触发器名；关联的表；应该响应的活动（delete, insert, update）；何时执行（before, after）</li><li>规则：仅支持表；每个表最多支持6个。insert有new虚拟表（值可被更新）；delete有old表，值不可被更新，为只读；update有new和old表，new表的值可被更新，old的为只读。</li></ul><p>delimiter //<br>create trigger tg_neworder after insert on orders for each row<br>begin<br>  select new.order_num into @tt;<br>end //<br>delimiter ;</p><p>insert into orders(order_date,cust_id) values(now(), 10001);<br>select @tt;<br>drop trigger tg_neworder;</p><p>delimiter //<br>create trigger tg_deleteorder before delete on orders for each row<br>begin<br>  insert into archive_orders(order_num, order_date, cust_id) values(old.order_num, old.order_date, old.cust_id);<br>end //<br>delimiter ;</p><p>create trigger tg_updatevendor before update on vendors for each row set new.vend_state = Upper(new.vend_state);<br>drop trigger tg_updatevendor;</p><p>事务<br>要么全部执行失败，要么全部执行成功，对于中途发生错误的事务回滚。<br>只能回退insert, update, delete语句。</p><p>start transaction;<br>xxx操作<br>rollback;</p><p>start transaction;<br>xxx操作<br>commit;</p><p>保留点<br>savepoint deletePoint;<br>xxx操作<br>rollback to deletePoint;<br>执行rollback或commit后事务结束，保留点释放，或使用release savepoint deletePoint释放</p><p>取消MySQL自动提交：<br>set autocommit = 0;</p><p>全球化和本地化<br>查看字符集：<br>show character set;<br>查看校对：<br>show collation;</p><p>可以在安装时定义一个默认字符集和校对，也可以在创建数据库时创建，还可以对表、表字段创建。<br>show variables like ‘character%’;<br>show variables like ‘collation%’;</p><p>create table mytable(<br>  column1 int,<br>  column2 varchar(32)<br>) default character set hebrew<br>  collate hebrew_general_ci;</p><p>安全管理<br>use mysql;<br>select * from user;</p><p>创建用户<br>create user tsukasa identified by ‘p12345’;<br>设置访问权限<br>三要素：</p><ul><li>要授予的权限</li><li>被授予访问权限的数据库或表</li><li>用户名<br>show grants for tsukasa;<br>grant select, insert, update, delete on test.<em> to tsukasa;<br>grant all on test.</em> to tsukasa;</li></ul><p>回收权限<br>revoke select on test.* from tsukasa;</p><p>更改口令<br>set password for tsukasa = Password(‘p54321’);</p><p>重命名用户<br>rename user tsukasa to tsukasa2;<br>删除用户<br>drop user tsukasa2;</p><h2 id="表结构处理"><a href="#表结构处理" class="headerlink" title="表结构处理"></a>表结构处理</h2><h2 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h2><p>增<br>单行<br>INSERT INTO <code>products</code> (<code>prod_id</code>, <code>vend_id</code>, <code>prod_name</code>, <code>prod_price</code>, <code>prod_desc</code>) VALUES (‘FU12’, ‘1002’, ‘Apple’, ‘4.00’, ‘sweet’);<br>批量（提高性能）<br>INSERT INTO <code>products</code> (<code>prod_id</code>, <code>vend_id</code>, <code>prod_name</code>, <code>prod_price</code>, <code>prod_desc</code>)<br>  VALUES (‘FU12’, ‘1002’, ‘Apple’, ‘4.00’, ‘sweet’),<br>  (‘FU13’, ‘1003’, ‘Banana’, ‘4.00’, ‘sweet’);</p><p>INSERT INTO products_new (<code>prod_id</code>, <code>vend_id</code>, <code>prod_name</code>, <code>prod_price</code>, <code>prod_desc</code>)<br>  select (<code>prod_id</code>, <code>vend_id</code>, <code>prod_name</code>, <code>prod_price</code>, <code>prod_desc</code>) from products where vend_id = 1002;</p><p>删<br>delete from products where prod_id = ‘FU12’;<br>truncate tableName;</p><p>改<br>update customers set cust_name = ‘The Fudds’, cust_email = ‘elmer@fudd.com’<br>  where cust_id = 10005;</p><p>查<br>select子句顺序：select&gt;from&gt;where&gt;group by&gt;having&gt;order by&gt;limit<br>select <em> from 表名 where … having … group by … order by… limit …<br>selct </em> from 表名1 inner/left/right join 表名2 on 条件 group by…</p><p>限制行数（limit）<br>select <em> from products limit 5;<br>select </em> from products limit 3,2;</p><p>按字典排序（order by）<br>select prod_id as ‘产品ID’, prod_name as ‘产品名称’ from products order by prod_id desc, vend_id asc;</p><ul><li>典型场景：找出最昂贵的物品<br>select prod_id, prod_price from products order by prod_price desc limit 1;</li></ul><p>条件查询（where）<br>select * from products where prod_name = ‘Oil can’ and prod_price &lt; 10;<br>select prod_name, prod_price from products where vend_id = 1002 or vend_id = 1003;</p><p>IN与NOT、BETWEEN<br>select prod_id ‘产品ID’ from products where vend_id in (‘1001’, ‘1002’, ‘1003’);<br>select prod_id ‘产品ID’ from products where vend_id not in (‘1001’, ‘1002’, ‘1003’);</p><p>select prod_name, prod_price from products where prod_price between 5 and 10;</p><p>select distinct vend_id from products;</p><p>通配符（多字符）：<br>select t1.prod_id, t1.prod_name from products t1 where t1.prod_id like ‘ANV%’;<br>select t1.prod_id, t1.prod_name from products t1 where t1.prod_id like ‘ANV%’;</p><p>单字符：<br>select prod_id, prod_name from products where prod<em>name like ‘</em> ton%’;</p><p>正则表达式：<br>select prod_id, prod_name from products where prod_name regexp ‘.000’;</p><p>常见函数：<br>官方文档链接：<a href="https://dev.mysql.com/doc/refman/5.6/en/functions.html" target="_blank" rel="external">https://dev.mysql.com/doc/refman/5.6/en/functions.html</a></p><ul><li>数学函数：ABS(x), SQRT(x), MOD(x,y), CEIL(x), COS(x), LOG10(x), DEGREES(x)弧度换角度, ROUND(x, D), sign(x)正负零判断, SUM(x), AVG(x), MAX(x), MIN(x), COUNT(x)</li><li>字符串函数：CONCAT(str1, str2, …, strn), RTRIM(str), TRIM(str), UPPER(str), LENGTH(str), CHAR_LENGTH(str), LPAD(s1, len, s2)用s2在s1左边填充，直到整个字符串为len, SUBSTRING(str,pos), SUBSTRING(str,pos,len), STRCMP(s1, s2)字符串是否相等, REVERSE(str), LEFT(s,n), REPEAT(s,n), REPLACE(s,s1,s2)</li><li>日期和时间函数：CURDATE(), NOW(), UNIX_TIMESTAMP(), UNIX_TIMESTAMP(date), DAYOFYEAR(d)、DAYOFMONTH(d), WEEKOFYEAD(d), QUARTER(date), HOUR(), ADDTIME(date,expr), SUBTIME(date,expr), datediff(d1,d2), date_add(time, intervalTime), date_format(time, format)</li><li>条件判断函数：IF(expr,v1,v2), IFNULL(v1,v2), case expr when v1 then r1 [when v2 then r2][else r3] end类似case函数</li><li>系统信息函数：CONNECTION_ID(), USER()</li><li>加密函数：MD5(str), PASSWORD(str)单项加密</li><li>格式化函数：CONV(N,from_base,to_base)进制转换，FORMAT(x,n)将数字x格式化并以四十五入方式保留小数点后n位，以字符串形式返回。</li></ul><p>示例：<br>SELECT MOD(29,9);</p><p>select concat(vend_name, ‘(‘, vend_country, ‘)’) as ‘vendInfo’ from vendors order by vend_name;<br>select prod_id, quantity, item_price, quantity*item_price as expanded_price from orderitems where order_num = 20005;<br>select degrees(pi());<br>select substring(“abcdefg”, 1, 3);</p><p>select MONTH(now());<br>select datediff(now(), ‘2021-04-06’);<br>SELECT DATE_ADD(‘2018-05-01’,INTERVAL 1 DAY);<br>SELECT DATE_FORMAT(curtime(), ‘%W %M %Y’);<br>select DAYOFWEEK(“2021-04-08”);<br>select cust_id, order_num from orders where date(order_date) between ‘2005-09-01’ and ‘2005-09-30’;</p><p>select (case ‘b’<br>  when ‘a’ then ‘1’<br>  when ‘b’ then ‘2’<br>  else ‘3’<br>end) as ‘value’;</p><p>select CONNECTION_ID(), USER();<br>select conv(3,10,2);</p><p>分组数据(group by)：可以包含任意数目的列，一般使用group by子句时要用order by保证数据顺序<br>select vend_id, count(*) as num_prods from products group by vend_id;<br>过滤分组(having)：支持所有where操作符，having关键字需要出现在group后面，order by放在having后面。</p><p>select cust_id, count(<em>) as orders_num from orders group by cust_id having count(</em>) &gt;= 2;<br>select order_num, sum(quantity<em>item_price) ordertotal from orderitems<br>  group by order_num<br>  having sum(quantity</em>item_price) &gt;= 50<br>  order by ordertotal;</p><p>子查询：<br>select cust_name, cust_contact from customers<br>where cust_id in (<br>    select cust_id from orders<br>    where order_num in (select order_num from orderitems<br>        where prod_id = ‘TNT2’));</p><p>select t0.cust_name, t0.cust_state,<br>  (select count(*) from orders t1<br>    where t1.cust_id = t0.cust_id) as order_numbers<br>from customers t0<br>order by t0.cust_name;</p><p>联结表：实际上是第一个表的第一行与第二个表符合条件的每一行配对，即笛卡尔积(m*n)，联结表越多性能下降越厉害，有时候处理联结比子查询要快。<br>分为内联（inner join, 表相同，不会出现没有关联的行）、外联(left join, right join, 包含了没有关联的行)</p><p>select vend_name, prod_name, prod_price<br>from vendors v1 inner join products p1<br>on v1.vend_id = p1.vend_id<br>order by vend_name, prod_name;</p><p>select p1.prod_id, p1.prod_name from products p1, products p2<br>where p1.vend_id = p2.vend_id and p2.prod_id = ‘DTNTR’;</p><p>select c.cust_id, o.order_num<br>from customers c left join orders o<br>on c.cust_id = o.cust_id;<br>+———+———–+<br>| cust_id | order_num |<br>+———+———–+<br>|   10001 |     20005 |<br>|   10001 |     20009 |<br>|   10002 |      NULL |<br>|   10003 |     20006 |<br>|   10004 |     20007 |<br>|   10005 |     20008 |<br>+———+———–+<br>6 rows in set (0.00 sec)</p><p>select c.cust_id, o.order_num<br>from customers c right join orders o<br>on c.cust_id = o.cust_id;<br>+———+———–+<br>| cust_id | order_num |<br>+———+———–+<br>|   10001 |     20005 |<br>|   10001 |     20009 |<br>|   10003 |     20006 |<br>|   10004 |     20007 |<br>|   10005 |     20008 |<br>+———+———–+<br>5 rows in set (0.00 sec)</p><p>select c.cust_name, c.cust_id, count(o.order_num) as num_ord<br>from customers c left join orders o<br>on c.cust_id = o.cust_id<br>group by c.cust_id;</p><p>组合查询：也叫符合查询，多条select语句组成<br>union：求并集。<br>union all：包含重复的行</p><p>(<br>  select vend_id, prod_id, prod_price from products<br>  where prod_price &lt; 5<br>)<br>union<br>(<br>  select vend_id, prod_id, prod_price from products<br>  where vend_id in (1001, 1002)<br>)<br>order by vend_id, prod_price;</p><p>====其他知识</p><p>show variables like ‘slow_query_log’;    ##查询并设置慢SQL日志开关<br>set global slow_query_log=’ON’;</p><p>show variables like ‘long_query_time’;    ##查询并设置慢sql时间标准<br>set global long_query_time=0.3;</p><p>了解show命令<br>help show;<br>help create table;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; help show;</span><br><span class="line">Name: &apos;SHOW&apos;</span><br><span class="line">Description:</span><br><span class="line">SHOW has many forms that provide information about databases, tables,</span><br><span class="line">columns, or status information about the server. This section describes</span><br><span class="line">those following:</span><br><span class="line"></span><br><span class="line">SHOW &#123;BINARY | MASTER&#125; LOGS</span><br><span class="line">SHOW BINLOG EVENTS [IN &apos;log_name&apos;] [FROM pos] [LIMIT [offset,] row_count]</span><br><span class="line">SHOW CHARACTER SET [like_or_where]</span><br><span class="line">SHOW COLLATION [like_or_where]</span><br><span class="line">SHOW [FULL] COLUMNS FROM tbl_name [FROM db_name] [like_or_where]</span><br><span class="line">SHOW CREATE DATABASE db_name</span><br><span class="line">SHOW CREATE EVENT event_name</span><br><span class="line">SHOW CREATE FUNCTION func_name</span><br><span class="line">SHOW CREATE PROCEDURE proc_name</span><br><span class="line">SHOW CREATE TABLE tbl_name</span><br><span class="line">SHOW CREATE TRIGGER trigger_name</span><br><span class="line">SHOW CREATE VIEW view_name</span><br><span class="line">SHOW DATABASES [like_or_where]</span><br><span class="line">SHOW ENGINE engine_name &#123;STATUS | MUTEX&#125;</span><br><span class="line">SHOW [STORAGE] ENGINES</span><br><span class="line">SHOW ERRORS [LIMIT [offset,] row_count]</span><br><span class="line">SHOW EVENTS</span><br><span class="line">SHOW FUNCTION CODE func_name</span><br><span class="line">SHOW FUNCTION STATUS [like_or_where]</span><br><span class="line">SHOW GRANTS FOR user</span><br><span class="line">SHOW INDEX FROM tbl_name [FROM db_name]</span><br><span class="line">SHOW MASTER STATUS</span><br><span class="line">SHOW OPEN TABLES [FROM db_name] [like_or_where]</span><br><span class="line">SHOW PLUGINS</span><br><span class="line">SHOW PROCEDURE CODE proc_name</span><br><span class="line">SHOW PROCEDURE STATUS [like_or_where]</span><br><span class="line">SHOW PRIVILEGES</span><br><span class="line">SHOW [FULL] PROCESSLIST</span><br><span class="line">SHOW PROFILE [types] [FOR QUERY n] [OFFSET n] [LIMIT n]</span><br><span class="line">SHOW PROFILES</span><br><span class="line">SHOW RELAYLOG EVENTS [IN &apos;log_name&apos;] [FROM pos] [LIMIT [offset,] row_count]</span><br><span class="line">SHOW SLAVE HOSTS</span><br><span class="line">SHOW SLAVE STATUS [FOR CHANNEL channel]</span><br><span class="line">SHOW [GLOBAL | SESSION] STATUS [like_or_where]</span><br><span class="line">SHOW TABLE STATUS [FROM db_name] [like_or_where]</span><br><span class="line">SHOW [FULL] TABLES [FROM db_name] [like_or_where]</span><br><span class="line">SHOW TRIGGERS [FROM db_name] [like_or_where]</span><br><span class="line">SHOW [GLOBAL | SESSION] VARIABLES [like_or_where]</span><br><span class="line">SHOW WARNINGS [LIMIT [offset,] row_count]</span><br><span class="line"></span><br><span class="line">like_or_where:</span><br><span class="line">    LIKE &apos;pattern&apos;</span><br><span class="line">  | WHERE expr</span><br><span class="line"></span><br><span class="line">If the syntax for a given SHOW statement includes a LIKE &apos;pattern&apos;</span><br><span class="line">part, &apos;pattern&apos; is a string that can contain the SQL % and _ wildcard</span><br><span class="line">characters. The pattern is useful for restricting statement output to</span><br><span class="line">matching values.</span><br><span class="line"></span><br><span class="line">Several SHOW statements also accept a WHERE clause that provides more</span><br><span class="line">flexibility in specifying which rows to display. See</span><br><span class="line">http://dev.mysql.com/doc/refman/5.7/en/extended-show.html.</span><br><span class="line"></span><br><span class="line">URL: http://dev.mysql.com/doc/refman/5.7/en/show.html</span><br></pre></td></tr></table></figure><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这篇文章的内容很基础，主要是MySQL基础、常用命令使用的收录，算是《MySQL必知必会》的读书笔记，方便自己查阅。&lt;/p&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://blog.tsukasa.moe/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="MySQL" scheme="http://blog.tsukasa.moe/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Linux系统常用开发工具包整理</title>
    <link href="http://blog.tsukasa.moe/2020/11/28/Linux-softwares-and-tools-in-common-use-for-developer/"/>
    <id>http://blog.tsukasa.moe/2020/11/28/Linux-softwares-and-tools-in-common-use-for-developer/</id>
    <published>2020-11-28T07:38:35.000Z</published>
    <updated>2023-08-05T08:44:51.183Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><!-- toc --><p>Linux系统常用开发工具包整理。</p><h1 id="ansible"><a href="#ansible" class="headerlink" title="ansible"></a>ansible</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">yum -y install https://releases.ansible.com/ansible/rpm/release/epel-7-x86_64/ansible-2.9.27-1.el7.ans.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> yum安装docker失败</span></span><br><span class="line">yum update</span><br><span class="line">yum install -y yum-utils</span><br><span class="line">yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"><span class="meta">#</span><span class="bash"> /etc/yum.repos.d位置记载了软件的源</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span><br><span class="line">yum makecache fast</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解决问题后继续安装</span></span><br><span class="line">yum -y install docker-ce-20.10.17</span><br></pre></td></tr></table></figure><h1 id="时间同步"><a href="#时间同步" class="headerlink" title="时间同步"></a>时间同步</h1><h1 id="JDK"><a href="#JDK" class="headerlink" title="JDK"></a>JDK</h1><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;Linux系统常用开发工具包整理。未完成&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>记录Windows一些好用的快捷操作</title>
    <link href="http://blog.tsukasa.moe/2019/02/02/Record-some-useful-operation-in-Windows-system/"/>
    <id>http://blog.tsukasa.moe/2019/02/02/Record-some-useful-operation-in-Windows-system/</id>
    <published>2019-02-02T10:18:27.000Z</published>
    <updated>2023-09-25T06:56:36.306Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><!-- toc --><p>这篇文章记录的是Windows 10操作系统的使用的经验心得。</p><h1 id="快捷命令"><a href="#快捷命令" class="headerlink" title="快捷命令"></a>快捷命令</h1><h2 id="Win-R直接运行打开一些设置的快捷方式"><a href="#Win-R直接运行打开一些设置的快捷方式" class="headerlink" title="Win+R直接运行打开一些设置的快捷方式"></a>Win+R直接运行打开一些设置的快捷方式</h2><p>Win+R直接运行下列命令</p><table><thead><tr><th style="text-align:left">命令</th><th style="text-align:left">作用</th></tr></thead><tbody><tr><td style="text-align:left">mspaint</td><td style="text-align:left">开画图</td></tr><tr><td style="text-align:left">notepad</td><td style="text-align:left">记事本</td></tr><tr><td style="text-align:left">taskmgr</td><td style="text-align:left">任务管理器</td></tr><tr><td style="text-align:left">explorer</td><td style="text-align:left">文件浏览器</td></tr><tr><td style="text-align:left">regedit</td><td style="text-align:left">注册表编辑器</td></tr><tr><td style="text-align:left">cmd</td><td style="text-align:left">命令行</td></tr><tr><td style="text-align:left">mstsc</td><td style="text-align:left">远程桌面连接</td></tr><tr><td style="text-align:left">calc</td><td style="text-align:left">计算器</td></tr><tr><td style="text-align:left">services.msc</td><td style="text-align:left">服务</td></tr><tr><td style="text-align:left">control</td><td style="text-align:left">控制面板</td></tr><tr><td style="text-align:left">ncpa.cpl</td><td style="text-align:left">网络连接</td></tr><tr><td style="text-align:left">gpedit.msc</td><td style="text-align:left">组策略</td></tr><tr><td style="text-align:left">wf.msc</td><td style="text-align:left">高级安全 Windows Defender防火墙</td></tr><tr><td style="text-align:left">firewall.cpl</td><td style="text-align:left">Windows Defender 防火墙</td></tr><tr><td style="text-align:left">msconfig</td><td style="text-align:left">系统配置</td></tr></tbody></table><h2 id="系统快捷键"><a href="#系统快捷键" class="headerlink" title="系统快捷键"></a>系统快捷键</h2><table><thead><tr><th style="text-align:left">快捷键</th><th style="text-align:left">作用</th></tr></thead><tbody><tr><td style="text-align:left">Ctrl+Shift+Enter</td><td style="text-align:left">以管理员身份打开</td></tr><tr><td style="text-align:left">Win+E</td><td style="text-align:left">打开文件浏览器explorer</td></tr><tr><td style="text-align:left">Win+I</td><td style="text-align:left">打开Windows设置（Win 10设置面板）</td></tr></tbody></table><h1 id="常见的问题处理"><a href="#常见的问题处理" class="headerlink" title="常见的问题处理"></a>常见的问题处理</h1><h2 id="关闭被占用的文件夹"><a href="#关闭被占用的文件夹" class="headerlink" title="关闭被占用的文件夹"></a>关闭被占用的文件夹</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -nao|<span class="built_in">findstr</span> <span class="number">3306</span></span><br></pre></td></tr></table></figure><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这篇文章记录的是Windows 10操作系统的使用的经验心得。&lt;/p&gt;
    
    </summary>
    
      <category term="资源技巧" scheme="http://blog.tsukasa.moe/categories/%E8%B5%84%E6%BA%90%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="Windows" scheme="http://blog.tsukasa.moe/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>深入分析Java Web技术内幕读书笔记</title>
    <link href="http://blog.tsukasa.moe/2019/01/23/Notes-for-In-depth-analysis-of-Java-Web-technology-insider/"/>
    <id>http://blog.tsukasa.moe/2019/01/23/Notes-for-In-depth-analysis-of-Java-Web-technology-insider/</id>
    <published>2019-01-23T15:16:22.000Z</published>
    <updated>2023-07-25T15:47:40.282Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><!-- toc --><h1 id="深入Web请求过程"><a href="#深入Web请求过程" class="headerlink" title="深入Web请求过程"></a>深入Web请求过程</h1><p>Web请求过程</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">                                http        +----------+                                                                                                     </span><br><span class="line">                        +---------------------&gt;   DNS    |                                                                                                     </span><br><span class="line">                        |                     +----------+                                                                                                     </span><br><span class="line">                        |                                                                                                                                      </span><br><span class="line">                        |                            http             +----------------------+                                                                 </span><br><span class="line">                        |    +----------------------------------------&gt;        CDN           |         http反向代理                                                </span><br><span class="line">                        |    |                                        |css/js/img等静态资源   |<span class="tag">&lt;<span class="name">-----------------------+</span>                                        </span></span><br><span class="line"><span class="tag">                        |    |                                        +<span class="attr">----------------------</span>+                        |                                        </span></span><br><span class="line"><span class="tag">                        |    |                                            +<span class="attr">-------------------------------------------v---------</span>+                              </span></span><br><span class="line"><span class="tag">              +<span class="attr">---------</span>|<span class="attr">----</span>|<span class="attr">----</span>+        +<span class="attr">--------------------</span>+         | +<span class="attr">------------</span>+      +<span class="attr">----------------------------</span>+  |                              </span></span><br><span class="line"><span class="tag">              |   <span class="attr">User</span> <span class="attr">Browser</span>    |        |<span class="attr">Elastic</span> <span class="attr">Load</span> <span class="attr">Balance</span>|         | |<span class="attr">Load</span> <span class="attr">Balance</span>|      |    服务端系统               |  |                              </span></span><br><span class="line"><span class="tag"><span class="attr">--------------</span>&gt;</span>  css/html/js/img  |------&gt; |    +---------+     ------------&gt; +---------+|      |                            |  |                              </span><br><span class="line">              |                   |  http  |    |   ELB   |     |  http   | | |   SLB   ||      |  +----------+  +---------+ |  |                              </span><br><span class="line">              +-------------------+        |    +---------+     |         | | +---------+|------&gt;  |          |  |         | |  |                              </span><br><span class="line">                                           |    +---------+     |         | | +---------+|      |  |  AZ 1    |  |   AZ 2  | |  |                              </span><br><span class="line">                                           |    |   ELB   |     |         | | |   SLB   ||      |  +----------+  +---------+ |  |                              </span><br><span class="line">                                           |    +---------+     |         | | +---------+|      +----------------------------+  |                              </span><br><span class="line">                                           +--------------------+         | +------------+       ^         ^               ^    |                              </span><br><span class="line">                                                                          +----------------------|---------|---------------|----+                              </span><br><span class="line">                                                                                                 |         |               v                                   </span><br><span class="line">                                                                                     +-----------v-+   +---v--------+    +--------+                            </span><br><span class="line">                                                                                     |             |   |  文件系统   |    |        |                            </span><br><span class="line">                                                                                     |  分布式缓存  |   +------------+    | 数据库 |                            </span><br><span class="line">                                                                                     |             |                     |        |                            </span><br><span class="line">                                                                                     +-------------+                     +--------+</span><br></pre></td></tr></table></figure><h2 id="DNS域名解析"><a href="#DNS域名解析" class="headerlink" title="DNS域名解析"></a>DNS域名解析</h2><h3 id="资源记录-Resource-Records"><a href="#资源记录-Resource-Records" class="headerlink" title="资源记录(Resource Records)"></a>资源记录(Resource Records)</h3><p>所有RRs的顶层格式都相同。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">                                1  1  1  1  1  1</span><br><span class="line">  0  1  2  3  4  5  6  7  8  9  0  1  2  3  4  5</span><br><span class="line">+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+</span><br><span class="line">|                                               |</span><br><span class="line">/                                               /</span><br><span class="line">/                      NAME                     /</span><br><span class="line">|                                               |</span><br><span class="line">+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+</span><br><span class="line">|                      TYPE                     |</span><br><span class="line">+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+</span><br><span class="line">|                     CLASS                     |</span><br><span class="line">+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+</span><br><span class="line">|                      TTL                      |</span><br><span class="line">|                                               |</span><br><span class="line">+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+</span><br><span class="line">|                   RDLENGTH                    |</span><br><span class="line">+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--|</span><br><span class="line">/                     RDATA                     /</span><br><span class="line">/                                               /</span><br><span class="line">+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+</span><br></pre></td></tr></table></figure><p>格式说明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">NAME            an owner name, i.e., the name of the node to which this</span><br><span class="line">                resource record pertains.</span><br><span class="line"></span><br><span class="line">TYPE            two octets containing one of the RR TYPE codes.</span><br><span class="line"></span><br><span class="line">CLASS           two octets containing one of the RR CLASS codes.</span><br><span class="line"></span><br><span class="line">TTL             a 32 bit signed integer that specifies the time interval</span><br><span class="line">                that the resource record may be cached before the source</span><br><span class="line">                of the information should again be consulted.  Zero</span><br><span class="line">                values are interpreted to mean that the RR can only be</span><br><span class="line">                used for the transaction in progress, and should not be</span><br><span class="line">                cached.  For example, SOA records are always distributed</span><br><span class="line">                with a zero TTL to prohibit caching.  Zero values can</span><br><span class="line">                also be used for extremely volatile data.</span><br><span class="line"></span><br><span class="line">RDLENGTH        an unsigned 16 bit integer that specifies the length in</span><br><span class="line">                octets of the RDATA field.</span><br></pre></td></tr></table></figure><p>一级域名：主机名+域名后缀。例如：tsukasa.moe<br>二级域名：一级域名下面的主机名。例如：www.tsukasa.moe</p><p>浏览器缓存-&gt;操作系统缓存(host)-&gt;本地域名服务器(LDNS)-&gt;根域名服务器-&gt;主域名服务器(gTLD Server)-&gt;Name Server</p><h3 id="DNS工具"><a href="#DNS工具" class="headerlink" title="DNS工具"></a>DNS工具</h3><p>host<br>nslookup<br>dig</p><p>这三个工具功能丰富度、复杂度依次递增，其中nslookup在windows中也可以使用。</p><p>dig命令用法：</p><ul><li>dig tsukasa.moe</li><li>dig tsukasa.moe ns</li><li>dig tsukasa.moe mx</li><li>dig tsukasa.moe +trace</li></ul><p>nslookup命令用法：可以使用交互或非交互模式进行查询。</p><ul><li>直接输入nslookup进入交互式模式，默认连接到默认域名服务器（即/etc/resolv.conf的第一个dns地址），输入域名即可查询。</li><li>交互模式中，使用set type=mx可以修改要查询的记录类型，再输入域名即可返回相应结果</li><li>非交互模式下，nslookup - 127.0.0.1即设置域名服务器ip</li></ul><p>host命令用法：<br>host baidu.com -&gt; 默认输出只有A和MX记录<br>host -a baidu.com -&gt; 输出与dig baidu.com一样的信息<br>host -t ns baidu.com -&gt; -t是指定type，可以用host –help查看<br>host -C  baidu.com -&gt; 查询SOA权威域名服务器</p><h3 id="常见域名解析记录类型"><a href="#常见域名解析记录类型" class="headerlink" title="常见域名解析记录类型"></a>常见域名解析记录类型</h3><p>TTL：缓存失效时间。<br>MX优先级：数值越低，优先级越高</p><table><thead><tr><th>记录类型</th><th>定义</th><th>示例</th><th>说明</th></tr></thead><tbody><tr><td>A记录</td><td>将域名指向一个ip</td><td>主机记录www，记录值127.0.0.1</td><td>将二级域名www.tsukasa.moe映射到127.0.0.1</td></tr><tr><td>CNAME记录</td><td>将域名指向另一个域名，再由另一个域名提供IP地址</td><td>主机记录@，记录值www</td><td>将</td></tr><tr><td>MX记录</td><td>设置邮箱，让邮箱能够收到邮件</td><td>主机记录@，记录值填域名m.tsukasa.moe或IP地址，MX优先级5</td><td>邮箱地址为xxx@m.tsukasa.moe</td></tr><tr><td>NS记录</td><td>将子域名交给其他DNS服务商解析</td><td>主机记录www，记录值DNS服务器域名f1g1ns1.dnspod.net</td><td>将子域名www.tsukasa.moe授权给DNS服务器解析</td></tr><tr><td>AAAA记录</td><td>将域名指向一个 IPv6 地址</td><td>主机记录www，记录值ipv6地址1030::C9B4:FF12:48AA:1A2B，线路类型为联通</td><td>连通用户单独访问1030::C9B4:FF12:48AA:1A2B</td></tr><tr><td>SRV记录</td><td>标识某台服务器使用了某个服务，常见于微软系统的目录管理</td><td>主机记录_sip._tcp（格式：服务的名字.协议的类型），记录值0 5 5060 sipserver.tsukasa.moe（格式：优先级 权重 端口 目标地址）</td></tr></tbody></table><p>参考</p><p><a href="https://tools.ietf.org/html/rfc1035" target="_blank" rel="external">https://tools.ietf.org/html/rfc1035</a><br><a href="https://skyao.io/learning-dns/" target="_blank" rel="external">https://skyao.io/learning-dns/</a><br><a href="http://luodw.cc/2015/12/27/dns03/" target="_blank" rel="external">http://luodw.cc/2015/12/27/dns03/</a><br><a href="https://blog.csdn.net/a19881029/article/details/19486949" target="_blank" rel="external">https://blog.csdn.net/a19881029/article/details/19486949</a></p><h2 id="CDN工作机制"><a href="#CDN工作机制" class="headerlink" title="CDN工作机制"></a>CDN工作机制</h2><p>内容分布网络(Centent Delivery Network)：一种先进流量分配网络，用户可以就近边缘节点访问网站发布内容，响应快速。<br>CDN=镜像+缓存+整体负载均衡</p><p>负载均衡通常有3种架构：链路负载均衡、集群负载均衡、操作系统负载均衡</p><ul><li>链路：DNS解析来完成</li><li>集群：分硬件、软件负载均衡两种，硬件负载均衡如F5设备，较为昂贵。</li></ul><h1 id="深入分析Java-I-O的工作机制"><a href="#深入分析Java-I-O的工作机制" class="headerlink" title="深入分析Java I/O的工作机制"></a>深入分析Java I/O的工作机制</h1><p>I/O接口分类</p><ul><li>字节：InputStream和OutputStream</li><li>字符：Reader和Writer</li><li>磁盘：File</li><li>网络：Socket</li></ul><p>前面两组主要是传输数据的数据格式，后两组是传输数据的方式，可以组合使用。<br>文件是操作系统与磁盘交互的最小单元，最小的存储单元是字节，而非字符。</p><p>1.标准访问文件的方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">           read()                              write()                   </span><br><span class="line">             ^                                     |                     </span><br><span class="line">             |                                     v                     </span><br><span class="line">     +---------------------------------------------------------+         </span><br><span class="line">     | +-----------------+                +-----------------+  |         </span><br><span class="line">     | |   应用缓存       | 用户地址空间    |    应用缓存     |   |         </span><br><span class="line">     | +-----------------+                +-----------------+  |         </span><br><span class="line">     +---------^-----------------------------------------------+         </span><br><span class="line">               |                                   |                     </span><br><span class="line">---------------|-----------------------------------|---------------------</span><br><span class="line">               |                                   v                     </span><br><span class="line">     +---------------------------------------------------------+         </span><br><span class="line">     | +-----------------+                +-----------------+  |         </span><br><span class="line">     | | 高速页面缓存     | 内核地址空间    |  高速页面缓存    |  |         </span><br><span class="line">     | +-----------------+                +-----------------+  |         </span><br><span class="line">     +---------------------------------------------------------+         </span><br><span class="line">               ^                                   |                     </span><br><span class="line">               |                                   |                     </span><br><span class="line">               |                                   v                     </span><br><span class="line">            +-----------------------------------------+                  </span><br><span class="line">            |            物理磁盘                      |                  </span><br><span class="line">            |                                         |                  </span><br><span class="line">            +-----------------------------------------+</span><br></pre></td></tr></table></figure><p>2.直接I/O方式：应用程序直接访问磁盘数据，而不经过操作系统内核缓冲区，加载速度慢。<br>3.同步访问：性能较差。<br>4.异步访问：当请求数据返回后继续处理下面的操作，可以提高应用效率，但不改变访问文件的效率。<br>5.内存映射：将内存中某一块区域与磁盘中的文件关联起来，访问内存中的一段数据时，转为访问文件的某一段数据。</p><p>Java序列化</p><ul><li>将一个对象转化为二进制表示的字节数组，通过保存或者转移这些字节数据可以实现持久化，继承java.io.Serializable接口即可实现序列化。反序列化则是将这个字节数组重新构造成对象。</li><li>序列化的属性是对象，则属性类也需要实现Serializable接口</li></ul><p>网络I/O</p><ul><li>三次握手四次挥手</li><li>TCP拥塞控制</li></ul><p>Java Socket机制</p><ul><li>应用程序间通信，通过Socket建立连接，建立连接则必须由底层TCP/IP建立TCP连接，一台主机上有多个程序，通过TCP或UDP的地址即端口号可以与对应的应用进行通信。</li></ul><h2 id="Java-NIO"><a href="#Java-NIO" class="headerlink" title="Java NIO"></a>Java NIO</h2><p>BIO(阻塞I/O)：可以采用线程池减少线程创建和回收的成本，提高重用率。<br>NIO：Channel和Selector关键组件。有个比喻很形象，如果把Channel比作汽车或高铁，那么Selector比作车辆运行调度系统，负责监控每辆车的状态，Buffer则是汽车上(Channel)的座位。</p><p>Buffer工作方式：<br>position, capacity, limit, mark</p><table><thead><tr><th></th><th>HeapByteBuffer</th><th>DirectByteBuffer</th></tr></thead><tbody><tr><td>存储位置</td><td>Java Heap中</td><td>Native内存中</td></tr><tr><td>I/O</td><td>需要在用户地址空间与内核地址空间中复制数据</td><td>不需要复制</td></tr><tr><td>内存管理</td><td>Java GC回收，创建和开销少</td><td>System.gc()释放Java对象引用的DirectByteBuffer内存空间，长期持有可能导致Native内存泄漏，创建和回收内存开销大</td></tr><tr><td>适用场景</td><td>并发连接数少于1000，I/O操作较少</td><td>数据量大、生命周期长的情况</td></tr></tbody></table><h1 id="深入理解Java-Web中的编码问题"><a href="#深入理解Java-Web中的编码问题" class="headerlink" title="深入理解Java Web中的编码问题"></a>深入理解Java Web中的编码问题</h1><p>编码：字符编码，字符到字节，转为机器能够理解的语言，计算机只认识0和1。<br>解码：字节流解码，字节到字符，转为人类容易理解的语言。</p><p>无论是存储还是传输，不管是文件还是图片、视频，在计算机存储上一视同仁，全部是0和1的序列，都以字节的形式存在。<br>从方便人们阅读的角度，文件分为文本文件和二进制文件（非文本文件），文本文件的可视形式是文本字符，例如Test.java，存储时以某种编码格式进行编码，显示时以对应编码格式进行解码，方便文本编辑器、查看。<br>不同的编程语言中，提供了专门用于读写文本文件的类。Java中文本文件读写有BufferedReader和BufferedWriter.</p><p>I/O操作中的编码</p><ul><li>写入存储要编码，对磁盘写，网络上写，传输以流的方式进行，如果读取的是字符需要编码为字节，写入的内容需要指定编码Charset</li><li>读取要解码，对磁盘读出来的数据解码，对网络上获取的流解码，读取字节解码为字符，具体解码过程需要用户指定Charset，默认使用本地环境的字符集，中文环境是GBK编码</li><li>用什么编码写入，就用什么编码读出来，参考示例程序。</li></ul><p>内存操作中的编码</p><ul><li>常见的是字符串到字节的数据类型转换，String str = “中文字符串”; str.getBytes(‘UTF-8’); String s = new String(b, “UTF-8”);</li><li>Charset类提供encode, decode方法，分别对应<code>char[]到byte[]</code>和<code>byte[]到char[]</code>，通过forName(String)方法设置字符集<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Charset charset = Charset.forName(<span class="string">"UTF-8"</span>);</span><br><span class="line">ByteBuffer byteBuf = charset.encode(str);</span><br><span class="line">CharBuffer charBuf = charset.decode(byteBuf);</span><br></pre></td></tr></table></figure></li></ul><p>乱码问题<br>本质是编解码使用了不同的编码格式，乱码的呈现是屏幕，是人的视觉感受。出现在磁盘文件的读写，网络数据传输，数据库存取。</p><p>编码的类型：</p><p>todo…</p><p>参考：<br><a href="https://blog.csdn.net/Alexshi5/article/details/79513018" target="_blank" rel="external">https://blog.csdn.net/Alexshi5/article/details/79513018</a></p><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;《深入分析Java Web技术内幕》读书笔记，未完。&lt;/p&gt;
    
    </summary>
    
      <category term="编程开发" scheme="http://blog.tsukasa.moe/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Java Web" scheme="http://blog.tsukasa.moe/tags/Java-Web/"/>
    
  </entry>
  
  <entry>
    <title>日语身体表现词语大杂烩</title>
    <link href="http://blog.tsukasa.moe/2018/03/01/bodily-representaion-japanese-phrase/"/>
    <id>http://blog.tsukasa.moe/2018/03/01/bodily-representaion-japanese-phrase/</id>
    <published>2018-03-01T13:06:03.000Z</published>
    <updated>2023-07-24T15:59:48.940Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这篇文章就当个小词典吧，称不上总结，只是简单整理《身体表现词典》讲到的一些惯用语。基本上是按照从头到脚的顺序整理的，请大家随意食用：</p><ul><li>头部</li><li>上身</li><li>下身</li><li>其他</li></ul><h1 id="头部"><a href="#头部" class="headerlink" title="头部"></a>头部</h1><h2 id="頭"><a href="#頭" class="headerlink" title="頭"></a>頭</h2><h3 id="頭（あたま）"><a href="#頭（あたま）" class="headerlink" title="頭（あたま）"></a>頭（あたま）</h3><ul><li><strong>頭隠して尻隠さず：</strong>本人はうまく隠した（隠れた）つもりでも、他人の目にはすっかり丸見えであるというような場面で、この表現がよく使われます。<br>顾头不顾尾，也可指小朋友「かくれんぼ」时给人们的蠢萌蠢萌的可爱形象=￣ω￣=。</li><li><strong>頭が上がらない：</strong>引け目を感じて対等な関係に立てない。<br>字面意思是抬不起头来，因为觉得欠对方的，或者受过对方恩惠，又或者曾做过对不起对方的事，因此遇到事情无法对对方强硬起来。</li><li><strong>頭が重い：</strong>二つの意味がある。一つは、身体的に感じる「重さ」、寝不足か、あるいは熱があるか何かで、頭がどんより重く感じられることを表します。もう一つは、悩み事や心配ごとなどがあって、どうも気分がすっきりしない、気分が晴れない、という感じを表します、心理的な「重さ」を表します。<br>身体上的头沉，头晕，另一个意思是有担心的事情，遇到烦恼的事情而心情沉重。</li><li><strong>頭が固い：</strong>人の意見や新しいことをなかなか受け入れようとしない、融通の利かない態度。<br>不听取别人意见，不接受新事物，头脑顽固的人真的是让人讨厌啊。</li><li><strong>頭が切れる：</strong>洞察力のある賢い人を「頭が切れる人」と呼ぶことが多いようです。<br>形容脑子转得快，聪明活跃。</li><li><strong>頭が下がる：</strong>ある事柄や、人の様子を見て、思わず敬服してしまう、感服してしまう気持ち。<br>钦佩，佩服，大佬请喝茶吧。</li><li><strong>頭が低い：</strong>「控え目で、謙虚な態度」を目指す言葉。<br>形容一个人很谦虚。和「腰が低い」意思一样w。</li><li><strong>頭から水を浴びよう：</strong>予期しない出来事に会って、ぞっとする感じ。<br>形容万分吃惊，就像你头上突然被别人浇水一样，心中顿时万只草泥马奔腾忍不住大吼：卧槽是谁干的Pia!(ｏ ‵-′)ノ”(ノ﹏&lt;。)。</li><li><strong>頭から湯気を立てる：</strong>顔を真っ赤にして怒っている様子。<br>头上要冒烟，怒气冲冲。彼女に怒らせるなら，殺されるぞ(ಥ _ ಥ)。</li><li><strong>頭でっかち：</strong>経験の裏打ちもないのに、理屈や知識ばかりを振りかざす態度、あるいはそういう人物を目指す時によく使われます。人に面を向って使う言葉ではありません。<br>除了指人和事物头重脚轻的不平衡感，经常形容光说不练，空谈理论脱离实际的人。</li><li><strong>頭でっかち尻すぼり：</strong>始めは威勢が良かったのに、終わりになると最初の勢いはどこやら、見る影もないほど力がなくなってしまう様子。<br>虎头蛇尾，开头很好，结尾很烂。</li><li><strong>頭に入れる：</strong>しっかり記憶をとどめる、頭に叩き込むと同じ意味です。<br>请把这些知识装入头脑，好好记住哦(づ￣ 3￣)づ。</li><li><strong>頭の上の蝿も追えない：</strong>自分の頭の上にとまっている蝿すら追い払えない、つまり自分のことでも何一つ自分で解決できない不甲斐ない態度を指す言葉です。<br>自顾不暇，连自己头上的苍蝇都赶不走，就连自己的事情都做不好。</li><li><strong>頭の黒い鼠：</strong>鼠は家に住んでいる小泥棒というわけです、そこで鼠のように何か盗んでいく人間を指す。<br>家贼，指身边手脚不干净的人。当然小孩子ケーキをこっそり食べた也可以说是「頭の黒い鼠」(●’◡’●)。</li><li><strong>頭の中が白くなる：</strong>あんまりの出来事にショックを受けて、頭の中の回線がショートでもしてしまったように思考停止状態になる。<br>对突发状况头脑中一片白色，无法思考。</li><li><strong>頭のてっぺんから足の爪先まで：</strong>人の体の，上から下まで残らず。全身。また，全身·全体にわたっているさま。<br>全身上下。</li><li><strong>頭を痛める：</strong>心配事を抱えて悩んだり、苦しんだりしている様子。<br>烦恼，伤脑经哦。</li><li><strong>頭を掻く：</strong>ちょっとした失敗をしたり、照れくさい時、きまりの悪い時に、人は頭を掻いてごまかします。<br>犯了小失误，害羞了想萌混过关w。</li><li><strong>頭を下げる：</strong>お辞儀をする。<br>謝る、謝罪する。<br>敬服する、感服する。<br>本心から謝る気はないが謝罪の態度を示しておいた方が、相手の納得を得られ、事が穏やかに収まる、と判断した場合、不本意ではあっても敢えて「頭を下げる」ことがあります。<br>四个意思：1.鞠躬行礼；2.谢罪，表示歉意；3.钦佩，佩服；4.以大局为重，暂时选择服从。</li><li><strong>頭を絞る：</strong>難問に直面して、おれこれ考えを巡らし解決策を考えること。「知恵を絞る」と同じ意味の言葉です。<br>绞尽脑汁想办法。</li><li><strong>頭を突っ込む：</strong>仕事や仲間やグループなどに加わる。かかわりを持つ。「首を突っ込む」と同じ意味です。<br>介入，插手。</li></ul><h3 id="頭（ず）"><a href="#頭（ず）" class="headerlink" title="頭（ず）"></a>頭（ず）</h3><ul><li><strong>頭を冷やす：</strong>興奮を抑えて気持を落ち着かせること。<br>cool down，兄弟冷静。</li><li><strong>頭をもたげる：</strong>持ち上げる、起こす。<br>产生某种心情；露头角，势力抬头。</li><li><strong>頭が高い：</strong>相手を見下げる態度で、無礼である。横柄である。<br>高傲，妄自尊大，看不起人。</li><li><strong>頭痛の種：</strong>頭痛を引き起こすような原因、つまり心配事、悩み事の原因。<br>烦心事的真正原因。</li><li><strong>頭抜ける：</strong>普通のものと比べて遥かに水準を超えている、並々ではない。<br>超水准发挥，运动比赛时候如果谁都想。</li></ul><h3 id="頭（とう）"><a href="#頭（とう）" class="headerlink" title="頭（とう）"></a>頭（とう）</h3><ul><li><strong>頭角を表す：</strong>才能や業績が他のものより際だって優れている。<br>崭露头角，显示出与众不同的学识与才能，这不是说我吗。</li></ul><h2 id="髪"><a href="#髪" class="headerlink" title="髪"></a>髪</h2><h3 id="髪（かみ）"><a href="#髪（かみ）" class="headerlink" title="髪（かみ）"></a>髪（かみ）</h3><ul><li><strong>髪を逆立てる：</strong>それほど怒りが激しく激高しているということです。<br>气的头发都直立起来了。</li><li><strong>髪を振り乱す：</strong>髪の乱れるも気にかけず、一心不乱に何かに立ち向かっている。</li><li><strong>髪結いの亭主：</strong>妻の働きで養われている夫。<br>说的是靠妻子养活的男人。</li><li><strong>後ろ髪を引かれる：</strong>未練が残って、きっぱりと思い切れないこと。<br>依依不舍，不想离开你。</li><li><strong>女の髪の毛には大象もつながる：</strong>女の色香が男をひきつけ，男を支配する力の強いことのたとえ。<br>女性用自己的美色与魅力吸引男人，让男性深深陷入其中无法自拔。</li><li><strong>苦髪楽爪：</strong>苦労しているときは髪の伸びが早く、楽をしているときは爪の伸びが早いということ。</li><li><strong>とも白髪：</strong>夫婦が一緒に白髪になるまで長生きする。<br>白头偕老，世界上最幸福的事情莫过于此吧(<em> ￣3)(ε￣ </em>)*)</li></ul><h2 id="額（ひたい）"><a href="#額（ひたい）" class="headerlink" title="額（ひたい）"></a>額（ひたい）</h2><ul><li><strong>額を集める：</strong>集まって相談する。<br>召集到一起商议。</li><li><strong>額に汗する：</strong>額に球の汗が流れるほど一所懸命働いている。<br>赞扬一个人很努力工作。</li><li><strong>額の向こう傷：</strong>単に「向こう傷」とだけ言うことの方が多いようです、それは勇気の印、名誉の負傷ということになります。<br>索隆说「背中の傷は剣士の恥だ」，然后让世界第一的剑豪在胸膛留下刀伤，面对如此的强敌，为了守护与朋友的约定，勇敢战斗的索隆虽然输了但真的是太帅了。</li></ul><h2 id="顔（かお）"><a href="#顔（かお）" class="headerlink" title="顔（かお）"></a>顔（かお）</h2><ul><li><strong>顔色をうかがう：</strong>相手の顔色に応じて、こちらの出方を決めるわけです。<br>察言观色。</li><li><strong>顔から火が出る：</strong>恥ずかしさのために赤面する、恥ずかしくて顔が火照る。<br>巧妙的比喻害羞得脸都红了，火辣辣的。</li><li><strong>顔が売れる：</strong>世間に広く知られる。有名になる。<br>形容广为人知，有名望的人与商品。</li><li><strong>顔が利く：</strong>信用や権力があって，相手に便宜をはかってもらうことができる。<br>有面子，有势力，吃得开。</li><li><strong>顔を揃う：</strong>必要な人が全員集まって。<br>把人凑齐。</li><li><strong>顔が立つ：</strong>体面が保たれる。<br>保留颜面，有面子。</li><li><strong>顔を潰れる：</strong><br>丢脸；如果是颜面尽失，脸都丢光了是「顔を丸潰れる」。</li><li><strong>顔に泥を塗る：</strong>人に恥をかかせる、その人の面目を潰すという意味で使われます。<br>给别人脸上抹黑，让他羞愧得无地自容。</li><li><strong>顔向けできない：</strong>「合わせる顔がない」と似た意味です、相手に申し訳ないことをしてしまったり、不義理をしていて相手の顔をまともに見られないことを表す言葉です。<br>觉得有愧对方，没有脸见对方，不敢正视对方的双眼。</li><li><strong>顔を洗って出直す：</strong>今までの至らなかった態度をきちんと改めてから相手に会うという比喩表現として使われます。<br>一改之前的态度重新过来。</li><li><strong>顔を合わせる：</strong>二つの意味があります：<br>会う。<br>（試合などで）対戦する。<br>两个意思：1.见面；2.比赛中交锋。</li><li><strong>顔を貸す：</strong>誰かに何か用があって他の場所に呼び出す時には「ちょっと顔を貸してくれ」というような言い方をします。<br>赏个脸，给个面子吧。</li><li><strong>顔を出す：</strong><br>隠れていたものが現れ出る、お日さまが顔を出す<br>会合などに出席する。<br>人の家を訪ねる。<br>露脸，出面；出席；访问。</li><li><strong>大きな顔をする：</strong>偉そうに振る舞う·威張った顔をする。<br>很了不起的样子，神气十足摆架子。</li><li><strong>親の顔が見たい：</strong>しつけの悪いよその子の言動に，驚きあきれて言う語。<br>看到言行无礼的熊孩子时极其惊讶甚至到了看看他父母是怎么教育他的。</li><li><strong>難しい顔：</strong>（横からちょっと声もかけにくいような）不機嫌そうな·不愉快そうな顔。<br>思考难题时的表情，脸上写满了不开心。</li></ul><h2 id="面（つら）"><a href="#面（つら）" class="headerlink" title="面（つら）"></a>面（つら）</h2><ul><li><strong>面の皮が厚い：</strong>恥知らず厚かましく図々しい人。<br>脸皮厚，我从未见过有如此厚颜无耻之人。</li><li><strong>泣き面に蜂：</strong>泣いている顔をさらに蜂が刺す。不運や不幸が重なることのたとえ。<br>祸不单行。</li><li><strong>吠え面かく：</strong>悔しくて大声を出して泣いている。<br>后悔不已留下了眼泪இ௰இ。</li><li><strong>横っ面を引っ叩く：</strong>パシーンと音がするほど手荒く頬を張り飛ばす。<br>表示我真想一巴掌拍过去。</li></ul><h2 id="眉（まゆ）"><a href="#眉（まゆ）" class="headerlink" title="眉（まゆ）"></a>眉（まゆ）</h2><ul><li><strong>眉一つ動かさない：</strong>「どんなことにも動じない、顔色一つも変えない」態度を形容する言葉です。<br>形容临危不惧，毫不动摇。</li><li><strong>眉に唾を付ける：</strong>人に騙されないように用心してかかる·警戒することを「眉に唾をつける」ということになりました。</li><li><strong>眉に火がつく：</strong>危険がそこまで迫っているという意味を表します。<br>火烧眉毛，情况紧急。</li><li><strong>眉を曇らす：</strong>「（心配事や悩み事のせいで）表情を曇らせ、暗い顔をしている」と言います。<br>面带愁容，布满阴云。</li><li><strong>眉を開く：</strong>（悩みから解放されて）明るい表情を取り戻すこと。<br>舒展愁容，心情放晴，变得积极起来。</li><li><strong>眉を顰める：</strong>（何か不愉快な事を見たり聞いたりして）不快な気分になっている場合に多く使われる言葉です。<br>皱眉，心中不快。</li></ul><h2 id="目（め）"><a href="#目（め）" class="headerlink" title="目（め）"></a>目（め）</h2><ul><li><strong>目から鱗が落ちる：</strong>あることがきっかけとなって，迷いからさめたり，物事の実態がわかるようになる。<br>以某些契机，从迷茫中醒悟过来，茅塞顿开。</li><li><strong>目から鼻へ抜ける：</strong>りこうで機転がきく。また，抜け目がない。<br>君は本当に賢い，这句短语就是聪明，伶俐的意思，啊哈哈哈(￣▽￣)”。</li><li><strong>目が利く：</strong>物の価値を識別する眼力が高い。<br>有眼力，鉴别力强。</li><li><strong>目頭（めがら）が熱くなる：</strong>感動して涙が出そうになる。「熱いものが込み上げる」と同じ意味です。うれしい時の涙、悲しい時の涙は水っぽく、悔し涙や怒りの涙は塩辛く、しょっぱいのだそうです。<br>感动得热泪盈眶，听说心情不同眼泪的味道也不同，以后有机会可以尝尝看இ௰இ。</li><li><strong>目くじらを立てる：</strong>目をつり上げる。ささいなことを取り立ててとがめることにいう。目角を立てる。<br>过分追究，责难。</li><li><strong>目には目を：</strong>「目には目を」の後には「歯には歯を」と続きます。<br>以牙还牙。</li><li><strong>目にもの見せる：</strong>ひどい目にあわせることによって相手に身に見て分からせるという意味で使われます。<br>思い知らせる、适用于对方太嚣张，让其尝尝什么是厉害，教他重新做人。</li><li><strong>目に物言わす：</strong></li><li><strong>目の色を変える：</strong>何かに夢中になったり、怒ったり、興奮して目つきが変わる様子を表します。<br>形容愤怒、惊讶或全神贯注的样子。</li><li><strong>目の中へ入れても痛くない：</strong>祖父母や両親が、小さな子供を可愛がるような気持を表す、本当に可愛くてたまらない気持を俗語では「食べてしまいたい」です。<br>很疼爱小孩子。</li><li><strong>目を細める：</strong>うれしいそうに微笑んでいる様子を言います。<br>眯着眼睛笑，很开森的样子。</li><li><strong>目も当てられない：</strong>（あんまりにひどい状態で）直視できない、目を向けられない。<br>惨不忍睹。</li><li><strong>目を奪われる：</strong>見とれて，他の物が目にはいらない。<br>看得入迷，视线无法从中移开。</li><li><strong>目を覚ます：</strong>三つの意味があります。<ul><li>眠りからさめる。</li><li>迷いや誤りを自覚し，本来あるべき状態になる。</li><li>抑えられていた感情などが，何かをきっかけに動き始める。<br>原意是从睡眠中醒来，引申义有两个：1.觉悟后回到正道；2.被压抑的情感开始苏醒</li></ul></li><li><strong>目を皿にする：</strong>不思議なものを見たり、驚いたり、何かを探している時に、かっと大きく目を見開く様子を描写する言葉です。<br>看到不可思议的事物，眼睛睁的贼大很惊讶。</li><li><strong>目を白黒させる：</strong>せわしなく目玉を動かす。驚くさま。また，物がのどにつかえたりして，苦しむさま。<br>惊恐万分，翻白眼。</li><li><strong>目をつぶる：</strong>三つの意味は：<ul><li>目を閉じる。また，眠る。</li><li>欠点や過失を見ないふりをしてとがめない。知らないことにする。</li><li>死ぬ。<br>三个意思：1.闭上眼睛；睁一只眼闭一只眼，这次就不追究啦；安详的死去。</li></ul></li><li><strong>目を光らす：</strong>厳重に監視する。鋭い目つきで見張る。<br>严密监视，提高警惕。</li><li><strong>夜目遠目笠の内：</strong>女の容貌は，夜見たとき，遠方から見たとき，笠をかぶっているところを見たときに，実際より美しく見えるということ。<br>朦胧的夜景，身披斗笠的古代女性或许让人产生美的错觉吧，是褒是贬有些微妙哦。或许喜欢的人或事，可以继续保持一定距离，尽情欣赏。</li><li><strong>目病み女に風邪引き男：</strong>眼病で目のうるんだ女と，風邪を引いて弱っている男は普段と違う印象が生まれて、それが新しい魅力にもなるのでしょうか。<br>轻轻染上秋季感伤的柔情女性，不经意间展示出与平常时坚强可靠不同的脆弱男子，是否会让异性顿生情愫，感到更有魅力呢。</li><li><strong>女の目には鈴を張れ：</strong>漢語では「明眸皓歯」といいますね、美しく澄んだ瞳、そして歯並びが美しく白い歯ということですから、美人の条件として目の美しさが重視されていたようです<br>。比喻女性水灵的眼睛，美丽可爱。</li></ul><h2 id="鼻（はな）"><a href="#鼻（はな）" class="headerlink" title="鼻（はな）"></a>鼻（はな）</h2><ul><li><strong>鼻息が荒い：</strong>意気込みが激しい。強気で威勢がよい。<br>累得直喘粗气；盛气凌人，气势汹汹。</li><li><strong>鼻が高い：</strong>誇らしい気持ち·得意な気持ちになることです。「天狗になる」はなおさらだ。<br>自豪，骄傲，得意。变成了天狗比喻过度得意变成了傲慢，自负之意。</li><li><strong>鼻が曲がる：</strong>鼻がおかしくなりそうなほどいやなにおいがするさま。<br>恶臭，难以忍受的气味。</li><li><strong>鼻であしらう：</strong>真面目な程度で応対せずに、相手の言葉を軽く聞き流し冷淡な態度を取るという意味です。<br>冷淡对待。</li><li><strong>鼻の下を伸ばす：</strong>好色そうな表情をしたり、美しい女性に甘い態度を見せる。<br>色眯眯的样子，迷恋女色。</li><li><strong>鼻をうごめかす：</strong>得意げな様子をみせるさまをいう。<br>瞧你洋洋得意的样子。</li><li><strong>鼻を鳴らす：</strong>女性が男性に甘えて物をねだる時には意識的に鼻にかかった声を出したりします。ただし女性限定だぞ。</li><li><strong>鼻薬を嗅がせる：</strong>賄賂を使う。「鼻薬」は子供の機嫌を取るために与える菓子。<br>施小恩小惠，给点甜头。</li><li>木て鼻をくくる：相手を冷淡にあしらう·無愛想な態度を見せる。<br>以冷淡的态度对待他人。</li></ul><h2 id="口（くち）"><a href="#口（くち）" class="headerlink" title="口（くち）"></a>口（くち）</h2><ul><li><strong>口が干上がる：</strong>収入の道が断たれ生活が立ち行かなくなる。<br>收入来源断了，吃不上饭。</li><li><strong>口がうまい：</strong>弁舌の立つ人、話し上手な人。<br>嘴真甜，会说话。</li><li><strong>口が軽い：</strong>軽率で、大事な秘密までうっかりしゃべってしまう。<br>大嘴巴。</li><li><strong>口が堅い：</strong>秘密などを軽々しく他へもらさない。<br>守口如瓶。</li><li><strong>口が腐っても：</strong>いつまでも口を噤んで秘密を守る。<br>无论如何也会保守秘密的。</li><li><strong>口が酸っぱくなる：</strong>同じことを何度も繰り返して言うさま。<br>苦口婆心，磨破嘴皮。</li><li><strong>口が禍のもと：</strong>不用意に余計なことを口にするなということです。<br>祸从口出，不要说多余的话。</li><li><strong>言う口の下から：</strong>言ったすぐあとから。多く，非難の気持ちを込めて使われる。<br>刚说完就。。。对着干的节奏啊。</li><li><strong>口車に乗る：</strong>巧みな言葉に引っかかって騙される。「口がうまい」やつに騙されるなよ、お嬢ちゃん。<br>不要被花言巧语骗啦。</li><li><strong>人の口には戸が立てられない：</strong>世間のうわさや評判はどうしても止めることが出来ないという意味です。<br>嘴巴是封不住的，流言蜚语迟早满天飞。</li></ul><h2 id="唇（くちびる）"><a href="#唇（くちびる）" class="headerlink" title="唇（くちびる）"></a>唇（くちびる）</h2><ul><li><strong>唇を噛む：</strong>怒りや悔しさをこらえる様子を表す言葉です。<br>抑制住怒火或悔恨。</li><li><strong>唇をとがらす：</strong>不満を感じている時の表情です。<br>嘟嘴，不满。</li></ul><h2 id="歯（は）"><a href="#歯（は）" class="headerlink" title="歯（は）"></a>歯（は）</h2><ul><li><strong>歯が浮く：</strong>二つの意味があります：<ul><li>不快な音を聞いたり，酸っぱい物を食べたりして，歯の根がゆるんで浮くように感ずる。</li><li>そらぞらしく，きざな言動に対して，気持ち悪く感ずる。<br>生理或心理上的不快感。</li></ul></li><li><strong>歯が立たない：</strong>相手の力が自分よりはるかに勝っていて、到底、敵わないという意味です。<br>难题咬不动，对手实力太强大敌不过。</li><li><strong>歯に衣着せぬ：</strong>自分の思った通りのままにずけずけ言う·思っていること包み隠さぜ率直に言う。<br>说话无顾虑。</li><li><strong>歯の抜けたよう：</strong>もともとあるはずの物がなくなったために寂しい感じがする。<br>残缺不全，本应该拥有却失去而感到的失落。</li><li><strong>歯の根が合わない：</strong>寒さや恐怖のために，ふるえおののくさまにいう。<br>因寒冷或恐惧而打哆嗦。</li><li><strong>ごまめの歯ぎしり：</strong>大して力はないのに（自分の力の程を知らず）興奮していきなり立つは無駄な事だ。<br>凭意气用事也无济于事。</li></ul><h2 id="舌（した）"><a href="#舌（した）" class="headerlink" title="舌（した）"></a>舌（した）</h2><ul><li><strong>舌が回る：</strong>すらすらとよどみなくしゃべる。口が達者である。<br>伶牙俐齿，能说会道，能叽叽喳喳说个不停。</li><li><strong>舌先三寸：</strong>うわべだけのうまい言葉で、心や中身が備わっていないこと。<br>只是表面上话说的很漂亮的人不可信哦。</li><li><strong>舌なめずり：</strong><ul><li>おいしい食物を前にしたり想像したときや食事の前後に，舌で唇をなめること。</li><li>何かしようと獲物を待ち構えているようす。<br>你看起来很好吃，忍不住啦啊啊啊(╹ڡ╹ )。emmmm，就像路飞看到了肉，乔巴遇到了棉花糖，山治遇到了妹子（大雾）(❤ ω ❤)。</li></ul></li><li><strong>舌を出す：</strong><ul><li>陰で人を馬鹿にしたり、心の中で人を嘲笑する。</li><li>自分の失敗に照れたり、ごまかしたりする時のしぐさ。<br>两个意思：1.暗自嘲笑他人；2.像萌混过关。</li></ul></li><li><strong>舌を巻く：</strong>（相手に圧倒されて）非常に驚く。感心する。<br>惊叹不已，在下佩服。</li><li><strong>二枚舌：</strong>食い違ったことを言う·嘘をつくの意味です。<br>撒谎，前后矛盾。</li></ul><h2 id="顎（あご）"><a href="#顎（あご）" class="headerlink" title="顎（あご）"></a>顎（あご）</h2><ul><li><strong>顎が落ちる：</strong>非常に美味しい物を食べた時の感覚。<br>特别好吃。</li><li><strong>顎で使う：</strong>高慢な態度で人を使う。<br>颐指气使，态度傲慢，总以为自己高高在上的样子。</li><li><strong>顎を撫でる：</strong>人が得意な気分に浸っている時は、つい無意識に顎を撫で回したりするものです。<br>心满意足。</li><li><strong>顎足付き：</strong>食事代や交通費が先方持ちであること<br>餐费或交通费用由对方承担。</li></ul><h2 id="頬（ほお）"><a href="#頬（ほお）" class="headerlink" title="頬（ほお）"></a>頬（ほお）</h2><ul><li><strong>頬かぶり：</strong>知って知らぬふりをすること。<br>假装不知道。</li><li><strong>頬がゆるむ：</strong>うれしくて、にこにこと笑顔になることを言います。<br>笑逐颜开，感到快乐与幸福o(<em>￣▽￣</em>)ブ。</li><li><strong>頬を染める：</strong>恥ずかしさのために顔を赤くする。バ、バカ！<br>あ、誰かさんを褒めるときは「バ、バカ！」と言われた、顔赤くなったかな=￣ω￣=。害羞的脸红了。</li><li><strong>頬をふくらます：</strong>不平や不満の気持を示す表情。<br>因生气噘嘴。</li></ul><h2 id="耳（みみ）"><a href="#耳（みみ）" class="headerlink" title="耳（みみ）"></a>耳（みみ）</h2><ul><li><strong>右の耳から左の耳：</strong>人の話を真面目に聞こうとしないで聞き流すこと。<br>左耳进右耳出。</li><li><strong>耳が痛い：</strong>他人の言葉が自分の弱点を適確に突いていて、聞くのが辛い。<br>因被他人说中自己的弱点，听起来很难受。</li><li><strong>耳を傾ける：</strong>熱心に聞く。傾聴する。「耳を澄ます」と同じ意味です。<br>侧耳倾听。</li><li><strong>耳を塞ぐ：</strong>聞かないようにする。<br>闭目塞听。</li><li><strong>耳を疑う：</strong>思いがけない音や発言を聞いて，聞き間違いではないかと驚く。<br>不敢相信自己的耳朵。</li><li><strong>耳を揃える：</strong>金銭などを不足なくとり揃える。<br>凑齐款项。</li></ul><h2 id="首（くび）"><a href="#首（くび）" class="headerlink" title="首（くび）"></a>首（くび）</h2><ul><li><strong>首が危ない：</strong>失職しそうだ·解雇されそうだ。<br>工作要不保啦。</li><li><strong>首が繋がる：</strong>どうにか解雇を免れる。<br>总算保住了工作。</li><li><strong>首が回らない：</strong>借金などで，やりくりがつかない。<br>周转不灵。</li><li><strong>首に縄をつける：</strong>いやがる人を無理に連れて行こうとするたとえ。<br>生拉硬扯，强迫他人。</li><li><strong>首を傾げる：</strong>疑問に思う、納得できない、賛成できないという意味です。<br>有疑问，纳闷，无法赞成。</li><li><strong>首を縦に振る：</strong>同意、賛成、承諾の意思表示の動作です。<br>点头答应。</li><li><strong>首を長くする：</strong>期待しながら今か今かと待ちかねている。<br>翘首盼望。</li></ul><h2 id="喉（のど）"><a href="#喉（のど）" class="headerlink" title="喉（のど）"></a>喉（のど）</h2><ul><li><strong>喉が鳴る：</strong>美味しいそうな物を目の前にして我慢できないほど食べたくなる。<br>看到好吃的饿得慌。</li><li><strong>のど自慢：</strong>美声や歌のうまさを自慢すること、またその人を指す言葉です。<br>炫耀自己的喉咙。</li><li><strong>喉元過ぎれば熱さを忘れる：</strong>苦しい事も過ぎてしまえば忘れてしまうことのたとえ。また、苦しいときに受けた恩も楽になれば忘れてしまうことのたとえ。<br>好了伤疤忘了疼，不吸取教训；事过忘恩。</li></ul><hr><h1 id="上身"><a href="#上身" class="headerlink" title="上身"></a>上身</h1><h2 id="肩（かた）"><a href="#肩（かた）" class="headerlink" title="肩（かた）"></a>肩（かた）</h2><ul><li><strong>肩で息をする：</strong>上下に肩を動かし，荒い息をする。<br>呼吸困难。</li><li><strong>肩にのしかかる：</strong>肩にかかってくる責任が重く、重圧のために押しつぶされそうになるという感じです。<br>身负重任，喘不过气来了。</li><li><strong>肩を怒らせる：</strong>肩を上に持ち上げたり大きく振ったりして威圧的な感じを醸すこと<br>摆架子。</li><li><strong>肩を落とす：</strong>気落ちしてしょんぼりする。落胆する。<br>浑身无力；沮丧。</li><li><strong>肩を持つ：</strong>意見を別れたり、対立関係にある人のどちらか一方を応援する。<br>偏袒某一方。</li><li><strong>肩身が狭い：</strong>世間に対して面目が立たない。<br>感到丢脸啊。</li><li><strong>肩身が広い：</strong>「肩身が狭い」を裏返した表現です。世間に対して誇らしい気分である。<br>感到自豪啊。</li></ul><h2 id="胸（むね）"><a href="#胸（むね）" class="headerlink" title="胸（むね）"></a>胸（むね）</h2><ul><li><strong>胸が躍る：</strong>期待や興奮のためにワクワクする。<br>期待接下来的发展，心情激动。ワクワクするなぁ、次はどんな冒険が待ってんだァ！</li><li><strong>胸が痞える：</strong>激しい感情で胸がふさがったようになる。<br>心情抑郁，难过。</li><li><strong>胸に納める：</strong>聞いたこと、見たことを自分の心の中にしまっておいて決して口に出さない。<br>所见所闻深藏在心里不乱说出去。</li><li><strong>胸を打つ：</strong>ある事柄が人を強く感動させる、心が打つ。<br>很感动，打动心弦(ಥ _ ಥ)。</li></ul><h2 id="心臓（しんぞう）"><a href="#心臓（しんぞう）" class="headerlink" title="心臓（しんぞう）"></a>心臓（しんぞう）</h2><ul><li><strong>心臓が強い：</strong>物怖じしないで、どんな場面でも平気な態度であるは褒め言葉として使われるのに対して厚かましいという否定的な非難のニュアンスを含んでいます。<br>胆子大；脸皮厚。</li><li><strong>心臓に毛が生えている：</strong>非常に厚かましく、恥知らずで図々しい態度。<br>厚颜无耻。</li><li><strong>心臓が早鐘を打つ：</strong>激しい運動をしたり、不安や緊張のために動悸が速くなること。<br>激动得怦怦直跳。</li></ul><h2 id="腹（はら）"><a href="#腹（はら）" class="headerlink" title="腹（はら）"></a>腹（はら）</h2><ul><li><strong>腹の虫が治まらない：</strong>怒りを抑えきれない、癪に触って我慢ならない。<br>控制不住自己的感情，难以压抑住心中的怒火。</li><li><strong>腹も身の内：</strong>腹も体の一部だから大切に扱わなくてはならない、暴飲暴食をすると必ず体を壊してしまう。<br>食不过量，不可暴饮暴食哦。</li><li><strong>腹を括る：</strong>覚悟を決める。<br>做好觉悟了。</li><li><strong>腹を割って話す；</strong>一切、隠し立てしないで本心を話す·包み隠すことなく心の中をすべて見せて話す。<br>相信对方，推心置腹，打开天窗说亮话。</li><li><strong>痛くもない腹を探られる：</strong>別に悪いことしてないのに他人から疑われること、迷惑な気分を巧みに言い表した比喩表現です。<br>无缘无故受到猜疑。</li><li><strong>自腹を切る：</strong>公や会社あるいは共同で出すような金を，あえて自分で負担する。<br>自己掏腰包。</li><li><strong>私腹を肥やす：</strong>（地位や職権を悪用して）自分の利益を追い求める、私財を増やす。<br>谋取私利。</li></ul><h2 id="胴（どう）"><a href="#胴（どう）" class="headerlink" title="胴（どう）"></a>胴（どう）</h2><ul><li><strong>胴上げ：</strong>喜びや祝福を表すために，大勢の人間が祝福される人の体を抱え上げて何度も空中に投げ上げること。<br>为了表示祝贺，众人把祝贺对象抛起来。</li><li><strong>胴震い：</strong>寒さ、恐怖感、興奮のために体がガタガタ震える様子。<br>由于寒冷、恐怖、兴奋等原因而身体颤动。</li><li><strong>胴忘れ：</strong>普段はよく知っている物事や人名、物の名前などを忘れてしまって、なかなか思い出せないこと。<br>话都到喉咙了突然忘记，还真的是常有的事╮(╯▽╰)╭。</li></ul><h2 id="背中（せなか）"><a href="#背中（せなか）" class="headerlink" title="背中（せなか）"></a>背中（せなか）</h2><ul><li><strong>背中合わせ：</strong><ul><li>二人の人が，また物と物とが背と背を合わせて，互いに後ろ向きになっていること。</li><li>背と腹のように互いに裏表の関係にあること。</li><li>仲が悪いこと。<br>三个意思：1.两者中的一者；2.表里联系密切，二者必有一个；3.关系不好。</li></ul></li><li><strong>背中が見える：</strong>もう、今にも手の届く範囲にライバルがいるという意味で使われます。<br>经过努力终于赶上对手了。</li><li><strong>背中に風を受ける：</strong>追い風に乗って物事を順調に捗る。<br>如有神力相助，顺利进展。</li><li><strong>背中を押す：</strong>行動しようかどうか迷ったり躊躇ったりしている人に、最後の一押しをする、決断を促す、などの意味で使われる表現。<br>有时候我们需要别人在自己背后推一把。</li><li><strong>背中を見て育つ：</strong>親が黙って生き方の模範を子供に示すという意味になります。<br>孩子们都是学自己父母的，父母的言行会潜移默化的影响子女。</li><li><strong>背中を向ける：</strong>興味のない様子、無関心な態度。さらに、もう少し強い意味になると「相手に従わらない、拒否の態度を示す」ことも意味します。<br>不加理睬，不关心；不顺从，违背。</li><li><strong>背に腹は変えられない：</strong>より重大な事のためには、他の小さな事は多少は犠牲にしても仕方がない。<br>为了重要的事情，小的牺牲是在所难免的，值得的。</li></ul><h2 id="腰（こし）"><a href="#腰（こし）" class="headerlink" title="腰（こし）"></a>腰（こし）</h2><ul><li><strong>腰を折る：</strong><ul><li>腰をかがめる。体を前に曲げる。</li><li>中途で妨げる。</li><li>頭を下げる。屈服する。<br>三个意思：弯腰；中途妨碍；低头屈服。</li></ul></li><li><strong>腰が重い：</strong>なかなか行動に移そうとしない、いつまでもたっても働こうとしない。<br>懒得动。</li><li><strong>腰を据える：</strong><ul><li>どっかりとすわり込む。すっかり落ち着く。</li><li>一つの事に全力を集中させる。<br>两个意思：1.安下心来；2.专心致志做一件事。</li></ul></li><li><strong>腰を抜かす：</strong><ul><li>腰に力が入らず立てなくなる。</li><li>あまりの驚きに足腰が立たなくなる。<br>两个意思：1.直不起腰；2.惊呆了。</li></ul></li><li><strong>物腰が柔らかい：</strong>「人に対する態度が穏やかな、人に向ける態度や言動ややさしく丁寧な」という意味です。<br>待人接物温和。</li><li><strong>本腰を入れる：</strong>本気で物事に取り込もうとする腰構え。<br>拿起你的干劲来刚Ψ(￣∀￣)Ψ。</li></ul><h2 id="尻（しり）"><a href="#尻（しり）" class="headerlink" title="尻（しり）"></a>尻（しり）</h2><ul><li><strong>尻こそばゆい：</strong><ul><li>くすぐったい。</li><li>ほめられるなどして，照れ臭い。<br>痒；难为情的。</li></ul></li><li><strong>尻が長い：</strong>いつまでも座り込んでいて、なかなか席を立とうとしない長居の客を指す。<br>久坐不走。</li><li><strong>尻に帆を掛ける：</strong>あわてて逃げ出す。<br>仓皇逃跑。</li><li><strong>尻を拭う：</strong>他人の失敗などの後始末をする。<br>替别人善后，处理残局。</li><li><strong>尻を捲る：</strong>威嚇するような態度に出る。<br>态度突变，翻脸。</li><li><strong>尻を持ち込む：</strong>関係者に問題を持ち込み責任を問い、解決を迫る。<br>追究责任。</li><li><strong>尻尾を出す：</strong>隠していた事や、ごまかしていた事がばれてしまう。<br>露出狐狸尾巴。</li><li><strong>尻尾を振る：</strong>こびへつらう。<br>阿谀奉承拍马屁。</li><li><strong>尻尾を巻く：</strong>立ち向かう気持ちをなくす。降参する。<br>夹着尾巴逃走。</li></ul><h2 id="腕（うで）"><a href="#腕（うで）" class="headerlink" title="腕（うで）"></a>腕（うで）</h2><ul><li><strong>腕が立つ：</strong>技量がきわめて優れている。<br>技术高超，厉害啊。</li><li><strong>腕に縒りを掛ける：</strong>自分の能力を最大限に発揮しようとしてはりきる。<br>竭尽全力，本当の力を見せてやろうか(╯‵□′)╯炸弹！•••*～●。</li><li><strong>朝雨は女の腕捲り：</strong>朝雨はすぐにあがるものだから，女の腕まくりと同様，大して気にかけることはない。<br>还成不了气候不值得太在意。不可滥用哦，不然会以为是被鄙视了的人强烈反击。</li></ul><h2 id="肘（ひじ）"><a href="#肘（ひじ）" class="headerlink" title="肘（ひじ）"></a>肘（ひじ）</h2><ul><li><strong>肘鉄砲を食わせる：</strong><ul><li>肘の端で突きのける。</li><li>相手の誘いや要求を強くはねつける。<br>用肘用力顶对方；严厉拒绝。</li></ul></li><li><strong>肘を張る：</strong>肘を突っ張って、いかにも強そうな様子をする。威張る。<br>（双手叉腰）向两方支开胳膊肘，神气十足。</li></ul><h2 id="手（て）"><a href="#手（て）" class="headerlink" title="手（て）"></a>手（て）</h2><ul><li><strong>あの手この手：</strong>一つのことに対して、次々と色々な方法を試してみるという意味です。「手」は「手段」の意味で使われている例です。<br>千方百计。</li><li><strong>手に余る：</strong>ここの「手」は「能力」という意味ですから「物事が自分の処理能力を超えている」ことを言います。<br>解决不了。</li><li><strong>手を切る：</strong>「関係を断ち切る、縁を切る」という意味ですが、特に「悪い関係や男女関係を清算する」という意味で使われます。<br>断绝关系。</li><li><strong>手を組む：</strong>お互いに力を貸し合う。<br>联手。</li><li><strong>手を貸す：</strong>援助する。非常に忙しくて、たとえどんな手助けでも欲しい時は「猫の手も借りたい」と言います。<br>帮忙。</li><li><strong>手を抜く：</strong>ここの「手」は「手間、手数」のことを指しますから「手を抜く」は手数を省く。<br>偷工减料，潦草行事。</li></ul><h2 id="指（ゆび）"><a href="#指（ゆび）" class="headerlink" title="指（ゆび）"></a>指（ゆび）</h2><ul><li><strong>指一本も差させない：</strong>他人の非難・干渉を少しも許さない。<br>不让别人干预。</li><li><strong>指折り数える：</strong>指を一本ずつ折って数えること。<br>屈指计算天数。</li><li><strong>指切り：</strong><ul><li>約束を必ず守るしるしとして，互いの小指を曲げて掛け，「指切りげんまんうそついたら針千本のます」などと唱えあうこと。げんまん。</li><li>主に男女の仲で，愛情や約束の不変を誓って小指の先を切ること。<br>纯真与浪漫的约定方式，拉小指起誓。</li></ul></li><li><strong>指をくわえる：</strong>うらやましく思いながら，何もできずにいる。<br>羡慕哦。</li></ul><h2 id="爪（つめ）"><a href="#爪（つめ）" class="headerlink" title="爪（つめ）"></a>爪（つめ）</h2><ul><li><strong>爪に火を点す：</strong>きわめて倹約した生活をする。貧しく苦しい生活をする。または、非常に吝嗇である。<br>过分节俭。</li><li><strong>爪の垢を煎じて飲む：</strong>立派な人にあやかって、せめて爪の垢程度でもその人に近づくように頑張ってみる。<br>模仿并盼望赶上优秀的人。</li><li><strong>爪を隠す：</strong>才能を表面に出さない。<br>深藏不露。</li><li><strong>爪を研ぐ：</strong>心中に野心を秘めて機会を待ち構えている。<br>跃跃欲试。</li><li><strong>爪弾き：</strong>他人を嫌って排斥すること。仲間はずれにすること。<br>嫌恶，排斥，把某人当外人。</li></ul><h2 id="身（み）"><a href="#身（み）" class="headerlink" title="身（み）"></a>身（み）</h2><ul><li><strong>身を粉にする：</strong>身がすり減って粉になってしまうほど苦労をいとわず一生懸命働くことを言います。<br>粉身碎骨，不辞劳苦，拼命实现有车有房有老婆的梦想（雾）。</li><li><strong>身を引く：</strong>これまでの地位、立場からしりぞく。<br>隐退，退位，辞职。</li><li><strong>身を持ち崩す：</strong>品行が悪く，だらしのない生活をするようになる。<br>邋遢的生活，品行恶劣，身败名裂。</li></ul><h2 id="骨（ほね）"><a href="#骨（ほね）" class="headerlink" title="骨（ほね）"></a>骨（ほね）</h2><ul><li><strong>骨が折れる：</strong>困難である。労力を要する。<br>费力气的。</li><li><strong>骨身を惜しまず：</strong>苦労や面倒をいとわない、たとえ厄介なことでも力を出し惜しみしない。<br>不辞辛苦去做。</li><li><strong>骨身に沁みる：</strong>体の奥まで沁み通るように強く感じられる。<br>刻骨铭心。</li><li><strong>骨までしゃぶる：</strong>とことん人を利用し尽くす、徹底的に人から搾り取る。<br>吸干油水，榨干。（榨汁姬ヽ(*。&gt;Д&lt;)o゜*)）。</li><li><strong>骨抜きにする：</strong><ul><li>計画や案などから肝心の部分を抜き去り，内容のないものにすること。</li><li>気骨や節操などをなくさせること。<br>1.就像抽去核心的东西，内容显得空洞；2.失去原则，迷失。</li></ul></li></ul><h2 id="肝（きも）"><a href="#肝（きも）" class="headerlink" title="肝（きも）"></a>肝（きも）</h2><ul><li><strong>肝が太い：</strong>少々のことでは物事に動じない、大胆不敵の意味です。<br>胆子大。</li><li><strong>肝を潰す：</strong>びっくり仰天する。非常に驚く。<br>吓死了。</li></ul><h2 id="腸（はらわた）"><a href="#腸（はらわた）" class="headerlink" title="腸（はらわた）"></a>腸（はらわた）</h2><ul><li><strong>腸が腐る；</strong>精神が堕落する。根性も気骨もなくなる。<br>灵魂腐朽与堕落了。</li><li><strong>腸がちぎれる：</strong>悲しみや，つらさに耐えきれない。<br>悲痛欲绝，肝肠寸断。</li></ul><hr><h1 id="下身"><a href="#下身" class="headerlink" title="下身"></a>下身</h1><h2 id="膝（ひざ）"><a href="#膝（ひざ）" class="headerlink" title="膝（ひざ）"></a>膝（ひざ）</h2><ul><li><strong>膝を屈する：</strong>屈服する。<br>屈服。</li><li><strong>膝を進める：</strong>体を前に進めて相手に近づく。乗り気になる。<br>感兴趣。</li><li><strong>膝を打つ：</strong>何かを急に思いついたり、ふと良い知恵が浮かんだ時や、感心したときに思わずポンと膝を叩くことです。<br>忽然想起某事或表示钦佩时拍大腿。</li><li><strong>膝が笑う：</strong>「長い急斜面や山道を降り続けると、だんだんひざの関節が疲れてきて、足がガクガクする感覚は「膝が笑う」と形容します。<br>两腿发软。</li></ul><h2 id="脛（すね）"><a href="#脛（すね）" class="headerlink" title="脛（すね）"></a>脛（すね）</h2><ul><li><strong>脛を齧る（かじる）：</strong>一人前の年齢になってからも、まだ経済的に自立できないで親に依存している状態を指します。<br>啃老族的情况。</li><li><strong>脛に疵持つ：</strong>昔の悪事を隠している、やましい隠し事がある。<br>心中有愧，藏有不能为人说的事。</li></ul><h2 id="足（あし）"><a href="#足（あし）" class="headerlink" title="足（あし）"></a>足（あし）</h2><ul><li><strong>足が地に着かない：</strong><ul><li>うれしさに，興奮して落ち着かないさまをいう。</li><li>考えや行動がしっかりしていない。<br>高兴的忘乎所以；想法脱离实际。</li></ul></li><li><strong>足が遠のく：</strong>今までは頻繁に訪ねていたのに、最近はすっかりご無沙汰している。<br>疏远。</li><li><strong>足元にも及ばない：</strong>自分と比較すると相手が立派過ぎて、とてもそばには近づけないという意味です。<br>望尘莫及。</li><li><strong>足元を見る：</strong>相手の弱点を見抜いて自分に有利なように利用する。<br>抓住对手的把柄、弱点。</li></ul><hr><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="涙（なみだ）"><a href="#涙（なみだ）" class="headerlink" title="涙（なみだ）"></a>涙（なみだ）</h2><ul><li><strong>うれし涙：</strong>人間は不思議な存在ですから悲しい時だけではなく、うれしくても涙を流します。嬉しさのあんまり感動して流す涙をうれし涙と言います。<br>感动的泪水/(ㄒoㄒ)/。</li><li><strong>血の涙：</strong>非常につらい時、悲しい時に流す涙。<br>无限悲伤的泪，不要让喜欢你的人与你喜欢的人伤心落泪哦。</li><li><strong>貰い涙：</strong>人は感情の動物ですから、笑いや涙は感染するのです。人が泣いているのを見て悲しさが伝染して自分も一緒になって泣くことを貰い涙と言います。</li><li><strong>涙にくれる：</strong>涙を流しながら暗い気持ちで日を送る。<br>每天以泪洗面。</li><li><strong>涙を呑む：</strong>くやしさ、無念さをじっとこらえる。<br>饮泣，忍住痛苦。</li><li><strong>涙を振るう：</strong>涙が流れるのを振りはらう。個人的な同情や私情を振り捨てる。<br>拭去眼泪，摒弃私情。</li></ul><h2 id="血（ち）"><a href="#血（ち）" class="headerlink" title="血（ち）"></a>血（ち）</h2><ul><li><strong>血が騒ぐ：</strong>興奮して、気持ちが高ぶり、じっとしていられなくなる状態を表します。<br>心情激动。</li><li><strong>血を見る：</strong>争いで血が流れる。争いで死傷者が出る。<br>发生流血事件。</li><li><strong>血も涙もない：</strong>熱い血や涙を持っているとは思えない、冷酷で人情のかけらもない態度を言います。<br>冷酷无情，没有人性。</li><li><strong>血を吐く思い：</strong>非常につらい思い。<br>非常悲痛。</li><li><strong>血と汗の結晶：</strong>大変な苦労を積み重ね、苦労の末にやつとなし遂げた成果。<br>来之不易的辛勤汗水的结晶，需怀敬畏之心。</li></ul><h2 id="息（いき）"><a href="#息（いき）" class="headerlink" title="息（いき）"></a>息（いき）</h2><ul><li><strong>息が切れる：</strong><ul><li>呼吸が激しくなって苦しくなる。あえぐ。 </li><li>物事を長く続けられなくなる。</li><li>呼吸が止まる。息が絶える。死ぬ。<br>气喘吁吁；难以持续下去；气绝，死亡。</li></ul></li><li><strong>息を詰める：</strong>極度に緊張して思わず息を止めてしまう。<br>紧张过头忘记呼吸啦。</li><li><strong>息の根を止める：</strong><ul><li>殺す。</li><li>再起できないほど，相手をとことんまで打ち負かす。<br>杀死；击垮。</li></ul></li><li><strong>息を殺す：</strong>そこにいることを悟られないように気配を消している様子を指します。<br>屏住呼吸。</li></ul><h1 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h1><h3 id="我要累死了"><a href="#我要累死了" class="headerlink" title="我要累死了"></a>我要累死了</h3><blockquote><p>声明：本站所有文章均为原创或翻译，遵循<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en" target="_blank" rel="external">署名 - 非商业性使用 - 禁止演绎 4.0 国际许可协议</a>，如需转载请确保您对该协议有足够了解，并附上作者名 (Tsukasa) 及原文地址</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;这篇文章就当个小词典吧，称不上总结，只是简单整理《身体表现词典》讲到的一些惯用语。基本上是按照从头到脚的顺序整理的，请大家随意食用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;头部&lt;/li&gt;
&lt;li&gt;上身&lt;/li&gt;
&lt;li&gt;下身&lt;/li&gt;
&lt;li&gt;其他&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="兴趣爱好" scheme="http://blog.tsukasa.moe/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="日语" scheme="http://blog.tsukasa.moe/tags/%E6%97%A5%E8%AF%AD/"/>
    
  </entry>
  
</feed>
